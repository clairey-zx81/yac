openapi: 3.0.3
info:
  title: Anomaly Detection API
  description: >
    Anomaly Detection - which falls into the portfolio of OCI AI Services - can
    help Enterprise customers integrate AI into their products immediately by
    using our proven,

    pre-trained/custom models or containers, and without a need to set up in house team of AI and ML experts.

    This allows enterprises to focus on business drivers and development work rather than AI/ML operations, shortening the time to market.
  version: "20210101"
  license:
    name: UPL-1.0
    url: https://oss.oracle.com/licenses/upl/
externalDocs:
  description: Find out more about Anomaly Detection API
  url: https://docs.oracle.com/en-us/iaas/api/#/en/anomalydetection/20210101/
servers:
- url: https://anomalydetection.aiservice.{{region}}.oci.oraclecloud.com/20210101
paths:
  /actions/detectAnomalies:
    post:
      description: Make a detect call with an anomaly model and detection data
      operationId: DetectAnomalies
      parameters:
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectAnomaliesDetails"
        description: >
          The input is either:
            - JSON object in the request. This object is defined and SDK will generate the
              object for it
            - Data embedded as base64 string in format of either
              - CSV
              - JSON
              If this option is chosen then customer has to provide the content of specified
              CSV or JSON in base64 encoded string. The Embedded JSON will still has to be
              in same format as inline request JSON
        required: true
      responses:
        "200":
          description: The anomaly model has predicted successfully.
          headers:
            opc-request-id:
              &a1
              description: >
                Unique Oracle-assigned identifier for the request. If you need
                to contact

                Oracle about a particular request, please provide the request ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnomalyDetectResult"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Detect Anomalies with an anomaly model and detection data
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
  /aiPrivateEndpoints:
    get:
      description: >
        Returns a list of all the AI private endpoints in the specified
        compartment.
      operationId: ListAiPrivateEndpoints
      parameters:
        - $ref: "#/components/parameters/CompartmentIdQueryParam"
        - $ref: "#/components/parameters/PrivateEndpointLifecycleStateQueryParam"
        - $ref: "#/components/parameters/DisplayNameQueryParam"
        - $ref: "#/components/parameters/AiPrivateEndpointIdentifierQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/SortOrderQueryParam"
        - $ref: "#/components/parameters/SortByQueryParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: A page of AiPrivateEndpoint objects.
          headers:
            opc-next-page:
              &a3
              description: >
                For pagination of a list of items. When paging through a list,
                if this header appears in the response,

                then a partial list might have been returned. Include this value as the `page` parameter for the

                subsequent GET request to get the next batch of items.
              schema:
                type: string
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AiPrivateEndpointCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Lists all the AI private endpoints in the specified compartment
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/AiPrivateEndpointCollection"
    post:
      description: Create a new private reverse connection endpoint.
      operationId: CreateAiPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAiPrivateEndpointDetails"
        description: The information used to create the private reverse connection.
        required: true
      responses:
        "202":
          description: Accepted the request. The private reverse connection endpoint will
            be created.
          headers:
            opc-request-id: *a1
            opc-work-request-id:
              &a2
              description: >
                Unique Oracle-assigned identifier for the asynchronous request.
                You can use this to query status of the asynchronous operation.
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Create a new private reverse connection endpoint.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/AiPrivateEndpoint"
  "/aiPrivateEndpoints/{aiPrivateEndpointId}":
    delete:
      description: Deletes a private reverse connection endpoint by identifier.
      operationId: DeleteAiPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/AiPrivateEndpointIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "202":
          description: Accepted the request. The private reverse connection will be deleted.
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Delete a private reverse connection endpoint.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/AiPrivateEndpoint"
    get:
      description: Gets a specific private reverse connection by identifier.
      operationId: GetAiPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/AiPrivateEndpointIdentifierPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: Retrieves the private reverse connection with given id.
          headers:
            etag:
              &a4
              description: |
                For optimistic concurrency control. See `if-match`.
              schema:
                type: string
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AiPrivateEndpoint"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Get private reverse connection endpoint.
      tags:
        - AnomalyDetection
    put:
      description: Updates the private reverse connection endpoint.
      operationId: UpdateAiPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/AiPrivateEndpointIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAiPrivateEndpointDetails"
        description: The information to be updated in private reverse connection
        required: true
      responses:
        "202":
          description: Accepted the request. The private reverse connection will be updated.
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Update the private reverse connection endpoint identified by the id.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/AiPrivateEndpoint"
  "/aiPrivateEndpoints/{aiPrivateEndpointId}/actions/changeCompartment":
    post:
      description: Moves a resource into a different compartment. When provided, 'If-Match'
        is checked against 'ETag' values of the resource.
      operationId: ChangeAiPrivateEndpointCompartment
      parameters:
        - $ref: "#/components/parameters/AiPrivateEndpointIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeAiPrivateEndpointCompartmentDetails"
        description: Details for the target compartment.
        required: true
      responses:
        "202":
          description: Request has been accepted for changing compartment of private
            endpoint resource
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Moves a resource into a different compartment. When provided, 'If-Match'
        is checked against 'ETag' values of the resource.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/AiPrivateEndpoint"
  /dataAssets:
    get:
      description: |
        Returns a list of DataAssets.
      operationId: ListDataAssets
      parameters:
        - $ref: "#/components/parameters/CompartmentIdQueryParam"
        - $ref: "#/components/parameters/ProjectIdQueryParam"
        - $ref: "#/components/parameters/DisplayNameQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/DataAssetLifecycleStateQueryParam"
        - $ref: "#/components/parameters/SortOrderQueryParam"
        - $ref: "#/components/parameters/SortByQueryParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: A page of DataAssetSummary objects.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataAssetCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Gets a list of all DataAssets in a compartment
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/DataAssetCollection"
    post:
      description: |
        Creates a new DataAsset.
      operationId: CreateDataAsset
      parameters:
        - $ref: "#/components/parameters/RetryTokenHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDataAssetDetails"
        description: Details for the new DataAsset.
        required: true
      responses:
        "200":
          description: The DataAsset was successfully created.
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataAsset"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Creates a new DataAsset
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/DataAsset"
  "/dataAssets/{dataAssetId}":
    delete:
      description: Deletes a DataAsset resource by identifier
      operationId: DeleteDataAsset
      parameters:
        - $ref: "#/components/parameters/DataAssetIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "204":
          description: The DataAsset was successfully deleted.
          headers:
            opc-request-id: *a1
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Delete a provisioned DataAsset
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/DataAsset"
    get:
      description: Gets a DataAsset by identifier
      operationId: GetDataAsset
      parameters:
        - $ref: "#/components/parameters/DataAssetIdentifierPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: Retrieves the DataAsset with the given id
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataAsset"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Get DataAsset
      tags:
        - AnomalyDetection
    put:
      description: Updates the DataAsset
      operationId: UpdateDataAsset
      parameters:
        - $ref: "#/components/parameters/DataAssetIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDataAssetDetails"
        description: The information to be updated.
        required: true
      responses:
        "200":
          description: The DataAsset was successfully updated.
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataAsset"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Update the DataAsset identified by the id
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/DataAsset"
  "/dataAssets/{dataAssetId}/actions/changeCompartment":
    post:
      description: Changing the compartment of a data asset.
      operationId: ChangeDataAssetCompartment
      parameters:
        - $ref: "#/components/parameters/DataAssetIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeDataAssetCompartmentDetails"
        description: The information to be updated.
        required: true
      responses:
        "204":
          description: Retrieves the DataAsset with the given id
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataAsset"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "500":
          $ref: "#/components/responses/500"
      summary: Change Data Asset Compartment
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/DataAsset"
  /models:
    get:
      description: |
        Returns a list of Models.
      operationId: ListModels
      parameters:
        - $ref: "#/components/parameters/CompartmentIdQueryParam"
        - $ref: "#/components/parameters/ProjectIdQueryParam"
        - $ref: "#/components/parameters/ModelLifecycleStateQueryParam"
        - $ref: "#/components/parameters/DisplayNameQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/SortOrderQueryParam"
        - $ref: "#/components/parameters/ModelSortByQueryParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: A page of ModelSummary objects.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Gets a list of all Models in a compartment
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
    post:
      description: |
        Creates a new Model.
      operationId: CreateModel
      parameters:
        - $ref: "#/components/parameters/RetryTokenHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModelDetails"
        description: Details for the new Model.
        required: true
      responses:
        "201":
          description: The request was successfully received and the model creation is in
            progress.
          headers:
            etag: *a4
            location:
              &a5
              description: >
                The URI that identifies the entity described in the response
                body.
              schema:
                type: string
            opc-request-id: *a1
            opc-work-request-id: *a2
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Creates a new Model for training with the training data
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
  "/models/{modelId}":
    delete:
      description: Deletes an ai model resource by identifier. This operation fails with a
        409 error unless all associated resources are in a DELETED state. You
        must delete all associated resources before deleting a project.
      operationId: DeleteModel
      parameters:
        - $ref: "#/components/parameters/ModelIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "202":
          description: Accepted the request. The Model will be deleted.
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Delete a provisioned Model
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
    get:
      description: Gets a Model by identifier
      operationId: GetModel
      parameters:
        - $ref: "#/components/parameters/ModelIdentifierPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: Retrieves the Model with the given id
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Get a Model
      tags:
        - AnomalyDetection
    put:
      description: Updates the Model
      operationId: UpdateModel
      parameters:
        - $ref: "#/components/parameters/ModelIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateModelDetails"
        description: The information to be updated.
        required: true
      responses:
        "202":
          description: The model resource is being updated.
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Update the Model identified by the id
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
  "/models/{modelId}/actions/changeCompartment":
    post:
      description: Moves a Model resource from one compartment to another. When provided,
        If-Match is checked against ETag values of the resource.
      operationId: ChangeModelCompartment
      parameters:
        - $ref: "#/components/parameters/ModelIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeModelCompartmentDetails"
        description: The information to be updated.
        required: true
      responses:
        "204":
          description: The model was successfully moved to the specified compartment.
          headers:
            opc-request-id: *a1
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "500":
          $ref: "#/components/responses/500"
      summary: Moves a resource into a different compartment.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Model"
  /projects:
    get:
      description: |
        Returns a list of  Projects.
      operationId: ListProjects
      parameters:
        - $ref: "#/components/parameters/CompartmentIdQueryParam"
        - $ref: "#/components/parameters/ProjectLifecycleStateQueryParam"
        - $ref: "#/components/parameters/DisplayNameQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/SortOrderQueryParam"
        - $ref: "#/components/parameters/ProjectSortByQueryParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: A page of Project Summary objects.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Gets a list of all Projects in a compartment.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Project"
    post:
      description: |
        Creates a new Project.
      operationId: CreateProject
      parameters:
        - $ref: "#/components/parameters/RetryTokenHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectDetails"
        description: Details for the new Project.
        required: true
      responses:
        "200":
          description: Project created successfully.
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Creates a new Project in the compartment.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Project"
  "/projects/{projectId}":
    delete:
      description: Deletes a Project resource by identifier. This operation fails with a
        409 error unless all associated resources (models deployments or data
        assets) are in a DELETED state. You must delete all associated resources
        before deleting a project.
      operationId: DeleteProject
      parameters:
        - $ref: "#/components/parameters/ProjectIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "202":
          description: Accepted the request. The Project will be deleted.
          headers:
            opc-request-id: *a1
            opc-work-request-id: *a2
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Delete a provisioned Project
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Project"
    get:
      description: Gets a Project by identifier
      operationId: GetProject
      parameters:
        - $ref: "#/components/parameters/ProjectIdentifierPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: Retrieves the Project with the given id
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Get Project
      tags:
        - AnomalyDetection
    put:
      description: Updates the Project
      operationId: UpdateProject
      parameters:
        - $ref: "#/components/parameters/ProjectIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectDetails"
        description: The information to be updated.
        required: true
      responses:
        "200":
          description: Retrieves the Project with the given id
          headers:
            etag: *a4
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Update the Project identified by the id
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Project"
  "/projects/{projectId}/actions/changeCompartment":
    post:
      description: Moves a Project resource from one compartment to another. When provided,
        If-Match is checked against ETag values of the resource.
      operationId: ChangeProjectCompartment
      parameters:
        - $ref: "#/components/parameters/ProjectIdentifierPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/RetryTokenHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeProjectCompartmentDetails"
        description: The details to change the compartment of the project.
        required: true
      responses:
        "204":
          description: The project was successfully moved to the specified compartment.
          headers:
            opc-request-id: *a1
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "500":
          $ref: "#/components/responses/500"
      summary: Moves a resource into a different compartment.
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/Project"
  /workRequests:
    get:
      description: |
        Lists the work requests in a compartment.
      operationId: ListWorkRequests
      parameters:
        - $ref: "#/components/parameters/CompartmentIdQueryParam"
        - $ref: "#/components/parameters/WorkRequestIdQueryParam"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
      responses:
        "200":
          description: The list is being retrieved.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRequestSummaryCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: List Work Requests
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/WorkRequest"
  "/workRequests/{workRequestId}":
    delete:
      description: Cancel work request with the given ID.
      operationId: CancelWorkRequest
      parameters:
        - $ref: "#/components/parameters/WorkRequestIdPathParam"
        - $ref: "#/components/parameters/IfMatchHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "202":
          description: The work request will be cancelled.
          headers:
            opc-request-id: *a1
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "412":
          $ref: "#/components/responses/412"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Cancel the work request
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/WorkRequest"
    get:
      description: Gets the status of the work request with the given ID.
      operationId: GetWorkRequest
      parameters:
        - $ref: "#/components/parameters/WorkRequestIdPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
      responses:
        "200":
          description: The detail of the work request.
          headers:
            etag: *a4
            opc-request-id: *a1
            retry-after:
              &a6
              description: A decimal number representing the number of seconds the client
                should wait before polling this endpoint again.
              schema:
                type: number
                format: float
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRequest"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: GET Work Request Status
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/WorkRequest"
  "/workRequests/{workRequestId}/errors":
    get:
      description: |
        Return a (paginated) list of errors for a given work request.
      operationId: ListWorkRequestErrors
      parameters:
        - $ref: "#/components/parameters/WorkRequestIdPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/omponents/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
      responses:
        "200":
          description: List of work request errors.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRequestErrorCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Lists work request errors
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/WorkRequestError"
  "/workRequests/{workRequestId}/logs":
    get:
      description: |
        Return a (paginated) list of logs for a given work request.
      operationId: ListWorkRequestLogs
      parameters:
        - $ref: "#/components/parameters/WorkRequestIdPathParam"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/PaginationTokenQueryParam"
        - $ref: "#/components/parameters/PaginationLimitQueryParam"
      responses:
        "200":
          description: List of work request logs.
          headers:
            opc-next-page: *a3
            opc-request-id: *a1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRequestLogEntryCollection"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        default:
          $ref: "#/components/responses/default"
      summary: Lists work request logs
      tags:
        - AnomalyDetection
      x-related-resource: "#/definitions/WorkRequestLogEntry"
tags:
  - description: API operations for anomaly detection
    name: AnomalyDetection
x-anchors:
  x-headers:
    etag: *a4
    location: *a5
    opc-next-page: *a3
    opc-request-id: *a1
    opc-work-request-id: *a2
    retry-after: *a6
  x-properties:
    definedTags:
      &a7
      additionalProperties:
        additionalProperties:
          description: >
            The value of the tag. Only string, integer and boolean types are
            supported.
          type: object
        description: >
          Key-value pair representing predefined tags' keys and values scoped to
          a namespace.

          Example: `{"bar-key": "value"}`
        type: object
      description: >
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace.

        Example: `{"foo-namespace": {"bar-key": "value"}}`
      type: object
    freeformTags:
      &a8
      additionalProperties:
        type: string
      description: >
        Simple key-value pair that is applied without any predefined name, type
        or scope. Exists for cross-compatibility only.

        Example: `{"bar-key": "value"}`
      type: object
    systemTags:
      &a9
      additionalProperties:
        description: >
          Key-value pair representing system tags' keys and values scoped to a
          namespace.

          Example: `{"bar-key": "value"}`
        type: object
      description: >
        Usage of system tag keys. These predefined keys are scoped to
        namespaces.

        Example: `{ "orcl-cloud": { "free-tier-retained": "true" } }`
      type: object
x-oracle-package: com.oracle.pic.ocas
components:
  parameters:
    AiPrivateEndpointIdentifierPathParam:
      description: Unique private reverse connection identifier.
      in: path
      name: aiPrivateEndpointId
      required: true
      schema:
        type: string
    AiPrivateEndpointIdentifierQueryParam:
      description: unique AiPrivateEndpoint identifier
      in: query
      name: id
      x-default-description: "null"
      schema:
        type: string
    CompartmentIdQueryParam:
      description: The ID of the compartment in which to list resources.
      in: query
      name: compartmentId
      required: true
      schema:
        type: string
    DataAssetIdentifierPathParam:
      description: The OCID of the Data Asset.
      in: path
      name: dataAssetId
      required: true
      schema:
        type: string
    DataAssetLifecycleStateQueryParam:
      description: |
        <b>Filter</b> results by the specified lifecycle state. Must be a valid
        state for the resource type.
      in: query
      name: lifecycleState
      required: false
      x-default-description: "null"
      x-obmcs-enumref: "#/definitions/DataAsset/lifecycleState"
      schema:
        type: string
    DisplayNameQueryParam:
      description: A filter to return only resources that match the entire display name
        given.
      in: query
      name: displayName
      x-default-description: "null"
      schema:
        type: string
        minLength: 1
        maxLength: 255
    IfMatchHeader:
      description: |
        For optimistic concurrency control. In the PUT or DELETE call
        for a resource, set the `if-match` parameter to the value of the
        etag from a previous GET or POST response for that resource.
        The resource will be updated or deleted only if the etag you
        provide matches the resource's current etag value.
      in: header
      name: if-match
      required: false
      schema:
        type: string
    ModelIdQueryParam:
      description: The ID of the trained model for which to list the resources.
      in: query
      name: modelId
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
    ModelIdentifierPathParam:
      description: The OCID of the Model.
      in: path
      name: modelId
      required: true
      schema:
        type: string
    ModelLifecycleStateQueryParam:
      description: |
        <b>Filter</b> results by the specified lifecycle state. Must be a valid
        state for the resource type.
      in: query
      name: lifecycleState
      required: false
      x-default-description: "null"
      x-obmcs-enumref: "#/definitions/Model/lifecycleState"
      schema:
        type: string
    ModelSortByQueryParam:
      description: >
        Specifies the field to sort by. Accepts only one field.

        By default, when you sort by `timeCreated`, the results are shown

        in descending order. When you sort by `displayName`, the results are

        shown in ascending order. Sort order for the `displayName` field is case sensitive.
      in: query
      name: sortBy
      required: false
      x-default-description: timeCreated
      schema:
        type: string
        enum:
          - timeCreated
          - displayName
    PaginationLimitQueryParam:
      description: The maximum number of items to return.
      in: query
      name: limit
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 10
    PaginationTokenQueryParam:
      description: The page token representing the page at which to start retrieving
        results. This is usually retrieved from a previous list call.
      in: query
      name: page
      schema:
        type: string
        minLength: 1
    PrivateEndpointLifecycleStateQueryParam:
      description: |
        <b>Filter</b> results by the specified lifecycle state. Must be a valid
        state for the resource type.
      in: query
      name: lifecycleState
      required: false
      x-default-description: "null"
      x-obmcs-enumref: "#/definitions/AiPrivateEndpoint/lifecycleState"
      schema:
        type: string
    ProjectIdQueryParam:
      description: The ID of the project for which to list the objects.
      in: query
      name: projectId
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 255
    ProjectIdentifierPathParam:
      description: The OCID of the Project.
      in: path
      name: projectId
      required: true
      schema:
        type: string
    ProjectLifecycleStateQueryParam:
      description: |
        <b>Filter</b> results by the specified lifecycle state. Must be a valid
        state for the resource type.
      in: query
      name: lifecycleState
      required: false
      x-default-description: "null"
      x-obmcs-enumref: "#/definitions/Project/lifecycleState"
      schema:
        type: string
    ProjectSortByQueryParam:
      description: >
        Specifies the field to sort by. Accepts only one field.

        By default, when you sort by `timeCreated`, the results are shown

        in descending order. When you sort by `displayName`, the results are

        shown in ascending order. Sort order for the `displayName` field is case sensitive.
      in: query
      name: sortBy
      required: false
      x-default-description: timeCreated
      schema:
        type: string
        enum:
          - timeCreated
          - displayName
    RequestIdHeader:
      description: The client request ID for tracing.
      in: header
      name: opc-request-id
      schema:
        type: string
    RetryTokenHeader:
      description: >
        A token that uniquely identifies a request so it can be retried in case
        of a timeout or

        server error without risk of executing that same action again. Retry tokens expire after 24

        hours, but can be invalidated before then due to conflicting operations. For example, if a resource

        has been deleted and purged from the system, then a retry of the original creation request

        might be rejected.
      in: header
      name: opc-retry-token
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 64
    SortByQueryParam:
      description: >
        The field to sort by. Only one sort order may be provided. Default order
        for timeCreated is descending. Default order for displayName is
        ascending. If no value is specified timeCreated is default.
      in: query
      name: sortBy
      schema:
        type: string
        enum:
          - timeCreated
          - displayName
        default: timeCreated
    SortOrderQueryParam:
      description: The sort order to use, either 'asc' or 'desc'.
      in: query
      name: sortOrder
      x-obmcs-top-level-enum: "#/definitions/SortOrder"
      schema:
        type: string
        enum:
          &a12
          - ASC
          - DESC
        default: ASC
    WorkRequestIdPathParam:
      description: The ID of the asynchronous request.
      in: path
      name: workRequestId
      required: true
      schema:
        type: string
    WorkRequestIdQueryParam:
      description: The ID of the asynchronous work request.
      in: query
      name: workRequestId
      x-default-description: "null"
      schema:
        type: string
  responses:
    "400":
      description: Bad Request
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "401":
      description: Unauthorized
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "404":
      description: Not Found
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "409":
      description: Conflict
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "412":
      description: Precondition failed
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "429":
      description: Too Many Requests
      headers:
        opc-reuest-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "500":
      description: Internal Server Error
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    default:
      description: Unknown Error
      headers:
        opc-request-id: *a1
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    ActionType:
      description: Possible types of actions.
      enum:
        &a15
        - CREATED
        - UPDATED
        - DELETED
        - IN_PROGRESS
        - RELATED
      type: string
    AiPrivateEndpoint:
      description: A private network reverse connection creates a connection from service
        to customer subnet over a private network.
      properties:
        attachedDataAssets:
          description: The list of dataAssets using the private reverse connection endpoint.
          items:
            maxLength: 255
            minLength: 1
            type: string
          type: array
        compartmentId:
          description: Compartment Identifier.
          type: string
        definedTags: *a7
        displayName:
          description: Private Reverse Connection Endpoint display name.
          maxLength: 255
          minLength: 1
          type: string
        dnsZones:
          description: >
            List of DNS zones to be used by the data assets.

            Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
          items:
            maxLength: 253
            minLength: 1
            type: string
          maxItems: 30
          minItems: 1
          type: array
        freeformTags: *a8
        id:
          description: Unique identifier that is immutable.
          type: string
        lifecycleDetails:
          description: A message describing the current state in more detail. For example,
            can be used to provide actionable information for a resource in
            'Failed' state.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The current state of the private endpoint resource.
          enum:
            - CREATING
            - UPDATING
            - ACTIVE
            - DELETING
            - DELETED
            - FAILED
          type: string
        subnetId:
          description: Subnet Identifier
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the private endpoint was created. An
            [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime
            string.
          format: date-time
          type: string
        timeUpdated:
          description: The time the private endpoint was updated. An
            [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime
            string.
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - subnetId
        - dnsZones
      type: object
    AiPrivateEndpointCollection:
      description: A collection of AI Service PrivateEndpoints Each item is a AI Service
        PrivateEndpoint Summary object.
      properties:
        items:
          description: List of AI Service PrivateEndpoint.
          items:
            $ref: "#/components/schemas/AiPrivateEndpointSummary"
          type: array
      required:
        - items
      type: object
    AiPrivateEndpointSummary:
      description: A private network reverse connection creates a connection from service
        to customer subnet over a private network.
      properties:
        compartmentId:
          description: Identifier of the compartment this private endpoint belongs to.
          type: string
        definedTags: *a7
        displayName:
          description: Mutable name of the Private Reverse Connection Endpoint.
          maxLength: 255
          minLength: 1
          type: string
        dnsZones:
          description: >
            List of DNS zones to be used by the data assets.

            Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
          items:
            maxLength: 253
            minLength: 1
            type: string
          maxItems: 30
          minItems: 1
          type: array
        freeformTags: *a8
        id:
          description: Unique identifier that is immutable.
          type: string
        lifecycleDetails:
          description: A message describing the current state in more detail. For example,
            can be used to provide actionable information for a resource in
            'Failed' state.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The current state of the private endpoint resource.
          example: ACTIVE
          type: string
          x-obmcs-enumref: "#/definitions/AiPrivateEndpoint/lifecycleState"
        subnetId:
          description: Subnet Identifier.
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the private endpoint was created. An
            [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime
            string.
          format: date-time
          type: string
        timeUpdated:
          description: The time the private endpoint was updated. An
            [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime
            string.
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - subnetId
        - dnsZones
      type: object
    Anomaly:
      description: An object to hold value information for each anomaly point
      properties:
        actualValue:
          description: The actual value for the anomaly point at given signal and
            timestamp/row
          format: double
          type: number
        anomalyScore:
          description: A significant score ranged from 0 to 1 to each anomaly point
          format: double
          maximum: 1
          minimum: 0
          type: number
        estimatedValue:
          description: The estimated value for the anomaly point at given signal and
            timestamp/row
          format: double
          type: number
        imputedValue:
          description: The value imputed by one of IDP step for missing values in origin
            data
          format: double
          type: number
        signalName:
          description: Name of a signal where current anomaly point belongs to
          maxLength: 255
          minLength: 1
          type: string
      required:
        - signalName
        - actualValue
        - estimatedValue
        - anomalyScore
      type: object
    AnomalyDetectResult:
      description: Results of the detect anomalies call.
      properties:
        detectionResults:
          description: A list to hold anomaly points grouped by timestamp/row.
          items:
            $ref: "#/components/schemas/DetectionResultItem"
          minItems: 0
          type: array
      required:
        - detectionResults
      type: object
    ChangeAiPrivateEndpointCompartmentDetails:
      description: Information about the change compartment for the  private endpoint
        resource.
      properties:
        compartmentId:
          description: The identifier of the compartment where the resource should be moved.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
      type: object
    ChangeDataAssetCompartmentDetails:
      description: Details for changing the compartment of a data asset.
      properties:
        compartmentId:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            compartment into which the resource should be moved.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
      type: object
    ChangeModelCompartmentDetails:
      description: Details for changing the compartment of a model.
      properties:
        compartmentId:
          description: >
            The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            compartment

            into which the resource should be moved.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
      type: object
    ChangeProjectCompartmentDetails:
      description: Details for changing the compartment of a project.
      properties:
        compartmentId:
          description: >
            The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            compartment

            into which the resource should be moved.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
      type: object
    CreateAiPrivateEndpointDetails:
      description: Information about the new private endpoint resource.
      properties:
        compartmentId:
          description: Compartment identifier.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        displayName:
          description: Display name of the private endpoint resource being created.
          maxLength: 255
          minLength: 1
          type: string
        dnsZones:
          description: >
            List of DNS zones to be used by the data assets.

            Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
          items:
            maxLength: 253
            minLength: 1
            type: string
          maxItems: 30
          minItems: 1
          type: array
        freeformTags: *a8
        subnetId:
          description: |
            The OCID of subnet to which the reverse connection is to be created.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - subnetId
        - dnsZones
        - compartmentId
      type: object
    CreateDataAssetDetails:
      description: |
        Parameters needed to create a new data asset.
      properties:
        compartmentId:
          description: The OCID for the data asset's compartment.
          maxLength: 255
          minLength: 1
          type: string
        dataSourceDetails:
          $ref: "#/components/schemas/DataSourceDetails"
        definedTags: *a7
        description:
          description: A short description of the Ai data asset
          maxLength: 255
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        privateEndpointId:
          description: OCID of Private Endpoint.
          maxLength: 255
          minLength: 1
          type: string
        projectId:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            project to associate with the data asset.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
        - projectId
        - dataSourceDetails
      type: object
    CreateModelDetails:
      description: The information needed to train a new model
      properties:
        compartmentId:
          description: The OCID for the ai model's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the ai model.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
           information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        modelTrainingDetails:
          $ref: "#/components/schemas/ModelTrainingDetails"
        projectId:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            project to associate with the model.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - compartmentId
        - projectId
        - modelTrainingDetails
      type: object
    CreateProjectDetails:
      description: >
        Parameters needed to create a new project. Projects enable users to
        organize their work.
      properties:
        compartmentId:
          description: The OCID for the project's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the project.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
      required:
        - compartmentId
      type: object
    DataAsset:
      description: Description of DataAsset.
      properties:
        compartmentId:
          description: The OCID of the compartment containing the DataAsset.
          maxLength: 255
          minLength: 1
          type: string
        dataSourceDetails:
          $ref: "#/components/schemas/DataSourceDetails"
        definedTags: *a7
        description:
          description: A short description of the data asset.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly name. Does not have to be unique, and it's
            changeable. Avoid entering confidential information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: The Unique Oracle ID (OCID) that is immutable on creation.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The lifecycle state of the Data Asset.
          enum:
            - ACTIVE
            - DELETED
          maxLength: 25
          minLength: 1
          type: string
        privateEndpointId:
          description: OCID of Private Endpoint.
          maxLength: 255
          minLength: 1
          type: string
        projectId:
          description: The Unique project id which is created at project creation that is
            immutable on creation.
          maxLength: 255
          minLength: 1
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the the DataAsset was created. An RFC3339 formatted
            datetime string
          format: date-time
          type: string
        timeUpdated:
          description: The time the the DataAsset was updated. An RFC3339 formatted
            datetime string
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - displayName
        - lifecycleState
        - projectId
        - timeCreated
        - dataSourceDetails
      type: object
    DataAssetCollection:
      description: Results of a dataAsset search. Contains both DataAssetSummary items and
        other data.
      properties:
        items:
          description: List of dataAssets.
          items:
            $ref: "#/components/schemas/DataAssetSummary"
          type: array
      required:
        - items
      type: object
    DataAssetSummary:
      description: Summary of the DataAsset.
      properties:
        compartmentId:
          description: Compartment Identifier
          maxLength: 255
          minLength: 1
          type: string
        dataSourceType:
          description: Data source type where actually data asset is being stored
          enum:
            &a10
            - ORACLE_OBJECT_STORAGE
            - ORACLE_ATP
            - INFLUX
          type: string
          x-obmcs-top-level-enum: "#/definitions/DataSourceType"
        definedTags: *a7
        description:
          description: A short description of the Ai data asset
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: DataAsset Identifier, can be renamed
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: Unique identifier that is immutable on creation
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The current state of the data asset.
          type: string
          x-obmcs-enumref: "#/definitions/DataAsset/lifecycleState"
        privateEndpointId:
          description: OCID of Private Endpoint.
          maxLength: 255
          minLength: 1
          type: string
        projectId:
          description: Unique identifier for a project that is immutable on creation
          maxLength: 255
          minLength: 1
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the the DataAsset was created. An RFC3339 formatted
            datetime string
          format: date-time
          type: string
        timeUpdated:
          description: The time the the DataAsset was updated. An RFC3339 formatted
            datetime string
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - projectId
        - dataSourceType
        - displayName
        - timeCreated
      type: object
    DataItem:
      description: Simple object representing signal values at a certain point in time.
      properties:
        timestamp:
          description: Nullable string representing timestamp.
          format: date-time
          type: string
          x-default-description: "null"
        values:
          description: Array of double precision values.
          items:
            format: double
            type: number
          maxItems: 256
          minItems: 1
          type: array
      required:
        - values
      type: object
    DataSourceDetails:
      description: Possible data sources
      discriminator:
        propertyName: dataSourceType
      properties:
        dataSourceType:
          description: Data source type where actually data asset is being stored
          enum: *a10
          type: string
          x-obmcs-top-level-enum: "#/definitions/DataSourceType"
      required:
        - dataSourceType
      type: object
    DataSourceDetailsATP:
      allOf:
        - $ref: "#/components/schemas/DataSourceDetails"
        - discriminator:
            propertyName: ORACLE_ATP
          properties:
            atpPasswordSecretId:
              description: atp db password Secret Id
              maxLength: 255
              minLength: 1
              type: string
            atpUserName:
              description: atp db user name
              maxLength: 255
              minLength: 1
              type: string
            cwalletFileSecretId:
              description: OCID of the secret containing the containers certificates of ATP
                wallet
              maxLength: 255
              minLength: 1
              type: string
            databaseName:
              description: atp database name
              maxLength: 255
              minLength: 1
              type: string
            ewalletFileSecretId:
              description: OCID of the secret containing the PDB'S certificates of ATP
                wallet
              maxLength: 255
              minLength: 1
              type: string
            keyStoreFileSecretId:
              description: OCID of the secret containing Keystore.jks file of the ATP wallet
              maxLength: 255
              minLength: 1
              type: string
            ojdbcFileSecretId:
              description: OCID of the secret that contains jdbc properties file of ATP
                wallet
              maxLength: 255
              minLength: 1
              type: string
            tableName:
              description: atp database table name
              maxLength: 255
              minLength: 1
              type: string
            tnsnamesFileSecretId:
              description: OCID of the secret that contains the tnsnames file of ATP wallet
              maxLength: 255
              minLength: 1
              type: string
            truststoreFileSecretId:
              description: OCID of the secret containing truststore.jks file of the ATP
                wallet
              maxLength: 255
              minLength: 1
              type: string
            walletPasswordSecretId:
              description: wallet password Secret ID in String format
              maxLength: 255
              minLength: 1
              type: string
      description: Data Source details for ATP
      type: object
    DataSourceDetailsInflux:
      allOf:
        - $ref: "#/components/schemas/DataSourceDetails"
        - discriminator:
            propertyName: INFLUX
          properties:
            measurementName:
              description: Measurement name for influx
              maxLength: 255
              minLength: 1
              type: string
            passwordSecretId:
              description: Password Secret Id for the influx connection
              maxLength: 255
              minLength: 1
              type: string
            url:
              description: public IP address and port to influx DB
              maxLength: 255
              minLength: 1
              type: string
            userName:
              description: Username for connection to Influx
              maxLength: 255
              minLength: 1
              type: string
            versionSpecificDetails:
              $ref: "#/components/schemas/InfluxDetails"
          required:
            - versionSpecificDetails
            - userName
            - passwordSecretId
            - measurementName
            - url
      description: Data Source details for influx.
      type: object
    DataSourceDetailsObjectStorage:
      allOf:
        - $ref: "#/components/schemas/DataSourceDetails"
        - discriminator:
            propertyName: ORACLE_OBJECT_STORAGE
          properties:
            bucketName:
              description: Object storage bucket name
              maxLength: 255
              minLength: 1
              type: string
            namespace:
              description: Object storage namespace
              maxLength: 255
              minLength: 1
              type: string
            objectName:
              description: File name
              maxLength: 1024
              minLength: 1
              type: string
      description: Data Source details for object storage
      type: object
    DataSourceType:
      description: Possible data sources
      enum: *a10
      type: string
    DetectAnomaliesDetails:
      description: >
        Base class for the DetectAnomalies call. It contains the identifier that
        will

        be used for deciding what type of request this is.
      discriminator:
        propertyName: requestType
      properties:
        modelId:
          description: The OCID of the trained model。
          type: string
        requestType:
          description: >
            Type of request. This parameter will be filled autmatically by
            classes generated

            by the SDK. For raw curl request, user will have to provide this field.
          enum:
            - INLINE
            - BASE64_ENCODED
          type: string
      required:
        - modelId
        - requestType
      type: object
    DetectionResultItem:
      description: An object to hold detection result for one timestamp/row.
      properties:
        anmalies:
          description: An array of anomalies associated with a given timestamp/row.
          items:
            $ref: "#/components/schemas/Anomaly"
          minItems: 1
          type: array
        rowIndex:
          description: The index number to indicate where anomaly points are located among
            all rows when there are no timestamps provided.
          minimum: 0
          type: integer
        score:
          description: A significant score across multiple signals at timestamp/row level
          format: double
          maximum: 1
          minimum: 0
          type: number
        timestamp:
          description: The time stamp associated with a list of anomaly points, format
            defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
          format: date-time
          type: string
      required:
        - anomalies
      type: object
    EmbeddedDetectAnomaliesRequest:
      allOf:
        - $ref: "#/components/schemas/DetectAnomaliesDetails"
        - discriminator:
            propertyName: BASE64_ENCODED
          properties:
            content:
              format: byte
              maxLength: 1280000
              minLength: 1
              type: string
            contentType:
              default: CSV
              enum:
                - CSV
                - JSON
              type: string
          required:
            - content
      description: >
        The request body when the user selects to provide byte data in detect
        call which is Base64 encoded.

        The default type of the data is CSV and can be JSON by setting the 'contentType'.
      type: object
    Error:
      description: Error Information.
      properties:
        code:
          description: A short error code that defines the error, meant for programmatic
            parsing.
          type: string
        message:
          description: A human-readable error string.
          type: string
      required:
        - code
        - message
    InfluxDetails:
      description: Possible data sources
      discriminator:
        propertyName: influxVersion
      properties:
        influxVersion:
          description: Data source type where actually data asset is being stored
          enum:
            &a11
            - V_1_8
            - V_2_0
          type: string
          x-obmcs-top-level-enum: "#/definitions/InfluxVersion"
      required:
        - influxVersion
      type: object
    InfluxDetailsV1v8:
      allOf:
        - $ref: "#/components/schemas/InfluxDetails"
        - discriminator:
            propertyName: V_1_8
          properties:
            databaseName:
              description: DB Name for influx connection
              maxLength: 255
              minLength: 1
              type: string
            retentionPolicyName:
              description: retention policy is how long the bucket would last
              maxLength: 255
              minLength: 1
              type: string
          required:
            - databaseName
      description: Influx details for V_1_8.
      type: object
    InfluxDetailsV2v0:
      allOf:
        - $ref: "#/components/schemas/InfluxDetails"
        - discriminator:
            propertyName: V_2_0
          properties:
            bucketName:
              description: Bucket Name for influx connection
              maxLength: 255
              minLength: 1
              type: string
            organizationName:
              description: Org name for the influx db
              maxLength: 255
              minLength: 1
              type: string
          required:
            - bucketName
            - organizationName
      description: Influx details for V_2_0.
      type: object
    InfluxVersion:
      description: Possible data sources
      enum: *a11
      type: string
    InlineDetectAnomaliesRequest:
      allOf:
        - $ref: "#/components/schemas/DetectAnomaliesDetails"
        - discriminator:
            propertyName: INLINE
          properties:
            data:
              description: Array containing data.
              items:
                $ref: "#/components/schemas/DataItem"
              maxItems: 100
              minItems: 1
              type: array
            signalNames:
              description: List of signal names.
              items:
                type: string
              maxItems: 256
              minItems: 1
              type: array
          required:
            - signalNames
            - data
      description: >
        This is the specialised JSON format that we accept as Training data,
        with an additional

        field for 'requestType' which is a required field used deciding whether it is an inline

        request or contains embedded data.
      type: object
    Model:
      description: Description of Model.
      properties:
        compartmentId:
          description: The OCID for the model's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the Model.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: The OCID of the model that is immutable on creation.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleDetails:
          description: A message describing the current state in more detail. For example,
            can be used to provide actionable information for a resource in
            Failed state.
          maxLength: 400
          minLength: 1
          type: string
        lifecycleState:
          description: The state of the model.
          enum:
            - DELETING
            - DELETED
            - FAILED
            - CREATING
            - ACTIVE
            - UPDATING
          maxLength: 25
          minLength: 1
          type: string
        modelTrainingDetails:
          $ref: "#/components/schemas/ModelTrainingDetails"
        modelTrainingResults:
          $ref: "#/components/schemas/ModelTrainingResults"
        projectId:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            project to associate with the model.
          maxLength: 255
          minLength: 1
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the the Model was created. An RFC3339 formatted datetime
            string.
          format: date-time
          type: string
        timeUpdated:
          description: The time the Model was updated. An RFC3339 formatted datetime string.
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - projectId
        - displayName
        - timeCreated
        - lifecycleState
        - modelTrainingDetails
        - modelTrainingResults
      type: object
    ModelCollection:
      description: Results of a model search. Contains ModelSummary items.
      properties:
        items:
          description: List of models
          items:
            $ref: "#/components/schemas/ModelSummary"
          type: array
      required:
        - items
      type: object
    ModelSummary:
      description: Summary of the Model.
      properties:
        compartmentId:
          description: The OCID for the model's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the Model.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            model.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The state of the model.
          type: string
          x-obmcs-enumref: "#/definitions/Model/lifecycleState"
        modelTrainingDetails:
          $ref: "#/components/schemas/ModelTrainingDetails"
        modelTrainingResults:
          $ref: "#/components/schemas/ModelTrainingResults"
        projectId:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            project to associate with the model.
          maxLength: 255
          minLength: 1
          type: string
        systemTags: *a9
        timeCreated:
          description: The time the the Model was created. An RFC3339 formatted datetime
            string.
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - displayName
        - timeCreated
        - lifecycleState
        - projectId
      type: object
    ModelTrainingDetails:
      description: Specifies the details of the MSET model during the create call.
      properties:
        dataAssetIds:
          description: The list of OCIDs of the data assets to train the model. The
            dataAssets have to be in the same project where the ai model would
            reside.
          items:
            maxLength: 255
            minLength: 1
            type: string
          maxItems: 1
          minItems: 1
          type: array
        targetFap:
          default: 0.01
          description: A target model accuracy metric user provides as their requirement
          format: float
          maximum: 0.05
          minimum: 0
          type: number
        trainingFraction:
          default: 0.7
          description: Fraction of total data that is used for training the model. The
            remaining is used for validation of the model.
          format: float
          maximum: 0.8
          minimum: 0.5
          type: number
      required:
        - dataAssetIds
      type: object
    ModelTrainingResults:
      description: Specifies the details for an Anomaly Detection model trained with MSET.
      properties:
        fap:
          description: The final-achieved model accuracy metric on individual value level
          format: float
          maximum: 1
          minimum: 0
          type: number
        isTrainingGoalAchieved:
          description: A boolean value to indicate if train goal/targetFap is achieved for
            trained model
          type: boolean
        multivariateFap:
          description: The model accuracy metric on timestamp level.
          format: float
          maximum: 1
          minimum: 0
          type: number
        rowReductionDetails:
          $ref: "#/components/schemas/RowReductionDetails"
        signalDetails:
          description: The list of signal details.
          items:
            $ref: "#/components/schemas/PerSignalDetails"
          type: array
        warning:
          description: A warning message to explain the reason when targetFap cannot be
            achieved for trained model
          maxLength: 255
          minLength: 1
          type: string
      required:
        - fap
      type: object
    OperationStatus:
      description: Possible operation status.
      enum:
        &a14
        - ACCEPTED
        - IN_PROGRESS
        - FAILED
        - WAITING
        - SUCCEEDED
        - CANCELING
        - CANCELED
      type: string
    OperationType:
      description: Possible operation types.
      enum:
        &a13
        - CREATE_MODEL
        - UPDATE_MODEL
        - DELETE_MODEL
        - CREATE_PRIVATE_ENDPOINT
        - DELETE_PRIVATE_ENDPOINT
        - UPDATE_PRIVATE_ENDPOINT
        - MOVE_PRIVATE_ENDPOINT
      type: string
    PerSignalDetails:
      description: Detailed information like statistics, metrics and status for a signal
      properties:
        details:
          description: detailed information for a signal.
          maxLength: 255
          minLength: 1
          type: string
        fap:
          description: Accuracy metric for a signal.
          format: float
          maximum: 1
          minimum: 0
          type: number
        isQuantized:
          description: A boolean value to indicate if a signal is quantized or not.
          type: boolean
        max:
          description: Max value within a signal.
          format: double
          type: number
        min:
          description: Min value within a signal.
          format: double
          type: number
        mviRatio:
          description: The ratio of missing values in a signal filled/imputed by the IDP
            algorithm.
          format: double
          type: number
        signalName:
          description: The name of a signal.
          maxLength: 255
          minLength: 1
          type: string
        status:
          description: >
            Status of the signal:
             * ACCEPTED - the signal is used for training the model
             * DROPPED - the signal does not meet requirement, and is dropped before training the model.
             * OTHER - placeholder for other status
          enum:
            - ACCEPTED
            - DROPPED
            - OTHER
          type: string
        std:
          description: Standard deviation of values within a signal.
          format: double
          type: number
      required:
        - signalName
        - min
        - max
        - std
        - status
      type: object
    Project:
      description: Project enable users to organize their resources.
      properties:
        compartmentId:
          description: The OCID for the project's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the project.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: The OCID of the project that is immutable on creation.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The lifecycle state of the Project.
          enum:
            - ACTIVE
            - CREATING
            - FAILED
            - DELETING
            - DELETED
            - UPDATING
          maxLength: 25
          minLength: 1
          type: string
        systemTags: *a9
        timeCreated:
          description: The date and time the resource was created in the timestamp format
            defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
          example: 2019-08-25 21:10:29.410000+00:00
          format: date-time
          type: string
        timeUpdated:
          description: The date and time the resource was updated in the timestamp format
            defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
          example: 2019-08-25 21:10:29.410000+00:00
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - displayName
        - timeCreated
        - lifecycleState
      type: object
    ProjectCollection:
      description: Results of a projects list search. Contains Project objects.
      properties:
        items:
          description: List of projects
          items:
            $ref: "#/components/schemas/ProjectSummary"
          type: array
      required:
        - items
      type: object
    ProjectSummary:
      description: Summary of the Project.
      properties:
        compartmentId:
          description: The OCID for the project's compartment.
          maxLength: 255
          minLength: 1
          type: string
        definedTags: *a7
        description:
          description: A short description of the project.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
        id:
          description: The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
            project.
          maxLength: 255
          minLength: 1
          type: string
        lifecycleState:
          description: The state of the project.
          type: string
          x-obmcs-enumref: "#/definitions/Project/lifecycleState"
        systemTags: *a9
        timeCreated:
          description: The date and time the resource was created in the timestamp format
            defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
          example: 2019-08-25 21:10:29.410000+00:00
          format: date-time
          type: string
        timeUpdated:
          description: The date and time the resource was updated in the timestamp format
            defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
          example: 2019-08-25 21:10:29.410000+00:00
          format: date-time
          type: string
      required:
        - id
        - compartmentId
        - displayName
        - timeCreated
        - lifecycleState
      type: object
    RowReductionDetails:
      description: Information regarding how/what row reduction methods will be applied. If
        this property is not present or is null, then it means row reduction is
        not applied.
      properties:
        isReductionEnabled:
          description: A boolean value to indicate if row reduction is applied
          type: boolean
        reductionMethod:
          description: |
            Method for row reduction:
              * DELETE_ROW - delete rows with equal intervals
              * AVERAGE_ROW - average multiple rows to one row
          enum:
            - DELETE_ROW
            - AVERAGE_ROW
          type: string
        reductionPercentage:
          description: A percentage to reduce data size down to on top of original data
          format: double
          type: number
      required:
        - isReductionEnabled
        - reductionPercentage
        - reductionMethod
      type: object
    SortOrder:
      description: Sort orders.
      enum: *a12
      type: string
    UpdateAiPrivateEndpointDetails:
      description: Information about the modified private endpoint resource.
      properties:
        definedTags: *a7
        displayName:
          description: Display name of the private endpoint resource.
          maxLength: 255
          minLength: 1
          type: string
        dnsZones:
          description: >
            List of DNS zones to be used by the data assets.

            Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
          items:
            maxLength: 253
            minLength: 1
            type: string
          maxItems: 30
          minItems: 1
          type: array
        freeformTags: *a8
      type: object
    UpdateDataAssetDetails:
      description: The information to be updated.
      properties:
        definedTags: *a7
        description:
          description: DataAsset description
          maxLength: 255
          minLength: 1
          type: string
        displayName:
          description: DataAsset Identifier
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
      type: object
    UpdateModelDetails:
      description: The information to be updated.
      properties:
        definedTags: *a7
        description:
          description: A short description of the ai model.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
      type: object
    UpdateProjectDetails:
      description: The information to be updated for the project.
      properties:
        definedTags: *a7
        description:
          description: A short description of the project.
          maxLength: 400
          minLength: 1
          type: string
        displayName:
          description: A user-friendly display name for the resource. It does not have to
            be unique and can be modified. Avoid entering confidential
            information.
          maxLength: 255
          minLength: 1
          type: string
        freeformTags: *a8
      type: object
    WorkRequest:
      description: A description of workrequest status
      properties:
        compartmentId:
          description: >
            The ocid of the compartment that contains the work request. Work
            requests should be scoped to

            the same compartment as the resource the work request affects. If the work request affects multiple resources,

            and those resources are not in the same compartment, it is up to the service team to pick the primary

            resource whose compartment should be used
          type: string
        id:
          description: The id of the work request.
          type: string
        operationType:
          description: Type of the work request
          enum: *a13
          type: string
          x-obmcs-top-level-enum: "#/definitions/OperationType"
        percentComplete:
          description: Percentage of the request completed.
          format: float
          type: number
        resources:
          description: The resources affected by this work request.
          items:
            $ref: "#/components/schemas/WorkRequestResource"
          type: array
        status:
          description: Status of current work request.
          enum: *a14
          type: string
          x-obmcs-top-level-enum: "#/definitions/OperationStatus"
        timeAccepted:
          description: |
            The date and time the request was created, as described in
            [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
          format: date-time
          type: string
        timeFinished:
          description: >
            The date and time the object was finished, as described in [RFC
            3339](https://tools.ietf.org/rfc/rfc3339).
          format: date-time
          type: string
        timeStarted:
          description: >
            The date and time the request was started, as described in [RFC
            3339](https://tools.ietf.org/rfc/rfc3339),

            section 14.29.
          format: date-time
          type: string
      required:
        - operationType
        - status
        - id
        - compartmentId
        - resources
        - percentComplete
        - timeAccepted
    WorkRequestError:
      description: An error encountered while executing a work request.
      properties:
        code:
          description: >
            A machine-usable code for the error that occured. Error codes are
            listed on

            (https://docs.cloud.oracle.com/Content/API/References/apierrors.htm)
          type: string
        message:
          description: A human readable description of the issue encountered.
          type: string
        timestamp:
          description: The time the error occured. An RFC3339 formatted datetime string.
          format: date-time
          type: string
      required:
        - code
        - message
        - timestamp
    WorkRequestErrorCollection:
      description: Results of a workRequestError search. Contains both WorkRequestError
        items and other information, such as metadata.
      properties:
        items:
          description: List of workRequestError objects.
          items:
            $ref: "#/components/schemas/WorkRequestError"
          type: array
      required:
        - items
      type: object
    WorkRequestLogEntry:
      description: A log message from the execution of a work request.
      properties:
        message:
          description: Human-readable log message.
          type: string
        timestamp:
          description: The time the log message was written. An RFC3339 formatted datetime
            string
          format: date-time
          type: string
      required:
        - message
        - timestamp
    WorkRequestLogEntryCollection:
      description: Results of a workRequestLog search. Contains both workRequestLog items
        and other information, such as metadata.
      properties:
        items:
          description: List of workRequestLogEntries.
          items:
            $ref: "#/components/schemas/WorkRequestLogEntry"
          type: array
      required:
        - items
      type: object
    WorkRequestResource:
      description: A resource created or operated on by a work request.
      properties:
        actionType:
          description: >
            The way in which this resource is affected by the work tracked in
            the work request.

            A resource being created, updated, or deleted will remain in the IN_PROGRESS state until

            work is complete for that resource at which point it will transition to CREATED, UPDATED,

            or DELETED, respectively.
          enum: *a15
          type: string
          x-obmcs-top-level-enum: "#/definitions/ActionType"
        entityType:
          description: The resource type the work request affects.
          type: string
        entityUri:
          description: The URI path that the user can do a GET on to access the resource
            metadata
          type: string
        identifier:
          description: The identifier of the resource the work request affects.
          type: string
      required:
        - actionType
        - entityType
        - identifier
    WorkRequestSummary:
      description: A summary of the status of a work request.
      properties:
        compartmentId:
          description: >
            The ocid of the compartment that contains the work request. Work
            requests should be scoped to

            the same compartment as the resource the work request affects. If the work request affects multiple resources,

            and those resources are not in the same compartment, it is up to the service team to pick the primary

            resource whose compartment should be used
          type: string
        id:
          description: The id of the work request.
          type: string
        operationType:
          description: Type of the work request
          enum: *a13
          type: string
          x-obmcs-top-level-enum: "#/definitons/OperationType"
        percentComplete:
          description: Percentage of the request completed.
          format: float
          type: number
        resources:
          description: The resources affected by this work request.
          items:
            $ref: "#/components/schemas/WorkRequestResource"
          type: array
        status:
          description: Status of current work request.
          enum: *a14
          type: string
          x-obmcs-top-level-enum: "#/definitions/OperationStatus"
        timeAccepted:
          description: |
            The date and time the request was created, as described in
            [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
          format: date-time
          type: string
        timeFinished:
          description: >
            The date and time the object was finished, as described in [RFC
            3339](https://tools.ietf.org/rfc/rfc3339).
          format: date-time
          type: string
        timeStarted:
          description: >
            The date and time the request was started, as described in [RFC
            3339](https://tools.ietf.org/rfc/rfc3339),

            section 14.29.
          format: date-time
          type: string
      required:
        - operationType
        - status
        - id
        - compartmentId
        - resources
        - percentComplete
        - timeAccepted
    WorkRequestSummaryCollection:
      description: Results of a workRequest search. Contains both WorkRequest items and
        other information, such as metadata.
      properties:
        items:
          description: List of workRequestSummary objects.
          items:
            $ref: "#/components/schemas/WorkRequestSummary"
          type: array
      required:
        - items
      type: object
  securitySchemes:
    SignatureAuth:
      type: http
      scheme: SCRAM-SHA-256
security:
  - SignatureAuth: []
