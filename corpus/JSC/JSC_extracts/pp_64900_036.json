{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "action": {
      "default": "youtubeLiveStreamsInsert",
      "type": "hidden"
    },
    "options": {
      "additionalProperties": false,
      "properties": {
        "alt": {
          "description": "Data format for the response.",
          "title": "Alt",
          "type": "string"
        },
        "description": "A live stream describes a live ingestion point.",
        "fields": {
          "description": "Selector specifying which fields to include in a partial response.",
          "title": "Fields",
          "type": "string"
        },
        "key": {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "title": "Key",
          "type": "string"
        },
        "oauthToken": {
          "description": "OAuth 2.0 token for the current user.",
          "title": "Oauth Token",
          "type": "string"
        },
        "onBehalfOfContentOwner": {
          "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
          "title": "On Behalf Of Content Owner",
          "type": "string"
        },
        "onBehalfOfContentOwnerChannel": {
          "description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
          "title": "On Behalf Of Content Owner Channel",
          "type": "string"
        },
        "part": {
          "description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe part properties that you can include in the parameter value are id, snippet, cdn, and status.",
          "required": true,
          "title": "Part",
          "type": "string"
        },
        "prettyPrint": {
          "description": "Returns response with indentations and line breaks.",
          "title": "Pretty Print",
          "type": "boolean"
        },
        "properties": {
          "cdn": {
            "description": "Brief description of the live stream cdn settings.",
            "properties": {
              "format": {
                "description": "The format of the video stream that you are sending to Youtube.",
                "type": "string"
              },
              "ingestionInfo": {
                "description": "Describes information necessary for ingesting an RTMP or an HTTP stream.",
                "properties": {
                  "backupIngestionAddress": {
                    "description": "The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL.",
                    "type": "string"
                  },
                  "ingestionAddress": {
                    "description": "The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL.\n\nDepending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format:\n\nSTREAM_URL/STREAM_NAME",
                    "type": "string"
                  },
                  "streamName": {
                    "description": "The HTTP or RTMP stream name that YouTube assigns to the video stream.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ingestionType": {
                "description": "The method or protocol used to transmit the video stream.",
                "enum": [
                  "dash",
                  "rtmp"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "contentDetails": {
            "description": "Detailed settings of a stream.",
            "properties": {
              "closedCaptionsIngestionUrl": {
                "description": "The ingestion URL where the closed captions of this stream are sent.",
                "type": "string"
              },
              "isReusable": {
                "description": "Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times.\n\nIf you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways:  \n- A non-reusable stream can only be bound to one broadcast. \n- A non-reusable stream might be deleted by an automated process after the broadcast ends. \n- The  liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube assigns to uniquely identify the stream.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#liveStream",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\".",
            "type": "string"
          },
          "snippet": {
            "properties": {
              "channelId": {
                "description": "The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.",
                "type": "string"
              },
              "description": {
                "description": "The stream's description. The value cannot be longer than 10000 characters.",
                "type": "string"
              },
              "isDefaultStream": {
                "type": "boolean"
              },
              "publishedAt": {
                "description": "The date and time that the stream was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "title": {
                "description": "The stream's title. The value must be between 1 and 128 characters long.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "Brief description of the live stream status.",
            "properties": {
              "healthStatus": {
                "properties": {
                  "configurationIssues": {
                    "description": "The configurations issues on this stream",
                    "items": {
                      "properties": {
                        "description": {
                          "description": "The long-form description of the issue and how to resolve it.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The short-form reason for this issue.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "How severe this issue is to the stream.",
                          "enum": [
                            "error",
                            "info",
                            "warning"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "description": "The kind of error happening.",
                          "enum": [
                            "audioBitrateHigh",
                            "audioBitrateLow",
                            "audioBitrateMismatch",
                            "audioCodec",
                            "audioCodecMismatch",
                            "audioSampleRate",
                            "audioSampleRateMismatch",
                            "audioStereoMismatch",
                            "audioTooManyChannels",
                            "badContainer",
                            "bitrateHigh",
                            "bitrateLow",
                            "frameRateHigh",
                            "framerateMismatch",
                            "gopMismatch",
                            "gopSizeLong",
                            "gopSizeOver",
                            "gopSizeShort",
                            "interlacedVideo",
                            "multipleAudioStreams",
                            "multipleVideoStreams",
                            "noAudioStream",
                            "noVideoStream",
                            "openGop",
                            "resolutionMismatch",
                            "videoBitrateMismatch",
                            "videoCodec",
                            "videoCodecMismatch",
                            "videoIngestionStarved",
                            "videoInterlaceMismatch",
                            "videoProfileMismatch",
                            "videoResolutionSuboptimal",
                            "videoResolutionUnsupported"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "lastUpdateTimeSeconds": {
                    "description": "The last time this status was updated (in seconds)",
                    "format": "uint64",
                    "type": "string"
                  },
                  "status": {
                    "description": "The status code of this stream",
                    "enum": [
                      "bad",
                      "good",
                      "noData",
                      "ok",
                      "revoked"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "streamStatus": {
                "enum": [
                  "active",
                  "created",
                  "error",
                  "inactive",
                  "ready"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "quotaUser": {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
          "title": "Quota User",
          "type": "string"
        },
        "type": "object",
        "userIp": {
          "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
          "title": "User Ip",
          "type": "string"
        }
      },
      "title": "Youtube Live Streams Insert",
      "type": "object"
    }
  },
  "title": "Youtube Live Streams Insert",
  "type": "object"
}
