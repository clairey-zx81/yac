{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "action": {
      "default": "youtubePlaylistsList",
      "type": "hidden"
    },
    "options": {
      "additionalProperties": false,
      "properties": {
        "alt": {
          "description": "Data format for the response.",
          "title": "Alt",
          "type": "string"
        },
        "channelId": {
          "description": "This value indicates that the API should only return the specified channel's playlists.",
          "title": "Channel Id",
          "type": "string"
        },
        "fields": {
          "description": "Selector specifying which fields to include in a partial response.",
          "title": "Fields",
          "type": "string"
        },
        "hl": {
          "description": "The hl parameter should be used for filter out the properties that are not in the given language. Used for the snippet part.",
          "title": "Hl",
          "type": "string"
        },
        "id": {
          "description": "The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlist's YouTube playlist ID.",
          "title": "Id",
          "type": "string"
        },
        "key": {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "title": "Key",
          "type": "string"
        },
        "maxResults": {
          "description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
          "title": "Max Results",
          "type": "integer"
        },
        "mine": {
          "description": "Set this parameter's value to true to instruct the API to only return playlists owned by the authenticated user.",
          "title": "Mine",
          "type": "boolean"
        },
        "oauthToken": {
          "description": "OAuth 2.0 token for the current user.",
          "title": "Oauth Token",
          "type": "string"
        },
        "onBehalfOfContentOwner": {
          "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
          "title": "On Behalf Of Content Owner",
          "type": "string"
        },
        "onBehalfOfContentOwnerChannel": {
          "description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
          "title": "On Behalf Of Content Owner Channel",
          "type": "string"
        },
        "pageToken": {
          "description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
          "title": "Page Token",
          "type": "string"
        },
        "part": {
          "description": "The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties.",
          "required": true,
          "title": "Part",
          "type": "string"
        },
        "prettyPrint": {
          "description": "Returns response with indentations and line breaks.",
          "title": "Pretty Print",
          "type": "boolean"
        },
        "quotaUser": {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
          "title": "Quota User",
          "type": "string"
        },
        "userIp": {
          "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
          "title": "User Ip",
          "type": "string"
        }
      },
      "title": "Youtube Playlists List",
      "type": "object"
    }
  },
  "title": "Youtube Playlists List",
  "type": "object"
}
