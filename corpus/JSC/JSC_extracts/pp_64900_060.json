{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "action": {
      "default": "youtubeWatermarksSet",
      "type": "hidden"
    },
    "options": {
      "additionalProperties": false,
      "properties": {
        "alt": {
          "description": "Data format for the response.",
          "title": "Alt",
          "type": "string"
        },
        "channelId": {
          "description": "The channelId parameter specifies the YouTube channel ID for which the watermark is being provided.",
          "required": true,
          "title": "Channel Id",
          "type": "string"
        },
        "fields": {
          "description": "Selector specifying which fields to include in a partial response.",
          "title": "Fields",
          "type": "string"
        },
        "key": {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "title": "Key",
          "type": "string"
        },
        "oauthToken": {
          "description": "OAuth 2.0 token for the current user.",
          "title": "Oauth Token",
          "type": "string"
        },
        "onBehalfOfContentOwner": {
          "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
          "title": "On Behalf Of Content Owner",
          "type": "string"
        },
        "prettyPrint": {
          "description": "Returns response with indentations and line breaks.",
          "title": "Pretty Print",
          "type": "boolean"
        },
        "properties": {
          "imageBytes": {
            "format": "byte",
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "position": {
            "description": "Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.",
            "properties": {
              "cornerPosition": {
                "description": "Describes in which corner of the video the visual widget will appear.",
                "enum": [
                  "bottomLeft",
                  "bottomRight",
                  "topLeft",
                  "topRight"
                ],
                "type": "string"
              },
              "type": {
                "description": "Defines the position type.",
                "enum": [
                  "corner"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "targetChannelId": {
            "type": "string"
          },
          "timing": {
            "description": "Describes a temporal position of a visual widget inside a video.",
            "properties": {
              "durationMs": {
                "description": "Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.",
                "format": "uint64",
                "type": "string"
              },
              "offsetMs": {
                "description": "Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.",
                "format": "uint64",
                "type": "string"
              },
              "type": {
                "description": "Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.",
                "enum": [
                  "offsetFromEnd",
                  "offsetFromStart"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "quotaUser": {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
          "title": "Quota User",
          "type": "string"
        },
        "type": "object",
        "userIp": {
          "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
          "title": "User Ip",
          "type": "string"
        }
      },
      "title": "Youtube Watermarks Set",
      "type": "object"
    }
  },
  "title": "Youtube Watermarks Set",
  "type": "object"
}
