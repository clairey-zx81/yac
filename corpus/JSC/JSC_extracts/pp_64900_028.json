{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "action": {
      "default": "youtubeLiveBroadcastsInsert",
      "type": "hidden"
    },
    "options": {
      "additionalProperties": false,
      "properties": {
        "alt": {
          "description": "Data format for the response.",
          "title": "Alt",
          "type": "string"
        },
        "description": "A liveBroadcast resource represents an event that will be streamed, via live video, on YouTube.",
        "fields": {
          "description": "Selector specifying which fields to include in a partial response.",
          "title": "Fields",
          "type": "string"
        },
        "key": {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "title": "Key",
          "type": "string"
        },
        "oauthToken": {
          "description": "OAuth 2.0 token for the current user.",
          "title": "Oauth Token",
          "type": "string"
        },
        "onBehalfOfContentOwner": {
          "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
          "title": "On Behalf Of Content Owner",
          "type": "string"
        },
        "onBehalfOfContentOwnerChannel": {
          "description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
          "title": "On Behalf Of Content Owner Channel",
          "type": "string"
        },
        "part": {
          "description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe part properties that you can include in the parameter value are id, snippet, contentDetails, and status.",
          "required": true,
          "title": "Part",
          "type": "string"
        },
        "prettyPrint": {
          "description": "Returns response with indentations and line breaks.",
          "title": "Pretty Print",
          "type": "boolean"
        },
        "properties": {
          "contentDetails": {
            "description": "Detailed settings of a broadcast.",
            "properties": {
              "boundStreamId": {
                "description": "This value uniquely identifies the live stream bound to the broadcast.",
                "type": "string"
              },
              "enableClosedCaptions": {
                "description": "This setting indicates whether closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API.",
                "type": "boolean"
              },
              "enableContentEncryption": {
                "description": "This setting indicates whether YouTube should enable content encryption for the broadcast.",
                "type": "boolean"
              },
              "enableDvr": {
                "description": "This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true.\n\n\n\nImportant: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends.",
                "type": "boolean"
              },
              "enableEmbed": {
                "description": "This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video.",
                "type": "boolean"
              },
              "enableLowLatency": {
                "type": "boolean"
              },
              "monitorStream": {
                "description": "Settings and Info of the monitor stream",
                "properties": {
                  "broadcastStreamDelayMs": {
                    "description": "If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.",
                    "format": "uint32",
                    "type": "integer"
                  },
                  "embedHtml": {
                    "description": "HTML code that embeds a player that plays the monitor stream.",
                    "type": "string"
                  },
                  "enableMonitorStream": {
                    "description": "This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints.\n\nYou need to set this value to true if you intend to have a broadcast delay for your event.\n\nNote: This property cannot be updated once the broadcast is in the testing or live state.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "recordFromStart": {
                "description": "Automatically start recording after the event goes live. The default value for this property is true.\n\n\n\nImportant: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback.",
                "type": "boolean"
              },
              "startWithSlate": {
                "description": "This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube assigns to uniquely identify the broadcast.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#liveBroadcast",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\".",
            "type": "string"
          },
          "snippet": {
            "properties": {
              "actualEndTime": {
                "description": "The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "actualStartTime": {
                "description": "The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "channelId": {
                "description": "The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.",
                "type": "string"
              },
              "description": {
                "description": "The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.",
                "type": "string"
              },
              "isDefaultBroadcast": {
                "type": "boolean"
              },
              "publishedAt": {
                "description": "The date and time that the broadcast was added to YouTube's live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "scheduledEndTime": {
                "description": "The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "scheduledStartTime": {
                "description": "The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "thumbnails": {
                "description": "Internal representation of thumbnails for a YouTube resource.",
                "properties": {
                  "default": {
                    "description": "A thumbnail is an image representing a YouTube resource.",
                    "properties": {
                      "height": {
                        "description": "(Optional) Height of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      },
                      "url": {
                        "description": "The thumbnail image's URL.",
                        "type": "string"
                      },
                      "width": {
                        "description": "(Optional) Width of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "high": {
                    "description": "A thumbnail is an image representing a YouTube resource.",
                    "properties": {
                      "height": {
                        "description": "(Optional) Height of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      },
                      "url": {
                        "description": "The thumbnail image's URL.",
                        "type": "string"
                      },
                      "width": {
                        "description": "(Optional) Width of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "maxres": {
                    "description": "A thumbnail is an image representing a YouTube resource.",
                    "properties": {
                      "height": {
                        "description": "(Optional) Height of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      },
                      "url": {
                        "description": "The thumbnail image's URL.",
                        "type": "string"
                      },
                      "width": {
                        "description": "(Optional) Width of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "medium": {
                    "description": "A thumbnail is an image representing a YouTube resource.",
                    "properties": {
                      "height": {
                        "description": "(Optional) Height of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      },
                      "url": {
                        "description": "The thumbnail image's URL.",
                        "type": "string"
                      },
                      "width": {
                        "description": "(Optional) Width of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "standard": {
                    "description": "A thumbnail is an image representing a YouTube resource.",
                    "properties": {
                      "height": {
                        "description": "(Optional) Height of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      },
                      "url": {
                        "description": "The thumbnail image's URL.",
                        "type": "string"
                      },
                      "width": {
                        "description": "(Optional) Width of the thumbnail image.",
                        "format": "uint32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "title": {
                "description": "The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "statistics": {
            "description": "Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.",
            "properties": {
              "concurrentViewers": {
                "description": "The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.",
                "format": "uint64",
                "type": "string"
              },
              "totalChatCount": {
                "description": "The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.",
                "format": "uint64",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "properties": {
              "lifeCycleStatus": {
                "description": "The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.",
                "enum": [
                  "abandoned",
                  "complete",
                  "completeStarting",
                  "created",
                  "live",
                  "liveStarting",
                  "ready",
                  "reclaimed",
                  "revoked",
                  "testStarting",
                  "testing"
                ],
                "type": "string"
              },
              "liveBroadcastPriority": {
                "description": "Priority of the live broadcast event (internal state).",
                "enum": [
                  "high",
                  "low",
                  "normal"
                ],
                "type": "string"
              },
              "privacyStatus": {
                "description": "The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.",
                "enum": [
                  "private",
                  "public",
                  "unlisted"
                ],
                "type": "string"
              },
              "recordingStatus": {
                "description": "The broadcast's recording status.",
                "enum": [
                  "notRecording",
                  "recorded",
                  "recording"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "topicDetails": {
            "properties": {
              "topics": {
                "items": {
                  "properties": {
                    "snippet": {
                      "properties": {
                        "name": {
                          "description": "The name of the topic.",
                          "type": "string"
                        },
                        "releaseDate": {
                          "description": "The date at which the topic was released. Filled for types: videoGame",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "The type of the topic.",
                      "enum": [
                        "videoGame"
                      ],
                      "type": "string"
                    },
                    "unmatched": {
                      "description": "If this flag is set it means that we have not been able to match the topic title and type provided to a known entity.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "quotaUser": {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
          "title": "Quota User",
          "type": "string"
        },
        "type": "object",
        "userIp": {
          "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
          "title": "User Ip",
          "type": "string"
        }
      },
      "title": "Youtube Live Broadcasts Insert",
      "type": "object"
    }
  },
  "title": "Youtube Live Broadcasts Insert",
  "type": "object"
}
