{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "action": {
      "default": "youtubeCommentsInsert",
      "type": "hidden"
    },
    "options": {
      "additionalProperties": false,
      "properties": {
        "alt": {
          "description": "Data format for the response.",
          "title": "Alt",
          "type": "string"
        },
        "description": "A comment represents a single YouTube comment.",
        "fields": {
          "description": "Selector specifying which fields to include in a partial response.",
          "title": "Fields",
          "type": "string"
        },
        "key": {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "title": "Key",
          "type": "string"
        },
        "oauthToken": {
          "description": "OAuth 2.0 token for the current user.",
          "title": "Oauth Token",
          "type": "string"
        },
        "part": {
          "description": "The part parameter identifies the properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.",
          "required": true,
          "title": "Part",
          "type": "string"
        },
        "prettyPrint": {
          "description": "Returns response with indentations and line breaks.",
          "title": "Pretty Print",
          "type": "boolean"
        },
        "properties": {
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the comment.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#comment",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
            "type": "string"
          },
          "snippet": {
            "description": "Basic details about a comment, such as its author and text.",
            "properties": {
              "authorChannelId": {
                "properties": {
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "authorChannelUrl": {
                "description": "Link to the author's YouTube channel, if any.",
                "type": "string"
              },
              "authorDisplayName": {
                "description": "The name of the user who posted the comment.",
                "type": "string"
              },
              "authorGoogleplusProfileUrl": {
                "description": "Link to the author's Google+ profile, if any.",
                "type": "string"
              },
              "authorProfileImageUrl": {
                "description": "The URL for the avatar of the user who posted the comment.",
                "type": "string"
              },
              "canRate": {
                "description": "Whether the current viewer can rate this comment.",
                "type": "boolean"
              },
              "channelId": {
                "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.",
                "type": "string"
              },
              "likeCount": {
                "description": "The total number of likes this comment has received.",
                "format": "uint32",
                "type": "integer"
              },
              "moderationStatus": {
                "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                "enum": [
                  "heldForReview",
                  "likelySpam",
                  "published",
                  "rejected"
                ],
                "type": "string"
              },
              "parentId": {
                "description": "The unique id of the parent comment, only set for replies.",
                "type": "string"
              },
              "publishedAt": {
                "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "textDisplay": {
                "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.",
                "type": "string"
              },
              "textOriginal": {
                "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.",
                "type": "string"
              },
              "updatedAt": {
                "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                "format": "date-time",
                "type": "string"
              },
              "videoId": {
                "description": "The ID of the video the comment refers to, if any.",
                "type": "string"
              },
              "viewerRating": {
                "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                "enum": [
                  "dislike",
                  "like",
                  "none",
                  "unspecified"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "quotaUser": {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
          "title": "Quota User",
          "type": "string"
        },
        "type": "object",
        "userIp": {
          "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
          "title": "User Ip",
          "type": "string"
        }
      },
      "title": "Youtube Comments Insert",
      "type": "object"
    }
  },
  "title": "Youtube Comments Insert",
  "type": "object"
}
