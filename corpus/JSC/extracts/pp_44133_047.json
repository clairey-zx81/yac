{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "definitions": {
    "address_1": {
      "description": "street address line 1",
      "example": "40 Hickory Lane",
      "type": [
        "string"
      ]
    },
    "address_2": {
      "description": "street address line 2",
      "example": "Suite 103",
      "type": [
        "string"
      ]
    },
    "card_number": {
      "description": "encrypted card number of payment method",
      "example": "encrypted-card-number",
      "type": [
        "string"
      ]
    },
    "city": {
      "description": "city",
      "example": "San Francisco",
      "type": [
        "string"
      ]
    },
    "country": {
      "description": "country",
      "example": "US",
      "type": [
        "string"
      ]
    },
    "created_at": {
      "description": "when the organization was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "credit_card_collections": {
      "description": "whether charges incurred by the org are paid by credit card.",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "cvv": {
      "description": "card verification value",
      "example": "123",
      "type": [
        "string"
      ]
    },
    "default": {
      "description": "whether to use this organization when none is specified",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "expiration_month": {
      "description": "expiration month",
      "example": "11",
      "type": [
        "string"
      ]
    },
    "expiration_year": {
      "description": "expiration year",
      "example": "2014",
      "type": [
        "string"
      ]
    },
    "first_name": {
      "description": "the first name for payment method",
      "example": "Jason",
      "type": [
        "string"
      ]
    },
    "id": {
      "description": "unique identifier of organization",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/organization/definitions/name"
        },
        {
          "$ref": "#/definitions/organization/definitions/id"
        }
      ]
    },
    "last_name": {
      "description": "the last name for payment method",
      "example": "Walker",
      "type": [
        "string"
      ]
    },
    "membership_limit": {
      "description": "upper limit of members allowed in an organization.",
      "example": 25,
      "readOnly": true,
      "type": [
        "number",
        "null"
      ]
    },
    "name": {
      "description": "unique name of organization",
      "example": "example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "other": {
      "description": "metadata",
      "example": "Additional information for payment method",
      "type": [
        "string"
      ]
    },
    "postal_code": {
      "description": "postal code",
      "example": "90210",
      "type": [
        "string"
      ]
    },
    "provisioned_licenses": {
      "description": "whether the org is provisioned licenses by salesforce.",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "role": {
      "description": "role in the organization",
      "enum": [
        "admin",
        "collaborator",
        "member",
        "owner",
        null
      ],
      "example": "admin",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "state": {
      "description": "state",
      "example": "CA",
      "type": [
        "string"
      ]
    },
    "type": {
      "description": "type of organization.",
      "enum": [
        "enterprise",
        "team"
      ],
      "example": "team",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "updated_at": {
      "description": "when the organization was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    }
  },
  "deprecated_at": "2017-04-10",
  "description": "Deprecated: Organizations allow you to manage access to a shared group of applications across your development team.",
  "links": [
    {
      "description": "List organizations in which you are a member.",
      "href": "/organizations",
      "method": "GET",
      "rel": "instances",
      "targetSchema": {
        "items": {
          "$ref": "#/definitions/organization"
        },
        "type": [
          "array"
        ]
      },
      "title": "List"
    },
    {
      "description": "Info for an organization.",
      "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
      "method": "GET",
      "rel": "self",
      "title": "Info"
    },
    {
      "description": "Update organization properties.",
      "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
      "method": "PATCH",
      "rel": "update",
      "schema": {
        "properties": {
          "default": {
            "$ref": "#/definitions/organization/definitions/default"
          },
          "name": {
            "$ref": "#/definitions/organization/definitions/name"
          }
        },
        "type": [
          "object"
        ]
      },
      "targetSchema": {
        "$ref": "#/definitions/organization"
      },
      "title": "Update"
    },
    {
      "description": "Create a new organization.",
      "href": "/organizations",
      "method": "POST",
      "rel": "create",
      "schema": {
        "properties": {
          "address_1": {
            "$ref": "#/definitions/organization/definitions/address_1"
          },
          "address_2": {
            "$ref": "#/definitions/organization/definitions/address_2"
          },
          "card_number": {
            "$ref": "#/definitions/organization/definitions/card_number"
          },
          "city": {
            "$ref": "#/definitions/organization/definitions/city"
          },
          "country": {
            "$ref": "#/definitions/organization/definitions/country"
          },
          "cvv": {
            "$ref": "#/definitions/organization/definitions/cvv"
          },
          "expiration_month": {
            "$ref": "#/definitions/organization/definitions/expiration_month"
          },
          "expiration_year": {
            "$ref": "#/definitions/organization/definitions/expiration_year"
          },
          "first_name": {
            "$ref": "#/definitions/organization/definitions/first_name"
          },
          "last_name": {
            "$ref": "#/definitions/organization/definitions/last_name"
          },
          "name": {
            "$ref": "#/definitions/organization/definitions/name"
          },
          "other": {
            "$ref": "#/definitions/organization/definitions/other"
          },
          "postal_code": {
            "$ref": "#/definitions/organization/definitions/postal_code"
          },
          "state": {
            "$ref": "#/definitions/organization/definitions/state"
          }
        },
        "required": [
          "name"
        ],
        "type": [
          "object"
        ]
      },
      "targetSchema": {
        "$ref": "#/definitions/organization"
      },
      "title": "Create"
    },
    {
      "description": "Delete an existing organization.",
      "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
      "method": "DELETE",
      "rel": "destroy",
      "targetSchema": {
        "$ref": "#/definitions/organization"
      },
      "title": "Delete"
    }
  ],
  "properties": {
    "created_at": {
      "$ref": "#/definitions/organization/definitions/created_at"
    },
    "credit_card_collections": {
      "$ref": "#/definitions/organization/definitions/credit_card_collections"
    },
    "default": {
      "$ref": "#/definitions/organization/definitions/default"
    },
    "id": {
      "$ref": "#/definitions/organization/definitions/id"
    },
    "membership_limit": {
      "$ref": "#/definitions/organization/definitions/membership_limit"
    },
    "name": {
      "$ref": "#/definitions/organization/definitions/name"
    },
    "provisioned_licenses": {
      "$ref": "#/definitions/organization/definitions/provisioned_licenses"
    },
    "role": {
      "$ref": "#/definitions/organization/definitions/role"
    },
    "type": {
      "$ref": "#/definitions/organization/definitions/type"
    },
    "updated_at": {
      "$ref": "#/definitions/organization/definitions/updated_at"
    }
  },
  "stability": "prototype",
  "strictProperties": true,
  "title": "Heroku Platform API - Organization",
  "type": [
    "object"
  ]
}
