{
  "$defs": {
      "Access": {
        "type": "object",
        "required": [
          "denied",
          "allowed"
        ],
        "properties": {
          "denied": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/AccessDenied"
            }
          },
          "allowed": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/AccessAllowedRep"
            }
          }
        }
      },
      "AccessAllowedReason": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The <code>resources</code> and <code>notActions</code> fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The <code>actions</code> and <code>notResources</code> fields must be empty to use this field.",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            }
          },
          "effect": {
            "description": "Valid values: <code>allow</code>, <code>deny</code>",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ],
            "$ref": "#/$defs/Effect"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "AccessAllowedRep": {
        "type": "object",
        "required": [
          "action",
          "reason"
        ],
        "properties": {
          "action": {
            "$ref": "#/$defs/ActionIdentifier"
          },
          "reason": {
            "$ref": "#/$defs/AccessAllowedReason"
          }
        }
      },
      "AccessDenied": {
        "type": "object",
        "required": [
          "action",
          "reason"
        ],
        "properties": {
          "action": {
            "$ref": "#/$defs/ActionIdentifier"
          },
          "reason": {
            "$ref": "#/$defs/AccessDeniedReason"
          }
        }
      },
      "AccessDeniedReason": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The <code>resources</code> and <code>notActions</code> fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The <code>actions</code> and <code>notResources</code> fields must be empty to use this field.",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            }
          },
          "effect": {
            "description": "Valid values: <code>allow</code>, <code>deny</code>",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ],
            "$ref": "#/$defs/Effect"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "AccessTokenPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the access token"
          },
          "description": {
            "type": "string",
            "description": "A description for the access token"
          },
          "role": {
            "type": "string",
            "description": "Built-in role for the token",
            "enum": [
              "reader",
              "writer",
              "admin"
            ]
          },
          "customRoleIds": {
            "type": "array",
            "description": "A list of custom role IDs to use as access limits for the access token",
            "items": {
              "type": "string"
            }
          },
          "inlineRole": {
            "type": "array",
            "description": "A JSON array of statements represented as JSON objects with three attributes: effect, resources, actions. May be used in place of a built-in or custom role.",
            "items": {
              "$ref": "#/$defs/StatementPost"
            }
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether the token is a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens"
          },
          "defaultApiVersion": {
            "type": "integer",
            "description": "The default API version for this token"
          }
        }
      },
      "ActionIdentifier": {
        "type": "string"
      },
      "ActionInput": {
        "type": "object",
        "properties": {
          "instructions": {
            "description": "An array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{\"instructions\": [{ \"kind\": \"turnFlagOn\"}]}"
          }
        }
      },
      "ActionOutput": {
        "type": "object",
        "required": [
          "kind",
          "instructions"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of action for this stage",
            "example": "patch"
          },
          "instructions": {
            "description": "An array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "ActionSpecifier": {
        "type": "string"
      },
      "AllVariationsSummary": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/VariationSummary"
        }
      },
      "ApprovalConditionInput": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the approval required for this stage",
            "example": "Require example-team approval for final stage"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "A list of member IDs for the members to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "507f1f77bcf86cd799439011"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "A list of team keys for the teams to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "example-team"
            ]
          }
        }
      },
      "ApprovalConditionOutput": {
        "type": "object",
        "required": [
          "description",
          "notifyMemberIds",
          "allReviews",
          "reviewStatus"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "notifyMemberIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allReviews": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ReviewOutput"
            }
          },
          "reviewStatus": {
            "type": "string"
          },
          "appliedDate": {
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "ApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/$defs/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/$defs/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/$defs/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/$defs/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/$defs/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/$defs/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/$defs/CustomWorkflowMeta"
          },
          "resourceId": {
            "type": "string",
            "description": "String representation of a resource"
          },
          "approvalSettings": {
            "description": "The settings for this approval",
            "$ref": "#/$defs/ApprovalSettings"
          }
        }
      },
      "ApprovalRequestServiceKind": {
        "type": "string"
      },
      "ApprovalSettings": {
        "type": "object",
        "required": [
          "required",
          "bypassApprovalsForPendingChanges",
          "minNumApprovals",
          "canReviewOwnRequest",
          "canApplyDeclinedChanges",
          "serviceKind",
          "serviceConfig",
          "requiredApprovalTags"
        ],
        "properties": {
          "required": {
            "type": "boolean",
            "description": "If approvals are required for this environment.",
            "example": true
          },
          "bypassApprovalsForPendingChanges": {
            "type": "boolean",
            "description": "Whether to skip approvals for pending changes",
            "example": false
          },
          "minNumApprovals": {
            "type": "integer",
            "description": "Sets the amount of approvals required before a member can apply a change. The minimum is one and the maximum is five.",
            "example": 1
          },
          "canReviewOwnRequest": {
            "type": "boolean",
            "description": "Allow someone who makes an approval request to apply their own change.",
            "example": false
          },
          "canApplyDeclinedChanges": {
            "type": "boolean",
            "description": "Allow applying the change as long as at least one person has approved.",
            "example": true
          },
          "serviceKind": {
            "type": "string",
            "description": "Which service to use for managing approvals.",
            "example": "launchdarkly"
          },
          "serviceConfig": {
            "type": "object",
            "additionalProperties": {},
            "example": {}
          },
          "requiredApprovalTags": {
            "type": "array",
            "description": "Require approval only on flags with the provided tags. Otherwise all flags will require approval.",
            "items": {
              "type": "string"
            },
            "example": [
              "require-approval"
            ]
          }
        }
      },
      "AuditLogEntryListingRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_accountId",
          "date",
          "accesses",
          "kind",
          "name",
          "description",
          "shortDescription"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of the audit log entry",
            "example": "1234a56b7c89d012345e678f"
          },
          "_accountId": {
            "type": "string",
            "description": "The ID of the account to which this audit log entry belongs",
            "example": "1234a56b7c89d012345e678f"
          },
          "date": {
            "description": "Timestamp of the audit log entry",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "accesses": {
            "type": "array",
            "description": "Details on the actions performed and resources acted on in this audit log entry",
            "items": {
              "$ref": "#/$defs/ResourceAccess"
            }
          },
          "kind": {
            "description": "The type of resource this audit log entry refers to",
            "example": "flag",
            "$ref": "#/$defs/ResourceKind"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource this audit log entry refers to",
            "example": "Example feature flag"
          },
          "description": {
            "type": "string",
            "description": "Description of the change recorded in the audit log entry",
            "example": "Example, turning on the flag for testing"
          },
          "shortDescription": {
            "type": "string",
            "description": "Shorter version of the change recorded in the audit log entry",
            "example": "Example, turning on the flag"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment for the audit log entry",
            "example": "This is an automated test"
          },
          "subject": {
            "description": "Details of the subject who initiated the action described in the audit log entry",
            "$ref": "#/$defs/SubjectDataRep"
          },
          "member": {
            "description": "Details of the member who initiated the action described in the audit log entry",
            "$ref": "#/$defs/MemberDataRep"
          },
          "token": {
            "description": "Details of the access token that initiated the action described in the audit log entry",
            "$ref": "#/$defs/TokenDataRep"
          },
          "app": {
            "description": "Details of the authorized application that initiated the action described in the audit log entry",
            "$ref": "#/$defs/AuthorizedAppDataRep"
          },
          "titleVerb": {
            "type": "string",
            "description": "The action and resource recorded in this audit log entry",
            "example": "turned on the flag"
          },
          "title": {
            "type": "string",
            "description": "A description of what occurred, in the format <code>member</code> <code>titleVerb</code> <code>target</code>"
          },
          "target": {
            "description": "Details of the resource acted upon in this audit log entry",
            "example": "[Bob Loblaw](mailto:bob@loblaw.com) turned on the flag [example-flag](https://app.launchdarkly.com/example-project/production/features/example-flag) in Production",
            "$ref": "#/$defs/TargetResourceRep"
          },
          "parent": {
            "$ref": "#/$defs/ParentResourceRep"
          }
        }
      },
      "AuditLogEntryListingRepCollection": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of audit log entries",
            "items": {
              "$ref": "#/$defs/AuditLogEntryListingRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "AuditLogEntryRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_accountId",
          "date",
          "accesses",
          "kind",
          "name",
          "description",
          "shortDescription"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of the audit log entry",
            "example": "1234a56b7c89d012345e678f"
          },
          "_accountId": {
            "type": "string",
            "description": "The ID of the account to which this audit log entry belongs",
            "example": "1234a56b7c89d012345e678f"
          },
          "date": {
            "description": "Timestamp of the audit log entry",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "accesses": {
            "type": "array",
            "description": "Details on the actions performed and resources acted on in this audit log entry",
            "items": {
              "$ref": "#/$defs/ResourceAccess"
            }
          },
          "kind": {
            "description": "The type of resource this audit log entry refers to",
            "example": "flag",
            "$ref": "#/$defs/ResourceKind"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource this audit log entry refers to",
            "example": "Example feature flag"
          },
          "description": {
            "type": "string",
            "description": "Description of the change recorded in the audit log entry",
            "example": "Example, turning on the flag for testing"
          },
          "shortDescription": {
            "type": "string",
            "description": "Shorter version of the change recorded in the audit log entry",
            "example": "Example, turning on the flag"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment for the audit log entry",
            "example": "This is an automated test"
          },
          "subject": {
            "description": "Details of the subject who initiated the action described in the audit log entry",
            "$ref": "#/$defs/SubjectDataRep"
          },
          "member": {
            "description": "Details of the member who initiated the action described in the audit log entry",
            "$ref": "#/$defs/MemberDataRep"
          },
          "token": {
            "description": "Details of the access token that initiated the action described in the audit log entry",
            "$ref": "#/$defs/TokenDataRep"
          },
          "app": {
            "description": "Details of the authorized application that initiated the action described in the audit log entry",
            "$ref": "#/$defs/AuthorizedAppDataRep"
          },
          "titleVerb": {
            "type": "string",
            "description": "The action and resource recorded in this audit log entry",
            "example": "turned on the flag"
          },
          "title": {
            "type": "string",
            "description": "A description of what occurred, in the format <code>member</code> <code>titleVerb</code> <code>target</code>"
          },
          "target": {
            "description": "Details of the resource acted upon in this audit log entry",
            "example": "[Bob Loblaw](mailto:bob@loblaw.com) turned on the flag [example-flag](https://app.launchdarkly.com/example-project/production/features/example-flag) in Production",
            "$ref": "#/$defs/TargetResourceRep"
          },
          "parent": {
            "$ref": "#/$defs/ParentResourceRep"
          },
          "delta": {
            "description": "If the audit log entry has been updated, this is the JSON patch body that was used in the request to update the entity"
          },
          "triggerBody": {
            "description": "A JSON representation of the external trigger for this audit log entry, if any"
          },
          "merge": {
            "description": "A JSON representation of the merge information for this audit log entry, if any"
          },
          "previousVersion": {
            "description": "If the audit log entry has been updated, this is a JSON representation of the previous version of the entity"
          },
          "currentVersion": {
            "description": "If the audit log entry has been updated, this is a JSON representation of the current version of the entity"
          },
          "subentries": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/AuditLogEntryListingRep"
            }
          }
        }
      },
      "AuthorizedAppDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of the authorized application"
          },
          "isScim": {
            "type": "boolean",
            "description": "Whether the application is authorized through SCIM"
          },
          "name": {
            "type": "string",
            "description": "The authorized application name"
          },
          "maintainerName": {
            "type": "string",
            "description": "The name of the maintainer for this authorized application"
          }
        }
      },
      "BigSegmentTarget": {
        "type": "object",
        "required": [
          "userKey",
          "included",
          "excluded"
        ],
        "properties": {
          "userKey": {
            "type": "string",
            "description": "The target key"
          },
          "included": {
            "type": "boolean",
            "description": "Indicates whether the target is included.<br />Included targets are always segment members, regardless of segment rules."
          },
          "excluded": {
            "type": "boolean",
            "description": "Indicates whether the target is excluded.<br />Segment rules bypass excluded targets, so they will never be included based on rules. Excluded targets may still be included explicitly."
          }
        }
      },
      "BooleanDefaults": {
        "type": "object",
        "properties": {
          "trueDisplayName": {
            "type": "string",
            "description": "The display name for the true variation, displayed in the LaunchDarkly user interface",
            "example": "True"
          },
          "falseDisplayName": {
            "type": "string",
            "description": "The display name for the false variation, displayed in the LaunchDarkly user interface",
            "example": "False"
          },
          "trueDescription": {
            "type": "string",
            "description": "The description for the true variation",
            "example": "serve true"
          },
          "falseDescription": {
            "type": "string",
            "description": "The description for the false variation",
            "example": "serve false"
          },
          "onVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is on and the target did not match any rules",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is off",
            "example": 1
          }
        }
      },
      "BooleanFlagDefaults": {
        "type": "object",
        "required": [
          "trueDisplayName",
          "falseDisplayName",
          "trueDescription",
          "falseDescription",
          "onVariation",
          "offVariation"
        ],
        "properties": {
          "trueDisplayName": {
            "type": "string",
            "description": "The display name for the true variation, displayed in the LaunchDarkly user interface",
            "example": "True"
          },
          "falseDisplayName": {
            "type": "string",
            "description": "The display name for the false variation, displayed in the LaunchDarkly user interface",
            "example": "False"
          },
          "trueDescription": {
            "type": "string",
            "description": "The description for the true variation",
            "example": "serve true"
          },
          "falseDescription": {
            "type": "string",
            "description": "The description for the false variation",
            "example": "serve false"
          },
          "onVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is on and the target did not match any rules",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is off",
            "example": 1
          }
        }
      },
      "BranchCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of branches",
            "items": {
              "$ref": "#/$defs/BranchRep"
            }
          }
        }
      },
      "BranchRep": {
        "type": "object",
        "required": [
          "name",
          "head",
          "syncTime",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The branch name",
            "example": "main"
          },
          "head": {
            "type": "string",
            "description": "An ID representing the branch HEAD. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "updateSequenceId": {
            "type": "integer",
            "format": "int64",
            "description": "An optional ID used to prevent older data from overwriting newer data",
            "example": 25
          },
          "syncTime": {
            "description": "A timestamp indicating when the branch was last synced",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          },
          "references": {
            "type": "array",
            "description": "An array of flag references found on the branch",
            "items": {
              "$ref": "#/$defs/ReferenceRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          }
        }
      },
      "BulkEditMembersRep": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "description": "A list of members IDs of the members who were successfully updated.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "errors": {
            "type": "array",
            "description": "A list of member IDs and errors for the members whose updates failed.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "example": [
              {
                "507f1f77bcf86cd799439011": "you cannot modify your own role"
              }
            ]
          }
        }
      },
      "BulkEditTeamsRep": {
        "type": "object",
        "properties": {
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs of the members who were added to the teams.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "teamKeys": {
            "type": "array",
            "description": "A list of team keys of the teams that were successfully updated.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-team-1"
            ]
          },
          "errors": {
            "type": "array",
            "description": "A list of team keys and errors for the teams whose updates failed.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "example": [
              {
                "example-team-2": "example failure message"
              }
            ]
          }
        }
      },
      "Clause": {
        "type": "object",
        "required": [
          "attribute",
          "op",
          "values",
          "negate"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "op": {
            "$ref": "#/$defs/Operator"
          },
          "values": {
            "type": "array",
            "items": {}
          },
          "contextKind": {
            "type": "string"
          },
          "negate": {
            "type": "boolean"
          }
        }
      },
      "Client": {
        "type": "object",
        "required": [
          "_links",
          "name",
          "_accountId",
          "_clientId",
          "redirectUri",
          "_creationDate"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/oauth/clients",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/oauth/clients/50666563-9144-4125-b822-33f308227e45",
                "type": "application/json"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Client name"
          },
          "description": {
            "type": "string",
            "description": "Client description"
          },
          "_accountId": {
            "type": "string",
            "description": "The account ID the client is registered under"
          },
          "_clientId": {
            "type": "string",
            "description": "The client's unique ID"
          },
          "_clientSecret": {
            "type": "string",
            "description": "The client secret. This will only be shown upon creation."
          },
          "redirectUri": {
            "type": "string",
            "description": "The client's redirect URI"
          },
          "_creationDate": {
            "description": "Timestamp of client creation date",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "ClientCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/oauth/clients",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "List of client objects",
            "items": {
              "$ref": "#/$defs/Client"
            }
          }
        }
      },
      "ClientSideAvailability": {
        "type": "object",
        "properties": {
          "usingMobileKey": {
            "type": "boolean"
          },
          "usingEnvironmentId": {
            "type": "boolean"
          }
        }
      },
      "ClientSideAvailabilityPost": {
        "type": "object",
        "required": [
          "usingEnvironmentId",
          "usingMobileKey"
        ],
        "properties": {
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs. Defaults to <code>false</code>.",
            "example": true
          },
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs. Defaults to <code>true</code>.",
            "example": true
          }
        }
      },
      "ConditionBaseOutput": {
        "type": "object",
        "required": [
          "_id",
          "_execution"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "_execution": {
            "$ref": "#/$defs/ExecutionOutput"
          }
        }
      },
      "ConditionInput": {
        "type": "object",
        "properties": {
          "scheduleKind": {
            "description": "Whether the scheduled execution of the workflow stage is relative or absolute. If relative, the <code>waitDuration</code> and <code>waitDurationUnit</code> specify when the execution occurs. If absolute, the <code>executionDate</code> specifies when the execution occurs.",
            "example": "relative",
            "enum": [
              "absolute",
              "relative"
            ],
            "$ref": "#/$defs/ScheduleKind"
          },
          "executionDate": {
            "description": "For workflow stages whose scheduled execution is absolute, the time, in Unix milliseconds, when the stage should start.",
            "example": "1706810400000",
            "$ref": "#/$defs/UnixMillis"
          },
          "waitDuration": {
            "type": "integer",
            "description": "For workflow stages whose scheduled execution is relative, how far in the future the stage should start.",
            "example": 2
          },
          "waitDurationUnit": {
            "description": "For workflow stages whose scheduled execution is relative, the unit of measure for the <code>waitDuration</code>.",
            "example": "calendarDay",
            "enum": [
              "minute",
              "hour",
              "calendarDay",
              "calendarWeek"
            ],
            "$ref": "#/$defs/DurationUnit"
          },
          "executeNow": {
            "type": "boolean",
            "description": "Whether the workflow stage should be executed immediately",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "A description of the approval required for this stage",
            "example": "Require example-team approval for final stage"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "A list of member IDs for the members to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "507f1f77bcf86cd799439011"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "A list of team keys for the teams to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "example-team"
            ]
          },
          "kind": {
            "description": "The type of condition to meet before executing this stage of the workflow. Use <code>schedule</code> to schedule a workflow stage. Use <code>ld-approval</code> to add an approval request to a workflow stage.",
            "example": "schedule",
            "$ref": "#/$defs/ConditionKind"
          }
        }
      },
      "ConditionKind": {
        "type": "string"
      },
      "ConditionOutput": {
        "type": "object",
        "required": [
          "_id",
          "_execution",
          "description",
          "notifyMemberIds",
          "allReviews",
          "reviewStatus"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "_execution": {
            "$ref": "#/$defs/ExecutionOutput"
          },
          "scheduleKind": {
            "$ref": "#/$defs/ScheduleKind"
          },
          "executionDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "waitDuration": {
            "type": "integer"
          },
          "waitDurationUnit": {
            "$ref": "#/$defs/DurationUnit"
          },
          "description": {
            "type": "string"
          },
          "notifyMemberIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allReviews": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ReviewOutput"
            }
          },
          "reviewStatus": {
            "type": "string"
          },
          "appliedDate": {
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "ConfidenceIntervalRep": {
        "type": "object",
        "properties": {
          "upper": {
            "type": "number"
          },
          "lower": {
            "type": "number"
          }
        }
      },
      "Conflict": {
        "type": "object",
        "properties": {
          "instruction": {
            "description": "Instruction in semantic patch format to be applied to the feature flag",
            "$ref": "#/$defs/Instruction"
          },
          "reason": {
            "type": "string",
            "description": "Reason why the conflict exists"
          }
        }
      },
      "ConflictOutput": {
        "type": "object",
        "required": [
          "stageId",
          "message"
        ],
        "properties": {
          "stageId": {
            "type": "string",
            "description": "The stage ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "message": {
            "type": "string",
            "description": "Message about the conflict"
          }
        }
      },
      "ContextAttributeName": {
        "type": "object",
        "required": [
          "name",
          "weight"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A context attribute's name.",
            "example": "/firstName"
          },
          "weight": {
            "type": "integer",
            "description": "A relative estimate of the number of contexts seen recently that have an attribute with the associated name.",
            "example": 2225
          },
          "redacted": {
            "type": "boolean",
            "description": "Whether or not the attribute has one or more redacted values.",
            "example": false
          }
        }
      },
      "ContextAttributeNames": {
        "type": "object",
        "required": [
          "kind",
          "names"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind associated with this collection of context attribute names.",
            "example": "user"
          },
          "names": {
            "type": "array",
            "description": "A collection of context attribute names.",
            "items": {
              "$ref": "#/$defs/ContextAttributeName"
            }
          }
        }
      },
      "ContextAttributeNamesCollection": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A collection of context attribute name data grouped by kind.",
            "items": {
              "$ref": "#/$defs/ContextAttributeNames"
            }
          }
        }
      },
      "ContextAttributeValue": {
        "type": "object",
        "required": [
          "name",
          "weight"
        ],
        "properties": {
          "name": {
            "description": "A value for a context attribute.",
            "example": "Sandy"
          },
          "weight": {
            "type": "integer",
            "description": "A relative estimate of the number of contexts seen recently that have a matching value for a given attribute.",
            "example": 35
          }
        }
      },
      "ContextAttributeValues": {
        "type": "object",
        "required": [
          "kind",
          "values"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind associated with this collection of context attribute values.",
            "example": "user"
          },
          "values": {
            "type": "array",
            "description": "A collection of context attribute values.",
            "items": {
              "$ref": "#/$defs/ContextAttributeValue"
            }
          }
        }
      },
      "ContextAttributeValuesCollection": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A collection of context attribute value data grouped by kind.",
            "items": {
              "$ref": "#/$defs/ContextAttributeValues"
            }
          }
        }
      },
      "ContextInstance": {
        "type": "object",
        "additionalProperties": {}
      },
      "ContextInstanceEvaluation": {
        "type": "object",
        "required": [
          "name",
          "key",
          "_value",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the flag.",
            "example": "My Flag"
          },
          "key": {
            "type": "string",
            "description": "Key of the flag.",
            "example": "my-flag"
          },
          "_value": {
            "description": "The value of the flag variation that the context receives. If there is no defined default rule, this is null.",
            "example": "true"
          },
          "reason": {
            "description": "Contains information about why that variation was selected.",
            "example": "{\"kind\": \"RULE_MATCH\"}",
            "$ref": "#/$defs/ContextInstanceEvaluationReason"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/features/sort.order/targeting",
                "type": "text/html"
              }
            }
          }
        }
      },
      "ContextInstanceEvaluationReason": {
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "Describes the general reason that LaunchDarkly selected this variation.",
            "example": "OFF"
          },
          "ruleIndex": {
            "type": "integer",
            "description": "The positional index of the matching rule if the kind is 'RULE_MATCH'. The index is 0-based.",
            "example": 3
          },
          "ruleID": {
            "type": "string",
            "description": "The unique identifier of the matching rule if the kind is 'RULE_MATCH'.",
            "example": "1234567890"
          },
          "prerequisiteKey": {
            "type": "string",
            "description": "The key of the flag that failed if the kind is 'PREREQUISITE_FAILED'.",
            "example": "someotherflagkey"
          },
          "inExperiment": {
            "type": "boolean",
            "description": "Indicates whether the context was evaluated as part of an experiment.",
            "example": true
          },
          "errorKind": {
            "type": "string",
            "description": "The specific error type if the kind is 'ERROR'.",
            "example": "tried to use uninitialized Context"
          }
        }
      },
      "ContextInstanceEvaluations": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Details on the flag evaluations for this context instance",
            "items": {
              "$ref": "#/$defs/ContextInstanceEvaluation"
            },
            "example": [
              {
                "_links": {
                  "self": {
                    "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                    "type": "application/json"
                  },
                  "site": {
                    "href": "/my-project/my-environment/features/sort.order/targeting",
                    "type": "text/html"
                  }
                },
                "_value": true,
                "key": "sort.order",
                "name": "SortOrder",
                "reason": {
                  "kind": "FALLTHROUGH"
                }
              },
              {
                "_links": {
                  "self": {
                    "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                    "type": "application/json"
                  },
                  "site": {
                    "href": "/my-project/my-environment/features/alternate.page/targeting",
                    "type": "text/html"
                  }
                },
                "_value": false,
                "key": "alternate.page",
                "name": "AlternatePage",
                "reason": {
                  "kind": "RULE_MATCH",
                  "ruleID": "b2530cdf-14c6-4e16-b660-00239e08f19b",
                  "ruleIndex": 1
                }
              }
            ]
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of flags",
            "example": 2
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                "type": "application/json"
              }
            }
          }
        }
      },
      "ContextInstanceRecord": {
        "type": "object",
        "required": [
          "id",
          "context"
        ],
        "properties": {
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time an evaluation occurred for this context instance",
            "example": "2022-04-15T15:00:57.526470334Z"
          },
          "id": {
            "type": "string",
            "description": "The context instance ID",
            "example": "b3JnOmxhdW5jaGRhcmtseQ"
          },
          "applicationId": {
            "type": "string",
            "description": "An identifier representing the application where the LaunchDarkly SDK is running",
            "example": "GoSDK/1.2"
          },
          "anonymousKinds": {
            "type": "array",
            "description": "A list of the context kinds this context was associated with that the SDK removed because they were marked as anonymous at flag evaluation",
            "items": {
              "type": "string"
            },
            "example": [
              "device",
              "privateKind"
            ]
          },
          "context": {
            "description": "The context, including its kind and attributes",
            "example": "{\"kind\": \"user\", \"key\": \"context-key-123abc\", \"name\": \"Sandy Smith\", \"email\": \"sandy@example.com\"}"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?filter=applicationId:\"GoSDK/1.2\"",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/context-instances/organization:launch-darkly:user:henry",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this context instance",
            "$ref": "#/$defs/Access"
          }
        }
      },
      "ContextInstanceSearch": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "A collection of context instance filters",
            "example": "{\"filter\": \"kindKeys:{\"contains\": [\"user:Henry\"]},\"sort\": \"-ts\",\"limit\": 50}"
          },
          "sort": {
            "type": "string",
            "description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying <code>ts</code> for this value, or descending order by specifying <code>-ts</code>.",
            "example": "-ts"
          },
          "limit": {
            "type": "integer",
            "description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)",
            "example": 10
          },
          "continuationToken": {
            "type": "string",
            "description": "Limits results to context instances with sort values after the value specified. You can use this for pagination, however, we recommend using the <code>next</code> link instead, because this value is an obfuscated string.",
            "example": "QAGFKH1313KUGI2351"
          }
        }
      },
      "ContextInstanceSegmentMembership": {
        "type": "object",
        "required": [
          "name",
          "key",
          "description",
          "unbounded",
          "external",
          "isMember",
          "isIndividuallyTargeted",
          "isRuleTargeted",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment",
            "example": "Segment Name"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "segment-key"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose",
            "example": "Segment description"
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether this is an unbounded/big segment",
            "example": false
          },
          "external": {
            "type": "string",
            "description": "If the segment is a Synced Segment the name of the external source'",
            "example": "https://amplitude.com/myCohort"
          },
          "isMember": {
            "type": "boolean",
            "description": "Whether the context is a member of this segment, either by explicit inclusion or by rule matching",
            "example": true
          },
          "isIndividuallyTargeted": {
            "type": "boolean",
            "description": "Whether the context is explicitly included in this segment",
            "example": true
          },
          "isRuleTargeted": {
            "type": "boolean",
            "description": "Whether the context is captured by this segment's rules. The value of this field is undefined if the context is also explicitly included (isIndividuallyTargeted = true).",
            "example": false
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          }
        }
      },
      "ContextInstanceSegmentMemberships": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ContextInstanceSegmentMembership"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          }
        }
      },
      "ContextInstances": {
        "type": "object",
        "required": [
          "_environmentId",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?limit=2&continuationToken=2022-04-15T15:00:57.526470334Z",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-proj/environments/my-env/context-instances/organization:launch-darkly:user:henry-jacobs?limit=2",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of unique context instances",
            "example": 100
          },
          "_environmentId": {
            "type": "string",
            "description": "The environment ID",
            "example": "57be1db38b75bf0772d11384"
          },
          "continuationToken": {
            "type": "string",
            "description": "An obfuscated string that references the last context instance on the previous page of results. You can use this for pagination, however, we recommend using the <code>next</code> link instead.",
            "example": "QAGFKH1313KUGI2351"
          },
          "items": {
            "type": "array",
            "description": "A collection of context instances. Can include multiple versions of context instances that have the same <code>id</code>, but different <code>applicationId</code>s.",
            "items": {
              "$ref": "#/$defs/ContextInstanceRecord"
            }
          }
        }
      },
      "ContextKind": {
        "type": "object",
        "required": [
          "key",
          "name",
          "description",
          "version",
          "creationDate",
          "lastModified",
          "createdFrom"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The context kind key",
            "example": "organization"
          },
          "name": {
            "type": "string",
            "description": "The context kind name",
            "example": "Organization"
          },
          "description": {
            "type": "string",
            "description": "The context kind description",
            "example": "An example context kind, to enable targeting based on organization"
          },
          "version": {
            "type": "integer",
            "description": "The context kind version",
            "example": 4
          },
          "creationDate": {
            "description": "Timestamp of when the context kind was created",
            "example": "1668530155141",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of when the context kind was most recently changed",
            "example": "1670341705251",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastSeen": {
            "description": "Timestamp of when a context of this context kind was most recently evaluated",
            "example": "1671563538193",
            "$ref": "#/$defs/UnixMillis"
          },
          "createdFrom": {
            "description": "How the context kind was created",
            "example": "auto-add",
            "enum": [
              "default",
              "auto-add",
              "manual"
            ],
            "$ref": "#/$defs/ContextKindCreatedFrom"
          }
        }
      },
      "ContextKindCreatedFrom": {
        "type": "string"
      },
      "ContextKindRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "description",
          "version",
          "creationDate",
          "lastModified",
          "createdFrom"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The context kind key",
            "example": "organization"
          },
          "name": {
            "type": "string",
            "description": "The context kind name",
            "example": "Organization"
          },
          "description": {
            "type": "string",
            "description": "The context kind description",
            "example": "An example context kind, to enable targeting based on organization"
          },
          "version": {
            "type": "integer",
            "description": "The context kind version",
            "example": 4
          },
          "creationDate": {
            "description": "Timestamp of when the context kind was created",
            "example": "1668530155141",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of when the context kind was most recently changed",
            "example": "1670341705251",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastSeen": {
            "description": "Timestamp of when a context of this context kind was most recently evaluated",
            "example": "1671563538193",
            "$ref": "#/$defs/UnixMillis"
          },
          "createdFrom": {
            "description": "How the context kind was created",
            "example": "auto-add",
            "enum": [
              "default",
              "auto-add",
              "manual"
            ],
            "$ref": "#/$defs/ContextKindCreatedFrom"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextKindsCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of context kinds",
            "items": {
              "$ref": "#/$defs/ContextKindRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextRecord": {
        "type": "object",
        "required": [
          "context"
        ],
        "properties": {
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time an evaluation occurred for this context",
            "example": "2022-04-15T15:00:57.526470334Z"
          },
          "applicationId": {
            "type": "string",
            "description": "An identifier representing the application where the LaunchDarkly SDK is running",
            "example": "GoSDK/1.2"
          },
          "context": {
            "description": "The context, including its kind and attributes",
            "example": "{\"kind\": \"user\", \"key\": \"context-key-123abc\", \"name\": \"Sandy Smith\", \"email\": \"sandy@example.com\"}"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-env/contexts/organization:launch-darkly:user:henry?filter=applicationId:\"GoSDK/1.2\"",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/context/organization:launch-darkly:user:henry",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this context instance",
            "$ref": "#/$defs/Access"
          },
          "associatedContexts": {
            "type": "integer",
            "description": "The total number of associated contexts. Associated contexts are contexts that have appeared in the same context instance, that is, they were part of the same flag evaluation.",
            "example": 0
          }
        }
      },
      "ContextSearch": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "A collection of context filters",
            "example": "user.firstName:{\"startsWith\": \"Jo\"},kind:{\"anyOf\": [\"user\",\"organization\"]}"
          },
          "sort": {
            "type": "string",
            "description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying <code>ts</code> for this value, or descending order by specifying <code>-ts</code>.",
            "example": "-ts"
          },
          "limit": {
            "type": "integer",
            "description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)",
            "example": 10
          },
          "continuationToken": {
            "type": "string",
            "description": "Limits results to contexts with sort values after the value specified. You can use this for pagination, however, we recommend using the <code>next</code> link instead, because this value is an obfuscated string.",
            "example": "QAGFKH1313KUGI2351"
          }
        }
      },
      "Contexts": {
        "type": "object",
        "required": [
          "_environmentId",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/app.launchdarkly.com/api/v2/projects/my-project/environments/my-environment/contexts?filter=kind:{\"equals\": [\"organization\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-proj/environments/my-env/contexts?filter=kind:{\"equals\": [\"organization\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of contexts",
            "example": 100
          },
          "_environmentId": {
            "type": "string",
            "description": "The environment ID where the context was evaluated",
            "example": "57be1db38b75bf0772d11384"
          },
          "continuationToken": {
            "type": "string",
            "description": "An obfuscated string that references the last context instance on the previous page of results. You can use this for pagination, however, we recommend using the <code>next</code> link instead.",
            "example": "QAGFKH1313KUGI2351"
          },
          "items": {
            "type": "array",
            "description": "A collection of contexts. Can include multiple versions of contexts that have the same <code>kind</code> and <code>key</code>, but different <code>applicationId</code>s.",
            "items": {
              "$ref": "#/$defs/ContextRecord"
            }
          }
        }
      },
      "CopiedFromEnv": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of feature flag copied",
            "example": "example-source-feature-flag"
          },
          "version": {
            "type": "integer",
            "description": "Version of feature flag copied",
            "example": 1
          }
        }
      },
      "CreateWorkflowTemplateInput": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "workflowId": {
            "$ref": "#/$defs/FeatureWorkflowId"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/StageInput"
            }
          },
          "projectKey": {
            "type": "string"
          },
          "environmentKey": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          }
        }
      },
      "CredibleIntervalRep": {
        "type": "object",
        "properties": {
          "upper": {
            "type": "number",
            "description": "The upper bound",
            "example": 0.6713222134386467
          },
          "lower": {
            "type": "number",
            "description": "The lower bound",
            "example": 0.4060771673663068
          }
        }
      },
      "CustomProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/customProperty"
        }
      },
      "CustomRole": {
        "type": "object",
        "required": [
          "_id",
          "_links",
          "key",
          "name",
          "policy"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the custom role",
            "example": "1234a56b7c89d012345e678f"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this custom role",
            "$ref": "#/$defs/Access"
          },
          "description": {
            "type": "string",
            "description": "The description of the custom role",
            "example": "This custom role is just an example"
          },
          "key": {
            "type": "string",
            "description": "The key of the custom role",
            "example": "example-custom-role"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom role",
            "example": "Example custom role"
          },
          "policy": {
            "type": "array",
            "description": "An array of the policies that comprise this custom role",
            "items": {
              "$ref": "#/$defs/Statement"
            }
          },
          "basePermissions": {
            "description": "Base permissions to use for this role",
            "example": "reader",
            "$ref": "#/$defs/RoleType"
          }
        }
      },
      "CustomRolePost": {
        "type": "object",
        "required": [
          "name",
          "key",
          "policy"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the custom role",
            "example": "Ops team"
          },
          "key": {
            "type": "string",
            "description": "The custom role key",
            "example": "ops-team"
          },
          "description": {
            "type": "string",
            "description": "Description of custom role",
            "example": "An example role for members of the ops team"
          },
          "policy": {
            "description": "Resource statements for custom role",
            "$ref": "#/$defs/StatementPostList"
          },
          "basePermissions": {
            "description": "Base permissions to use for this role.",
            "example": "reader",
            "enum": [
              "reader",
              "no_access"
            ],
            "$ref": "#/$defs/RoleType"
          }
        }
      },
      "CustomRolePostData": {
        "type": "object",
        "required": [
          "name",
          "key",
          "policy"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the custom role",
            "example": "Ops team"
          },
          "key": {
            "type": "string",
            "description": "The custom role key",
            "example": "ops-team"
          },
          "description": {
            "type": "string",
            "description": "Description of custom role",
            "example": "An example role for members of the ops team"
          },
          "policy": {
            "description": "Resource statements for custom role",
            "$ref": "#/$defs/StatementPostList"
          },
          "basePermissions": {
            "description": "Base permissions to use for this role.",
            "example": "reader",
            "enum": [
              "reader",
              "no_access"
            ],
            "$ref": "#/$defs/RoleType"
          }
        }
      },
      "CustomRoleSummary": {
        "type": "object",
        "required": [
          "_id",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The custom role's' ID",
            "example": "507f1f77bcf86cd799439011"
          },
          "key": {
            "type": "string",
            "description": "The key of the custom role",
            "example": "example-role"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom role",
            "example": "Example role"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "CustomRoles": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of custom roles",
            "items": {
              "$ref": "#/$defs/CustomRole"
            }
          }
        }
      },
      "CustomWorkflowInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "maintainerId": {
            "description": "The ID of the workflow maintainer. Defaults to the workflow creator.",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/ObjectId"
          },
          "name": {
            "type": "string",
            "description": "The workflow name",
            "example": "Progressive rollout starting in two days"
          },
          "description": {
            "type": "string",
            "description": "The workflow description",
            "example": "Turn flag on for 10% of users each day"
          },
          "stages": {
            "type": "array",
            "description": "A list of the workflow stages",
            "items": {
              "$ref": "#/$defs/StageInput"
            }
          },
          "templateKey": {
            "type": "string",
            "description": "The template key"
          }
        }
      },
      "CustomWorkflowMeta": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the workflow stage that required this approval request",
            "example": "Example workflow name"
          },
          "stage": {
            "description": "Details on the stage of the workflow where this approval request is required",
            "$ref": "#/$defs/CustomWorkflowStageMeta"
          }
        }
      },
      "CustomWorkflowOutput": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "_conflicts",
          "_creationDate",
          "_maintainerId",
          "_links",
          "name",
          "_execution"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the workflow",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "_version": {
            "type": "integer",
            "description": "The version of the workflow",
            "example": 1
          },
          "_conflicts": {
            "type": "array",
            "description": "Any conflicts that are present in the workflow stages",
            "items": {
              "$ref": "#/$defs/ConflictOutput"
            }
          },
          "_creationDate": {
            "description": "Timestamp of when the workflow was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The member ID of the maintainer of the workflow. Defaults to the workflow creator.",
            "example": "12ab3c45de678910abc12345"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow",
            "example": "Progressive rollout starting in two days"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the workflow",
            "example": "Turn flag on for 10% of customers each day"
          },
          "kind": {
            "type": "string",
            "description": "The kind of workflow",
            "example": "custom"
          },
          "stages": {
            "type": "array",
            "description": "The stages that make up the workflow. Each stage contains conditions and actions.",
            "items": {
              "$ref": "#/$defs/StageOutput"
            }
          },
          "_execution": {
            "description": "The current execution status of the workflow",
            "example": "{\"status\": \"completed\"}",
            "$ref": "#/$defs/ExecutionOutput"
          },
          "meta": {
            "description": "For workflows being created from a workflow template, this value holds any parameters that could potentially be incompatible with the current project, environment, or flag",
            "$ref": "#/$defs/WorkflowTemplateMetadata"
          },
          "templateKey": {
            "type": "string",
            "description": "For workflows being created from a workflow template, this value is the template's key",
            "example": "example-workflow-template"
          }
        }
      },
      "CustomWorkflowStageMeta": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The zero-based index of the workflow stage",
            "example": 0
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow stage",
            "example": "Stage 1"
          }
        }
      },
      "CustomWorkflowsListingOutput": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of workflows",
            "items": {
              "$ref": "#/$defs/CustomWorkflowOutput"
            }
          }
        }
      },
      "Database": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Label": {
            "type": "string"
          },
          "StartTime": {
            "$ref": "#/$defs/UnixMillis"
          },
          "Tracked": {
            "type": "boolean"
          }
        }
      },
      "DateVersion": {
        "type": "integer"
      },
      "DefaultClientSideAvailability": {
        "type": "object",
        "required": [
          "usingMobileKey",
          "usingEnvironmentId"
        ],
        "properties": {
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs",
            "example": true
          },
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs",
            "example": true
          }
        }
      },
      "DefaultClientSideAvailabilityPost": {
        "type": "object",
        "required": [
          "usingEnvironmentId",
          "usingMobileKey"
        ],
        "properties": {
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs.",
            "example": true
          },
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs.",
            "example": true
          }
        }
      },
      "Defaults": {
        "type": "object",
        "required": [
          "onVariation",
          "offVariation"
        ],
        "properties": {
          "onVariation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve by default when targeting is on.",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve by default when targeting is off.",
            "example": 1
          }
        }
      },
      "DependentExperimentListRep": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DependentExperimentRep"
        }
      },
      "DependentExperimentRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "environmentId",
          "creationDate",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "example-experiment"
          },
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "environmentId": {
            "type": "string",
            "description": "The environment ID",
            "example": "1234a56b7c89d012345e678f"
          },
          "creationDate": {
            "description": "Timestamp of when the experiment was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "archivedDate": {
            "description": "Timestamp of when the experiment was archived",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment/experiments/example-experiment",
                "type": "application/json"
              }
            }
          }
        }
      },
      "DependentFlag": {
        "type": "object",
        "required": [
          "key",
          "_links",
          "_site"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The flag name",
            "example": "Example dependent flag"
          },
          "key": {
            "type": "string",
            "description": "The flag key",
            "example": "example-dependent-flag"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the dependent flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/example-environment/features/example-dependent-flag\", \"type\": \"text/html\" }",
            "$ref": "#/$defs/Link"
          }
        }
      },
      "DependentFlagEnvironment": {
        "type": "object",
        "required": [
          "key",
          "_links",
          "_site"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The environment name",
            "example": "Example environment"
          },
          "key": {
            "type": "string",
            "description": "The environment key",
            "example": "example-environment"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the dependent flag in this environment in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/example-environment/features/example-dependent-flag\", \"type\": \"text/html\" }",
            "$ref": "#/$defs/Link"
          }
        }
      },
      "DependentFlagsByEnvironment": {
        "type": "object",
        "required": [
          "items",
          "_links",
          "_site"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of dependent flags, which are flags that use the requested flag as a prerequisite",
            "items": {
              "$ref": "#/$defs/DependentFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the prerequisite flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/~/features/example-prereq-flag\", \"type\": \"text/html\" }",
            "$ref": "#/$defs/Link"
          }
        }
      },
      "DesignExpandableProperties": {
        "type": "object",
        "properties": {
          "treatments": {
            "type": "array",
            "description": "Details on the variations you are testing in the experiment",
            "items": {
              "$ref": "#/$defs/TreatmentRep"
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "description": "Details on the secondary metrics for this experiment",
            "items": {
              "$ref": "#/$defs/MetricV2Rep"
            }
          }
        }
      },
      "DesignRep": {
        "type": "object",
        "required": [
          "hypothesis"
        ],
        "properties": {
          "hypothesis": {
            "type": "string",
            "description": "The expected outcome of this experiment",
            "example": "Example hypothesis, the new button placement will increase conversion"
          },
          "canReshuffleTraffic": {
            "type": "boolean",
            "description": "Whether the experiment can reassign traffic to different variations when you increase or decrease the traffic in your experiment audience (true) or keep all traffic assigned to its initial variation (false).",
            "example": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/FlagRep"
            },
            "description": "Details on the flag used in this experiment"
          },
          "primaryMetric": {
            "description": "Details on the primary metric for this experiment",
            "$ref": "#/$defs/MetricV2Rep"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for this iteration",
            "example": "user"
          },
          "treatments": {
            "type": "array",
            "description": "Details on the variations you are testing in the experiment",
            "items": {
              "$ref": "#/$defs/TreatmentRep"
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "description": "Details on the secondary metrics for this experiment",
            "items": {
              "$ref": "#/$defs/MetricV2Rep"
            }
          }
        }
      },
      "Destination": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this Data Export destination",
            "example": "610addeadbeefaa86ec9a7d4"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/destinations",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4",
                "type": "application/json"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "A human-readable name for your Data Export destination",
            "example": "example-destination"
          },
          "kind": {
            "type": "string",
            "description": "The type of Data Export destination",
            "example": "google-pubsub",
            "enum": [
              "google-pubsub",
              "kinesis",
              "mparticle",
              "segment",
              "azure-event-hubs"
            ]
          },
          "version": {
            "type": "number",
            "example": 1
          },
          "config": {
            "description": "An object with the configuration parameters required for the destination type",
            "example": "{\"project\":\"test-prod\",\"topic\":\"ld-pubsub-test-192301\"}"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the export is on, that is, the status of the integration",
            "example": true
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this Data Export destination",
            "$ref": "#/$defs/Access"
          }
        }
      },
      "DestinationPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-readable name for your Data Export destination",
            "example": "example-destination"
          },
          "kind": {
            "type": "string",
            "description": "The type of Data Export destination",
            "example": "google-pubsub",
            "enum": [
              "google-pubsub",
              "kinesis",
              "mparticle",
              "segment",
              "azure-event-hubs"
            ]
          },
          "config": {
            "description": "An object with the configuration parameters required for the destination type",
            "example": "{\"project\":\"test-prod\",\"topic\":\"ld-pubsub-test-192301\"}"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the export is on. Displayed as the integration status in the LaunchDarkly UI.",
            "example": true
          }
        }
      },
      "Destinations": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/destinations",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of Data Export destinations",
            "items": {
              "$ref": "#/$defs/Destination"
            }
          }
        }
      },
      "DurationUnit": {
        "type": "string"
      },
      "Effect": {
        "type": "string"
      },
      "Environment": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "name",
          "apiKey",
          "mobileKey",
          "color",
          "defaultTtl",
          "secureMode",
          "defaultTrackEvents",
          "requireComments",
          "confirmChanges",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "Links to other resources within the API. Includes the URL and content type of those resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "57be1db38b75bf0772d11384"
          },
          "key": {
            "type": "string",
            "description": "A project-unique key for the new environment.",
            "example": "my-environment"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the new environment.",
            "example": "My Environment"
          },
          "apiKey": {
            "type": "string",
            "description": "API key to use with client-side SDKs.",
            "example": "XYZ"
          },
          "mobileKey": {
            "type": "string",
            "description": "API key to use with mobile SDKs.",
            "example": "XYZ"
          },
          "color": {
            "type": "string",
            "description": "The color used to indicate this environment in the UI.",
            "example": "F5A623"
          },
          "defaultTtl": {
            "type": "integer",
            "description": "The default time (in minutes) that the PHP SDK can cache feature flag rules locally.",
            "example": 5
          },
          "secureMode": {
            "type": "boolean",
            "description": "Ensures that one end user of the client-side SDK cannot inspect the variations for another end user.",
            "example": true
          },
          "defaultTrackEvents": {
            "type": "boolean",
            "description": "Enables tracking detailed information for new flags by default.",
            "example": false
          },
          "requireComments": {
            "type": "boolean",
            "description": "Whether members who modify flags and segments through the LaunchDarkly user interface are required to add a comment",
            "example": true
          },
          "confirmChanges": {
            "type": "boolean",
            "description": "Whether members who modify flags and segments through the LaunchDarkly user interface are required to confirm those changes",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for this environment",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "approvalSettings": {
            "description": "Details on the approval settings for this environment",
            "$ref": "#/$defs/ApprovalSettings"
          }
        }
      },
      "EnvironmentPost": {
        "type": "object",
        "required": [
          "name",
          "key",
          "color"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the new environment.",
            "example": "My Environment"
          },
          "key": {
            "type": "string",
            "description": "A project-unique key for the new environment.",
            "example": "my-environment"
          },
          "color": {
            "type": "string",
            "description": "A color to indicate this environment in the UI.",
            "example": "F5A623"
          },
          "defaultTtl": {
            "type": "integer",
            "description": "The default time (in minutes) that the PHP SDK can cache feature flag rules locally.",
            "example": 5
          },
          "secureMode": {
            "type": "boolean",
            "description": "Ensures that one end user of the client-side SDK cannot inspect the variations for another end user.",
            "example": true
          },
          "defaultTrackEvents": {
            "type": "boolean",
            "description": "Enables tracking detailed information for new flags by default.",
            "example": false
          },
          "confirmChanges": {
            "type": "boolean",
            "description": "Requires confirmation for all flag and segment changes via the UI in this environment.",
            "example": false
          },
          "requireComments": {
            "type": "boolean",
            "description": "Requires comments for all flag and segment changes via the UI in this environment.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "Tags to apply to the new environment.",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "source": {
            "description": "Indicates that the new environment created will be cloned from the provided source environment.",
            "$ref": "#/$defs/SourceEnv"
          }
        }
      },
      "Environments": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of environments returned",
            "example": 2
          },
          "items": {
            "type": "array",
            "description": "An array of environments",
            "items": {
              "$ref": "#/$defs/Environment"
            }
          }
        }
      },
      "EvaluationReason": {
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "Describes the general reason that LaunchDarkly selected this variation.",
            "example": "OFF"
          },
          "ruleIndex": {
            "type": "integer",
            "description": "The positional index of the matching rule if the kind is 'RULE_MATCH'. The index is 0-based.",
            "example": 3
          },
          "ruleID": {
            "type": "string",
            "description": "The unique identifier of the matching rule if the kind is 'RULE_MATCH'.",
            "example": "1234567890"
          },
          "prerequisiteKey": {
            "type": "string",
            "description": "The key of the flag that failed if the kind is 'PREREQUISITE_FAILED'.",
            "example": "someotherflagkey"
          },
          "inExperiment": {
            "type": "boolean",
            "description": "Indicates whether the evaluation occurred as part of an experiment.",
            "example": true
          },
          "errorKind": {
            "type": "string",
            "description": "The specific error type if the kind is 'ERROR'.",
            "example": "USER_NOT_SPECIFIED"
          }
        }
      },
      "ExecutionOutput": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the execution of this workflow stage",
            "example": "completed"
          },
          "stopDate": {
            "description": "Timestamp of when the workflow was completed.",
            "example": "1718467200000",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "ExpandableApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/$defs/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/$defs/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/$defs/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/$defs/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/$defs/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/$defs/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/$defs/CustomWorkflowMeta"
          },
          "resourceId": {
            "type": "string",
            "description": "String representation of a resource"
          },
          "approvalSettings": {
            "description": "The settings for this approval",
            "$ref": "#/$defs/ApprovalSettings"
          },
          "project": {
            "description": "Project the approval request belongs to",
            "$ref": "#/$defs/Project"
          },
          "environment": {
            "description": "Environment the approval request belongs to",
            "$ref": "#/$defs/Environment"
          },
          "flag": {
            "description": "Flag the approval request belongs to",
            "$ref": "#/$defs/ExpandedFlagRep"
          }
        }
      },
      "ExpandableApprovalRequestsResponse": {
        "type": "object",
        "required": [
          "items",
          "totalCount",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of approval requests",
            "items": {
              "$ref": "#/$defs/ExpandableApprovalRequestResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of approval requests",
            "example": 1
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpandedFlagRep": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "key",
          "_version",
          "creationDate",
          "variations",
          "temporary",
          "tags",
          "_links",
          "customProperties",
          "archived"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My Flag"
          },
          "kind": {
            "type": "string",
            "description": "Kind of feature flag",
            "example": "boolean",
            "enum": [
              "boolean",
              "multivariate"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag",
            "example": "This flag controls the example widgets"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "my-flag"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the feature flag",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of flag creation date",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use <code>clientSideAvailability</code>. Whether this flag should be made available to the client-side JavaScript SDK",
            "example": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag",
            "items": {
              "$ref": "#/$defs/Variation"
            },
            "example": [
              {
                "_id": "e432f62b-55f6-49dd-a02f-eb24acf39d05",
                "value": true
              },
              {
                "_id": "a00bf58d-d252-476c-b915-15a74becacb4",
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains the flag",
            "example": "569f183514f4432160000007"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this feature flag",
            "$ref": "#/$defs/MemberSummary"
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{\"jira.issues\":{\"name\":\"Jira issues\",\"value\":[\"is-123\",\"is-456\"]}}",
            "$ref": "#/$defs/CustomProperties"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived",
            "example": false
          },
          "archivedDate": {
            "description": "If archived is true, date of archive",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0,\"offVariation\":1}",
            "$ref": "#/$defs/Defaults"
          }
        }
      },
      "Experiment": {
        "type": "object",
        "required": [
          "key",
          "name",
          "_maintainerId",
          "_creationDate",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The experiment ID",
            "example": "12ab3c45de678910fgh12345"
          },
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "example-experiment"
          },
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "description": {
            "type": "string",
            "description": "The experiment description",
            "example": "An example experiment, used in testing"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this experiment.",
            "example": "12ab3c45de678910fgh12345"
          },
          "_creationDate": {
            "description": "Timestamp of when the experiment was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "archivedDate": {
            "description": "Timestamp of when the experiment was archived",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment/experiments/my-experiment",
                "type": "application/json"
              }
            }
          },
          "currentIteration": {
            "description": "Details on the current iteration",
            "$ref": "#/$defs/IterationRep"
          },
          "draftIteration": {
            "description": "Details on the current iteration. This iteration may be already started, or may still be a draft.",
            "$ref": "#/$defs/IterationRep"
          },
          "previousIterations": {
            "type": "array",
            "description": "Details on the previous iterations for this experiment.",
            "items": {
              "$ref": "#/$defs/IterationRep"
            }
          }
        }
      },
      "ExperimentAllocationRep": {
        "type": "object",
        "required": [
          "defaultVariation",
          "canReshuffle"
        ],
        "properties": {
          "defaultVariation": {
            "type": "integer"
          },
          "canReshuffle": {
            "type": "boolean"
          }
        }
      },
      "ExperimentBayesianResultsRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "treatmentResults": {
            "type": "array",
            "description": "A list of the results for each treatment",
            "items": {
              "$ref": "#/$defs/TreatmentResultRep"
            }
          },
          "metricSeen": {
            "$ref": "#/$defs/MetricSeen"
          },
          "probabilityOfMismatch": {
            "type": "number",
            "description": "The probability of a Sample Ratio Mismatch",
            "example": 0.9999999999999738
          }
        }
      },
      "ExperimentCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of experiments",
            "items": {
              "$ref": "#/$defs/Experiment"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "The total number of experiments in this project and environment. Does not include legacy experiments."
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExperimentEnabledPeriodRep": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "stopDate": {
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "ExperimentEnvironmentSettingRep": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "stopDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "enabledPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ExperimentEnabledPeriodRep"
            }
          }
        }
      },
      "ExperimentExpandableProperties": {
        "type": "object",
        "properties": {
          "draftIteration": {
            "description": "Details on the current iteration. This iteration may be already started, or may still be a draft.",
            "$ref": "#/$defs/IterationRep"
          },
          "previousIterations": {
            "type": "array",
            "description": "Details on the previous iterations for this experiment.",
            "items": {
              "$ref": "#/$defs/IterationRep"
            }
          }
        }
      },
      "ExperimentInfoRep": {
        "type": "object",
        "required": [
          "baselineIdx",
          "items"
        ],
        "properties": {
          "baselineIdx": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/LegacyExperimentRep"
            }
          }
        }
      },
      "ExperimentMetadataRep": {
        "type": "object",
        "properties": {
          "key": {}
        }
      },
      "ExperimentPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"update_action\"}</code>. Some instructions also require a <code>value</code> field in the array element.",
            "example": "[{\"kind\": \"updateName\", \"value\": \"Updated experiment name\"}]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "ExperimentPost": {
        "type": "object",
        "required": [
          "name",
          "maintainerId",
          "key",
          "iteration"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "description": {
            "type": "string",
            "description": "The experiment description",
            "example": "An example experiment, used in testing"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this experiment.",
            "example": "12ab3c45de678910fgh12345"
          },
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "example-experiment"
          },
          "iteration": {
            "description": "Details on the construction of the initial iteration",
            "$ref": "#/$defs/IterationInput"
          }
        }
      },
      "ExperimentResults": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ExperimentMetadataRep"
            }
          },
          "totals": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ExperimentTotalsRep"
            }
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ExperimentTimeSeriesSlice"
            }
          },
          "stats": {
            "$ref": "#/$defs/ExperimentStatsRep"
          },
          "granularity": {
            "type": "string"
          },
          "metricSeen": {
            "$ref": "#/$defs/MetricSeen"
          }
        }
      },
      "ExperimentStatsRep": {
        "type": "object",
        "properties": {
          "pValue": {
            "type": "number"
          },
          "chi2": {
            "type": "number"
          },
          "winningVariationIdx": {
            "type": "integer"
          },
          "minSampleSizeMet": {
            "type": "boolean"
          }
        }
      },
      "ExperimentTimeSeriesSlice": {
        "type": "object",
        "properties": {
          "Time": {
            "$ref": "#/$defs/UnixMillis"
          },
          "VariationData": {
            "$ref": "#/$defs/ExperimentTimeSeriesVariationSlices"
          }
        }
      },
      "ExperimentTimeSeriesVariationSlice": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "cumulativeValue": {
            "type": "number"
          },
          "cumulativeCount": {
            "type": "integer",
            "format": "int64"
          },
          "conversionRate": {
            "type": "number"
          },
          "cumulativeConversionRate": {
            "type": "number"
          },
          "confidenceInterval": {
            "$ref": "#/$defs/ConfidenceIntervalRep"
          },
          "cumulativeConfidenceInterval": {
            "$ref": "#/$defs/ConfidenceIntervalRep"
          }
        }
      },
      "ExperimentTimeSeriesVariationSlices": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExperimentTimeSeriesVariationSlice"
        }
      },
      "ExperimentTotalsRep": {
        "type": "object",
        "properties": {
          "cumulativeValue": {
            "type": "number"
          },
          "cumulativeCount": {
            "type": "integer",
            "format": "int64"
          },
          "cumulativeImpressionCount": {
            "type": "integer",
            "format": "int64"
          },
          "cumulativeConversionRate": {
            "type": "number"
          },
          "cumulativeConfidenceInterval": {
            "$ref": "#/$defs/ConfidenceIntervalRep"
          },
          "pValue": {
            "type": "number"
          },
          "improvement": {
            "type": "number"
          },
          "minSampleSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExperimentalProperties": {
        "type": "object",
        "properties": {}
      },
      "ExperimentationSettingsPut": {
        "type": "object",
        "required": [
          "randomizationUnits"
        ],
        "properties": {
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this project.",
            "items": {
              "$ref": "#/$defs/RandomizationUnitInput"
            }
          }
        }
      },
      "ExperimentationSettingsRep": {
        "type": "object",
        "properties": {
          "_projectId": {
            "type": "string"
          },
          "_projectKey": {
            "type": "string"
          },
          "randomizationUnits": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/RandomizationUnitRep"
            }
          },
          "_creationDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          }
        }
      },
      "ExpiringTarget": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "expirationDate",
          "contextKind",
          "contextKey",
          "_resourceId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this expiring target",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "The version of this expiring target",
            "example": 1
          },
          "expirationDate": {
            "description": "A timestamp for when the target expires",
            "example": "1672358400000",
            "$ref": "#/$defs/UnixMillis"
          },
          "contextKind": {
            "type": "string",
            "description": "The context kind of the context to be removed",
            "example": "user"
          },
          "contextKey": {
            "type": "string",
            "description": "A unique key used to represent the context to be removed",
            "example": "context-key-123abc"
          },
          "targetType": {
            "type": "string",
            "description": "A segment's target type, <code>included</code> or <code>excluded</code>. Included when expiring targets are updated on a segment.",
            "example": "included"
          },
          "variationId": {
            "type": "string",
            "description": "A unique ID used to represent the flag variation. Included when expiring targets are updated on a feature flag.",
            "example": "cc4332e2-bd4d-4fe0-b509-dfd2caf8dd73"
          },
          "_resourceId": {
            "description": "Details on the segment or flag this expiring target belongs to, its environment, and its project",
            "$ref": "#/$defs/ResourceId"
          }
        }
      },
      "ExpiringTargetError": {
        "type": "object",
        "required": [
          "instructionIndex",
          "message"
        ],
        "properties": {
          "instructionIndex": {
            "type": "integer",
            "description": "The index of the PATCH instruction where the error occurred",
            "example": 1
          },
          "message": {
            "type": "string",
            "description": "The error message related to a failed PATCH instruction",
            "example": "example error message"
          }
        }
      },
      "ExpiringTargetGetResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of expiring targets",
            "items": {
              "$ref": "#/$defs/ExpiringTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpiringTargetPatchResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of the results from each instruction",
            "items": {
              "$ref": "#/$defs/ExpiringTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalInstructions": {
            "type": "integer"
          },
          "successfulInstructions": {
            "type": "integer"
          },
          "failedInstructions": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ExpiringTargetError"
            }
          }
        }
      },
      "ExpiringUserTargetGetResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of expiring user targets",
            "items": {
              "$ref": "#/$defs/ExpiringUserTargetItem"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpiringUserTargetItem": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "expirationDate",
          "userKey",
          "_resourceId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this expiring user target",
            "example": "12ab3c45de678910fgh12345"
          },
          "_version": {
            "type": "integer",
            "description": "The version of this expiring user target",
            "example": 1
          },
          "expirationDate": {
            "description": "A timestamp for when the user target expires",
            "example": "1658192820000",
            "$ref": "#/$defs/UnixMillis"
          },
          "userKey": {
            "type": "string",
            "description": "A unique key used to represent the user",
            "example": "example-user-key"
          },
          "targetType": {
            "type": "string",
            "description": "A segment's target type. Included when expiring user targets are updated on a segment.",
            "example": "included"
          },
          "variationId": {
            "type": "string",
            "description": "A unique key used to represent the flag variation. Included when expiring user targets are updated on a feature flag.",
            "example": "ce67d625-a8b9-4fb5-a344-ab909d9d4f4d"
          },
          "_resourceId": {
            "description": "Details on the resource from which the user is expiring",
            "$ref": "#/$defs/ResourceIDResponse"
          }
        }
      },
      "ExpiringUserTargetPatchResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of expiring user targets",
            "items": {
              "$ref": "#/$defs/ExpiringUserTargetItem"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalInstructions": {
            "type": "integer",
            "description": "The total count of instructions sent in the PATCH request",
            "example": 1
          },
          "successfulInstructions": {
            "type": "integer",
            "description": "The total count of successful instructions sent in the PATCH request",
            "example": 1
          },
          "failedInstructions": {
            "type": "integer",
            "description": "The total count of the failed instructions sent in the PATCH request",
            "example": 0
          },
          "errors": {
            "type": "array",
            "description": "An array of error messages for the failed instructions",
            "items": {
              "$ref": "#/$defs/ExpiringTargetError"
            }
          }
        }
      },
      "Export": {
        "type": "object",
        "required": [
          "id",
          "segmentKey",
          "creationTime",
          "status",
          "sizeBytes",
          "size",
          "initiator",
          "_links"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The export ID",
            "example": "1234a567-bcd8-9123-4567-abcd1234567f"
          },
          "segmentKey": {
            "type": "string",
            "description": "The segment key",
            "example": "example-big-segment"
          },
          "creationTime": {
            "description": "Timestamp of when this export was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "status": {
            "type": "string",
            "description": "The export status",
            "example": "complete"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64",
            "description": "The export size, in bytes",
            "example": 18
          },
          "size": {
            "type": "string",
            "description": "The export size, with units",
            "example": "18 B"
          },
          "initiator": {
            "description": "Details on the member who initiated the export",
            "example": "{\"name\": \"Bob Loblaw\", \"email\": \"bob@loblaw.com\"}",
            "$ref": "#/$defs/InitiatorRep"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources, including the location of the exported file"
          }
        }
      },
      "Extinction": {
        "type": "object",
        "required": [
          "revision",
          "message",
          "time",
          "flagKey",
          "projKey"
        ],
        "properties": {
          "revision": {
            "type": "string",
            "description": "The identifier for the revision where flag became extinct. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "message": {
            "type": "string",
            "description": "Description of the extinction. For example, the commit message for the revision.",
            "example": "Remove flag for launched feature"
          },
          "time": {
            "description": "Time of extinction",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          },
          "flagKey": {
            "type": "string",
            "description": "The feature flag key",
            "example": "enable-feature"
          },
          "projKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          }
        }
      },
      "ExtinctionCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/Extinction"
              }
            },
            "description": "An array of extinction events"
          }
        }
      },
      "ExtinctionListPost": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Extinction"
        }
      },
      "FeatureFlag": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "key",
          "_version",
          "creationDate",
          "variations",
          "temporary",
          "tags",
          "_links",
          "experiments",
          "customProperties",
          "archived",
          "environments"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My Flag"
          },
          "kind": {
            "type": "string",
            "description": "Kind of feature flag",
            "example": "boolean",
            "enum": [
              "boolean",
              "multivariate"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag",
            "example": "This flag controls the example widgets"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "my-flag"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the feature flag",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of flag creation date",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use <code>clientSideAvailability</code>. Whether this flag should be made available to the client-side JavaScript SDK",
            "example": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag",
            "items": {
              "$ref": "#/$defs/Variation"
            },
            "example": [
              {
                "_id": "e432f62b-55f6-49dd-a02f-eb24acf39d05",
                "value": true
              },
              {
                "_id": "a00bf58d-d252-476c-b915-15a74becacb4",
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "maintainerId": {
            "type": "string",
            "description": "Associated maintainerId for the feature flag",
            "example": "569f183514f4432160000007"
          },
          "_maintainer": {
            "description": "Associated maintainer member info for the feature flag",
            "$ref": "#/$defs/MemberSummary"
          },
          "maintainerTeamKey": {
            "type": "string",
            "description": "The key of the associated team that maintains this feature flag",
            "example": "team-1"
          },
          "_maintainerTeam": {
            "description": "Associated maintainer team info for the feature flag",
            "$ref": "#/$defs/MaintainerTeam"
          },
          "goalIds": {
            "type": "array",
            "description": "Deprecated",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "experiments": {
            "description": "Experimentation data for the feature flag",
            "example": "{\"baselineIdx\": 0,\"items\": []}",
            "$ref": "#/$defs/ExperimentInfoRep"
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{\"jira.issues\":{\"name\":\"Jira issues\",\"value\":[\"is-123\",\"is-456\"]}}",
            "$ref": "#/$defs/CustomProperties"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived",
            "example": false
          },
          "archivedDate": {
            "description": "If archived is true, date of archive",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0,\"offVariation\":1}",
            "$ref": "#/$defs/Defaults"
          },
          "environments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/FeatureFlagConfig"
            },
            "description": "Details on the environments for this flag",
            "example": {
              "my-environment": {
                "_environmentName": "My Environment",
                "_site": {
                  "href": "/default/my-environment/features/client-side-flag",
                  "type": "text/html"
                },
                "_summary": {
                  "prerequisites": 0,
                  "variations": {
                    "0": {
                      "isFallthrough": true,
                      "nullRules": 0,
                      "rules": 0,
                      "targets": 0
                    },
                    "1": {
                      "isOff": true,
                      "nullRules": 0,
                      "rules": 0,
                      "targets": 0
                    }
                  }
                },
                "archived": false,
                "fallthrough": {
                  "variation": 0
                },
                "lastModified": 1627071171347,
                "offVariation": 1,
                "on": false,
                "prerequisites": [],
                "rules": [],
                "salt": "61eddeadbeef4da1facecafe3a60a397",
                "sel": "810edeadbeef4844facecafe438f2999492",
                "targets": [],
                "trackEvents": false,
                "trackEventsFallthrough": false,
                "version": 1
              }
            }
          }
        }
      },
      "FeatureFlagBody": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My flag"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "my-flag"
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag. Defaults to an empty string.",
            "example": "This flag controls the example widgets"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use <code>clientSideAvailability</code>. Whether this flag should be made available to the client-side JavaScript SDK. Defaults to <code>false</code>."
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/$defs/ClientSideAvailabilityPost"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag. The variation values must be unique. If omitted, two boolean variations of <code>true</code> and <code>false</code> will be used.",
            "items": {
              "$ref": "#/$defs/Variation"
            },
            "example": [
              {
                "value": true
              },
              {
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag. Defaults to <code>true</code>.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag. Defaults to an empty array.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{ \"jira.issues\": {\"name\": \"Jira issues\", \"value\": [\"is-123\", \"is-456\"]} }",
            "$ref": "#/$defs/CustomProperties"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0, \"offVariation\":1}",
            "$ref": "#/$defs/Defaults"
          }
        }
      },
      "FeatureFlagConfig": {
        "type": "object",
        "required": [
          "on",
          "archived",
          "salt",
          "sel",
          "lastModified",
          "version",
          "_site",
          "_environmentName",
          "trackEvents",
          "trackEventsFallthrough"
        ],
        "properties": {
          "on": {
            "type": "boolean",
            "description": "Whether the flag is on"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived"
          },
          "salt": {
            "type": "string"
          },
          "sel": {
            "type": "string"
          },
          "lastModified": {
            "description": "Timestamp of when the flag configuration was most recently modified",
            "$ref": "#/$defs/UnixMillis"
          },
          "version": {
            "type": "integer",
            "description": "Version of the feature flag"
          },
          "targets": {
            "type": "array",
            "description": "An array of the individual targets that will receive a specific variation based on their key",
            "items": {
              "$ref": "#/$defs/Target"
            }
          },
          "contextTargets": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Target"
            }
          },
          "rules": {
            "type": "array",
            "description": "An array of the rules for how to serve a variation to specific targets based on their attributes",
            "items": {
              "$ref": "#/$defs/Rule"
            }
          },
          "fallthrough": {
            "description": "Details on the variation or rollout to serve as part of the flag's default rule",
            "$ref": "#/$defs/VariationOrRolloutRep"
          },
          "offVariation": {
            "type": "integer",
            "description": "The ID of the variation to serve when the flag is off"
          },
          "prerequisites": {
            "type": "array",
            "description": "An array of the prerequisite flags and their variations that are required before this flag takes effect",
            "items": {
              "$ref": "#/$defs/Prerequisite"
            }
          },
          "_site": {
            "description": "Details on how to access the flag configuration in the LaunchDarkly UI",
            "$ref": "#/$defs/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this flag",
            "$ref": "#/$defs/Access"
          },
          "_environmentName": {
            "type": "string",
            "description": "The environment name"
          },
          "trackEvents": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for the feature flag, for all rules"
          },
          "trackEventsFallthrough": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for the feature flag, for the default rule"
          },
          "_debugEventsUntilDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "_summary": {
            "description": "A summary of the prerequisites and variations for this flag",
            "$ref": "#/$defs/FlagSummary"
          }
        }
      },
      "FeatureFlagScheduledChange": {
        "type": "object",
        "required": [
          "_id",
          "_creationDate",
          "_maintainerId",
          "_version",
          "executionDate",
          "instructions"
        ],
        "properties": {
          "_id": {
            "description": "The ID of this scheduled change",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/FeatureWorkflowId"
          },
          "_creationDate": {
            "description": "Timestamp of when the scheduled change was created",
            "example": "1654123897062",
            "$ref": "#/$defs/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the scheduled change maintainer",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the scheduled change",
            "example": 1
          },
          "executionDate": {
            "description": "When the scheduled changes should be executed",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          },
          "instructions": {
            "description": "The actions to perform on the execution date for these scheduled changes",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/$defs/Instructions"
          },
          "conflicts": {
            "description": "Details on any conflicting scheduled changes"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FeatureFlagScheduledChanges": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of scheduled changes",
            "items": {
              "$ref": "#/$defs/FeatureFlagScheduledChange"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FeatureFlagStatus": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Status of the flag",
            "example": "inactive"
          },
          "lastRequested": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last time flag was requested",
            "example": "2020-02-05T18:17:01.514Z"
          },
          "default": {
            "description": "Default value seen from code"
          }
        }
      },
      "FeatureFlagStatusAcrossEnvironments": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/FeatureFlagStatus"
            },
            "description": "Flag status for environment.",
            "example": {
              "production": {
                "lastRequested": "2020-02-05T18:17:01.514Z",
                "name": "inactive"
              }
            }
          },
          "key": {
            "type": "string",
            "description": "feature flag key",
            "example": "my-flag"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "example": {
              "parent": {
                "href": "/api/v2/flag-status",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flag-status/my-project/my-flag",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FeatureFlagStatuses": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "example": {
              "self": {
                "href": "/api/v2/flag-statuses/my-project/my-environment",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/FlagStatusRep"
            }
          }
        }
      },
      "FeatureFlags": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of feature flags",
            "items": {
              "$ref": "#/$defs/FeatureFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/flags/default",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of flags",
            "example": 1
          },
          "totalCountWithDifferences": {
            "type": "integer",
            "description": "The number of flags that have differences between environments. Only shown when query parameter <code>compare</code> is <code>true</code>.",
            "example": 0
          }
        }
      },
      "FeatureWorkflowId": {
        "type": "string"
      },
      "FileRep": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "The imported file name, including the extension",
            "example": "bigsegimport.csv"
          },
          "status": {
            "type": "string",
            "description": "The imported file status",
            "example": "complete"
          }
        }
      },
      "FlagConfigApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/$defs/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/$defs/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/$defs/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/$defs/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/$defs/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/$defs/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/$defs/CustomWorkflowMeta"
          }
        }
      },
      "FlagConfigApprovalRequestsResponse": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of approval requests",
            "items": {
              "$ref": "#/$defs/FlagConfigApprovalRequestResponse"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagConfigEvaluation": {
        "type": "object",
        "properties": {
          "contextKinds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FlagCopyConfigEnvironment": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The environment key"
          },
          "currentVersion": {
            "type": "integer",
            "description": "Optional flag version. If you include this, the operation only succeeds if the current flag version in the environment matches this version."
          }
        }
      },
      "FlagCopyConfigPost": {
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "description": "The source environment",
            "example": "{\"key\": \"example-source-env\", \"currentVersion\": 1}",
            "$ref": "#/$defs/FlagCopyConfigEnvironment"
          },
          "target": {
            "description": "The target environment",
            "example": "{\"key\": \"example-target-env\", \"currentVersion\": 1}",
            "$ref": "#/$defs/FlagCopyConfigEnvironment"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment"
          },
          "includedActions": {
            "type": "array",
            "description": "Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateRules",
                "updateFallthrough",
                "updateOffVariation",
                "updatePrerequisites",
                "updateTargets"
              ]
            },
            "example": [
              "updateOn"
            ]
          },
          "excludedActions": {
            "type": "array",
            "description": "Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either  <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateRules",
                "updateFallthrough",
                "updateOffVariation",
                "updatePrerequisites",
                "updateTargets"
              ]
            },
            "example": [
              "updateOn"
            ]
          }
        }
      },
      "FlagDefaults": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default. Set <code>usingMobileKey</code> to make the flag available for mobile SDKs. Set <code>usingEnvironmentId</code> to make the flag available for client-side SDKs.",
            "example": "{\"usingMobileKey\": true, \"usingEnvironmentId\": false}",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "booleanDefaults": {
            "description": "Defaults for boolean flags within this project",
            "$ref": "#/$defs/BooleanDefaults"
          }
        }
      },
      "FlagFollowersByProjEnvGetRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of flags and their followers",
            "items": {
              "$ref": "#/$defs/followersPerFlag"
            }
          }
        }
      },
      "FlagFollowersGetRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of members who are following this flag",
            "items": {
              "$ref": "#/$defs/FollowFlagMember"
            }
          }
        }
      },
      "FlagGlobalAttributesRep": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "key",
          "_version",
          "creationDate",
          "variations",
          "temporary",
          "tags",
          "_links",
          "experiments",
          "customProperties",
          "archived"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My Flag"
          },
          "kind": {
            "type": "string",
            "description": "Kind of feature flag",
            "example": "boolean",
            "enum": [
              "boolean",
              "multivariate"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag",
            "example": "This flag controls the example widgets"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "my-flag"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the feature flag",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of flag creation date",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use <code>clientSideAvailability</code>. Whether this flag should be made available to the client-side JavaScript SDK",
            "example": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag",
            "items": {
              "$ref": "#/$defs/Variation"
            },
            "example": [
              {
                "_id": "e432f62b-55f6-49dd-a02f-eb24acf39d05",
                "value": true
              },
              {
                "_id": "a00bf58d-d252-476c-b915-15a74becacb4",
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "maintainerId": {
            "type": "string",
            "description": "Associated maintainerId for the feature flag",
            "example": "569f183514f4432160000007"
          },
          "_maintainer": {
            "description": "Associated maintainer member info for the feature flag",
            "$ref": "#/$defs/MemberSummary"
          },
          "maintainerTeamKey": {
            "type": "string",
            "description": "The key of the associated team that maintains this feature flag",
            "example": "team-1"
          },
          "_maintainerTeam": {
            "description": "Associated maintainer team info for the feature flag",
            "$ref": "#/$defs/MaintainerTeam"
          },
          "goalIds": {
            "type": "array",
            "description": "Deprecated",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "experiments": {
            "description": "Experimentation data for the feature flag",
            "example": "{\"baselineIdx\": 0,\"items\": []}",
            "$ref": "#/$defs/ExperimentInfoRep"
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{\"jira.issues\":{\"name\":\"Jira issues\",\"value\":[\"is-123\",\"is-456\"]}}",
            "$ref": "#/$defs/CustomProperties"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived",
            "example": false
          },
          "archivedDate": {
            "description": "If archived is true, date of archive",
            "example": "1494437420312",
            "$ref": "#/$defs/UnixMillis"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0,\"offVariation\":1}",
            "$ref": "#/$defs/Defaults"
          }
        }
      },
      "FlagInput": {
        "type": "object",
        "required": [
          "ruleId",
          "flagConfigVersion"
        ],
        "properties": {
          "ruleId": {
            "type": "string",
            "description": "The ID of the variation or rollout of the flag to use. Use \"fallthrough\" for the default targeting behavior when the flag is on.",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          },
          "flagConfigVersion": {
            "type": "integer",
            "description": "The flag version",
            "example": 12
          }
        }
      },
      "FlagLinkCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of flag links",
            "items": {
              "$ref": "#/$defs/FlagLinkRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagLinkMember": {
        "type": "object",
        "required": [
          "_links",
          "_id"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "_id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "FlagLinkRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_deepLink",
          "_timestamp",
          "_createdAt"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_key": {
            "type": "string",
            "description": "The flag link key",
            "example": "example-flag-link"
          },
          "_integrationKey": {
            "type": "string",
            "description": "The integration key for an integration whose <code>manifest.json</code> includes the <code>flagLink</code> capability, if this is a flag link for an existing integration"
          },
          "_id": {
            "type": "string",
            "description": "The ID of this flag link",
            "example": "1234a56b7c89d012345e678f"
          },
          "_deepLink": {
            "type": "string",
            "description": "The URL for the external resource the flag is linked to",
            "example": "https://example.com/archives/123123123"
          },
          "_timestamp": {
            "description": "The time to mark this flag link as associated with the external URL. Defaults to the creation time of the flag link, but can be set to another time during creation.",
            "example": "{\"milliseconds\": 1655342199935, \"seconds\": 1655342199, \"rfc3339\": \"2022-06-16T01:16:39Z\", \"simple\": \"2022-06-16 01:16:39\"}",
            "$ref": "#/$defs/TimestampRep"
          },
          "title": {
            "type": "string",
            "description": "The title of the flag link",
            "example": "Example link title"
          },
          "description": {
            "type": "string",
            "description": "The description of the flag link",
            "example": "Example link description"
          },
          "_metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata required by this integration in order to create a flag link, if this is a flag link for an existing integration. Defined in the integration's <code>manifest.json</code> file under <code>flagLink</code>."
          },
          "_createdAt": {
            "description": "Timestamp of when the flag link was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_member": {
            "description": "Details on the member associated with this flag link",
            "$ref": "#/$defs/FlagLinkMember"
          }
        }
      },
      "FlagListingRep": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "_site": {
            "$ref": "#/$defs/Link"
          }
        }
      },
      "FlagRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "targetingRule": {
            "type": "string",
            "description": "The targeting rule",
            "example": "fallthrough"
          },
          "targetingRuleDescription": {
            "type": "string",
            "description": "The rule description",
            "example": "Customers who live in Canada"
          },
          "targetingRuleClauses": {
            "type": "array",
            "description": "An array of clauses used for individual targeting based on attributes",
            "items": {}
          },
          "flagConfigVersion": {
            "type": "integer",
            "description": "The flag version",
            "example": 12
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FlagScheduledChangesInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update to the scheduled changes",
            "example": "optional comment"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"update_action\"}</code>. Some instructions also require a <code>value</code> field in the array element.",
            "example": "[ { \"kind\": \"replaceScheduledChangesInstructions\", \"value\": [ { \"kind\": \"turnFlagOff\" } ] } ]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "FlagStatusRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flag-statuses/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Status of the flag",
            "example": "inactive"
          },
          "lastRequested": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last time flag was requested",
            "example": "2020-02-05T18:17:01.514Z"
          },
          "default": {
            "description": "Default value seen from code"
          }
        }
      },
      "FlagSummary": {
        "type": "object",
        "required": [
          "variations",
          "prerequisites"
        ],
        "properties": {
          "variations": {
            "$ref": "#/$defs/AllVariationsSummary"
          },
          "prerequisites": {
            "type": "integer"
          }
        }
      },
      "FlagTriggerInput": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"trigger_action\"}</code>.",
            "items": {
              "$ref": "#/$defs/Instruction"
            },
            "example": [
              {
                "kind": "disableTrigger"
              }
            ]
          }
        }
      },
      "FlagsInput": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FlagInput"
        }
      },
      "FollowFlagMember": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/members/569f183514f4432160000007",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "569f183514f4432160000007"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "An"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Example"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "a.example@example.com"
          }
        }
      },
      "ForbiddenErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "forbidden"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Forbidden. Access to the requested resource was denied."
          }
        }
      },
      "FormVariableConfig": {
        "type": "object",
        "additionalProperties": {}
      },
      "HunkRep": {
        "type": "object",
        "required": [
          "startingLineNumber"
        ],
        "properties": {
          "startingLineNumber": {
            "type": "integer",
            "description": "Line number of beginning of code reference hunk",
            "example": 45
          },
          "lines": {
            "type": "string",
            "description": "Contextual lines of code that include the referenced feature flag",
            "example": "var enableFeature = 'enable-feature';"
          },
          "projKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "flagKey": {
            "type": "string",
            "description": "The feature flag key",
            "example": "enable-feature"
          },
          "aliases": {
            "type": "array",
            "description": "An array of flag key aliases",
            "items": {
              "type": "string"
            },
            "example": [
              "enableFeature",
              "EnableFeature"
            ]
          }
        }
      },
      "Import": {
        "type": "object",
        "required": [
          "id",
          "segmentKey",
          "creationTime",
          "mode",
          "status",
          "_links"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The import ID",
            "example": "1234a567-bcd8-9123-4567-abcd1234567f"
          },
          "segmentKey": {
            "type": "string",
            "description": "The segment key",
            "example": "example-big-segment"
          },
          "creationTime": {
            "description": "Timestamp of when this import was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "mode": {
            "type": "string",
            "description": "The import mode used, either <code>merge</code> or <code>replace</code>",
            "example": "replace"
          },
          "status": {
            "type": "string",
            "description": "The import status",
            "example": "complete"
          },
          "files": {
            "type": "array",
            "description": "The imported files and their status",
            "items": {
              "$ref": "#/$defs/FileRep"
            },
            "example": [
              {
                "filename": "bigsegimport.csv",
                "status": "complete"
              }
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "InitiatorRep": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the member who initiated the export",
            "example": "Bob Loblaw"
          },
          "email": {
            "type": "string",
            "description": "The email address of the member who initiated the export",
            "example": "bob@loblaw.com"
          }
        }
      },
      "Instruction": {
        "type": "object",
        "additionalProperties": {}
      },
      "Instructions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Instruction"
        }
      },
      "Integration": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID for this integration audit log subscription",
            "example": "1234a56b7c89d012345e678f"
          },
          "kind": {
            "type": "string",
            "description": "The type of integration",
            "example": "datadog"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the integration",
            "example": "Example Datadog integration"
          },
          "config": {
            "type": "object",
            "additionalProperties": {},
            "description": "Details on configuration for an integration of this type. Refer to the <code>formVariables</code> field in the corresponding <code>manifest.json</code> for a full list of fields for each integration."
          },
          "statements": {
            "type": "array",
            "description": "Represents a Custom role policy, defining a resource kinds filter the integration audit log subscription responds to.",
            "items": {
              "$ref": "#/$defs/Statement"
            }
          },
          "on": {
            "type": "boolean",
            "description": "Whether the integration is currently active",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "An array of tags for this integration",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this subscription",
            "$ref": "#/$defs/Access"
          },
          "_status": {
            "description": "Details on the most recent successes and errors for this integration",
            "$ref": "#/$defs/IntegrationSubscriptionStatusRep"
          },
          "url": {
            "type": "string",
            "description": "Slack webhook receiver URL. Only used for legacy Slack webhook integrations."
          },
          "apiKey": {
            "type": "string",
            "description": "Datadog API key. Only used for legacy Datadog webhook integrations."
          }
        }
      },
      "IntegrationDeliveryConfiguration": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "integrationKey",
          "projectKey",
          "environmentKey",
          "config",
          "on",
          "tags",
          "name",
          "version"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/$defs/IntegrationDeliveryConfigurationLinks"
          },
          "_id": {
            "type": "string",
            "description": "The integration ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key",
            "example": "example-integration-key"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "development"
          },
          "config": {
            "description": "The delivery configuration for the given integration provider. Only included when requesting a single integration by ID. Refer to the <code>formVariables</code> field in the corresponding <code>manifest.json</code> for a full list of fields for each integration.",
            "$ref": "#/$defs/FormVariableConfig"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the configuration is turned on",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this configuration",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "name": {
            "type": "string",
            "description": "Name of the configuration",
            "example": "Development environment configuration"
          },
          "version": {
            "type": "integer",
            "description": "Version of the current configuration",
            "example": 1
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this configuration",
            "$ref": "#/$defs/Access"
          }
        }
      },
      "IntegrationDeliveryConfigurationCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/$defs/IntegrationDeliveryConfigurationCollectionLinks"
          },
          "items": {
            "type": "array",
            "description": "An array of integration delivery configurations",
            "items": {
              "$ref": "#/$defs/IntegrationDeliveryConfiguration"
            }
          }
        }
      },
      "IntegrationDeliveryConfigurationCollectionLinks": {
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/$defs/Link"
          },
          "parent": {
            "$ref": "#/$defs/Link"
          }
        }
      },
      "IntegrationDeliveryConfigurationLinks": {
        "type": "object",
        "required": [
          "self",
          "parent",
          "project",
          "environment"
        ],
        "properties": {
          "self": {
            "$ref": "#/$defs/Link"
          },
          "parent": {
            "$ref": "#/$defs/Link"
          },
          "project": {
            "$ref": "#/$defs/Link"
          },
          "environment": {
            "$ref": "#/$defs/Link"
          }
        }
      },
      "IntegrationDeliveryConfigurationPost": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "on": {
            "type": "boolean",
            "description": "Whether the delivery configuration is active. Default value is false.",
            "example": false
          },
          "config": {
            "description": "The global integration settings, as specified by the <code>formVariables</code> in the <code>manifest.json</code> for this integration.",
            "example": "{\"required\": \"example value for required formVariables property for sample-integration\", \"optional\": \"example value for optional formVariables property for sample-integration\"}",
            "$ref": "#/$defs/FormVariableConfig"
          },
          "tags": {
            "type": "array",
            "description": "Tags to associate with the integration",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to identify the integration",
            "example": "Sample integration"
          }
        }
      },
      "IntegrationDeliveryConfigurationResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "The status code returned by the validation",
            "example": 200
          },
          "error": {
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp of when the validation was performed",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "responseBody": {
            "type": "string",
            "description": "JSON response to the validation request"
          }
        }
      },
      "IntegrationMetadata": {
        "type": "object",
        "required": [
          "externalId",
          "externalStatus",
          "externalUrl",
          "lastChecked"
        ],
        "properties": {
          "externalId": {
            "type": "string"
          },
          "externalStatus": {
            "$ref": "#/$defs/IntegrationStatus"
          },
          "externalUrl": {
            "type": "string"
          },
          "lastChecked": {
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "IntegrationStatus": {
        "type": "object",
        "required": [
          "display",
          "value"
        ],
        "properties": {
          "display": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "IntegrationStatusRep": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "responseBody": {
            "type": "string"
          },
          "timestamp": {
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "IntegrationSubscriptionStatusRep": {
        "type": "object",
        "properties": {
          "successCount": {
            "type": "integer"
          },
          "lastSuccess": {
            "$ref": "#/$defs/UnixMillis"
          },
          "lastError": {
            "$ref": "#/$defs/UnixMillis"
          },
          "errorCount": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/IntegrationStatusRep"
            }
          }
        }
      },
      "Integrations": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Integration"
            }
          },
          "key": {
            "type": "string"
          }
        }
      },
      "InvalidRequestErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "invalid_request"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid request body"
          }
        }
      },
      "IterationInput": {
        "type": "object",
        "required": [
          "hypothesis",
          "metrics",
          "treatments",
          "flags"
        ],
        "properties": {
          "hypothesis": {
            "type": "string",
            "description": "The expected outcome of this experiment",
            "example": "Example hypothesis, the new button placement will increase conversion"
          },
          "canReshuffleTraffic": {
            "type": "boolean",
            "description": "Whether to allow the experiment to reassign traffic to different variations when you increase or decrease the traffic in your experiment audience (true) or keep all traffic assigned to its initial variation (false). Defaults to true.",
            "example": true
          },
          "metrics": {
            "description": "Details on the metrics for this experiment",
            "$ref": "#/$defs/MetricsInput"
          },
          "treatments": {
            "description": "Details on the variations you are testing in the experiment. You establish these variations in feature flags, and then reuse them in experiments.",
            "$ref": "#/$defs/TreatmentsInput"
          },
          "flags": {
            "description": "Details on the feature flag and targeting rules for this iteration",
            "$ref": "#/$defs/FlagsInput"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for this iteration. Defaults to user.",
            "example": "user"
          }
        }
      },
      "IterationRep": {
        "type": "object",
        "required": [
          "hypothesis",
          "status",
          "createdAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The iteration ID",
            "example": "12ab3c45de678910fgh12345"
          },
          "hypothesis": {
            "type": "string",
            "description": "The expected outcome of this experiment",
            "example": "Example hypothesis, the new button placement will increase conversion"
          },
          "status": {
            "type": "string",
            "description": "The status of the iteration: <code>not_started</code>, <code>running</code>, <code>stopped</code>",
            "example": "running"
          },
          "createdAt": {
            "description": "Timestamp of when the iteration was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "startedAt": {
            "description": "Timestamp of when the iteration started",
            "example": "1655314200000",
            "$ref": "#/$defs/UnixMillis"
          },
          "endedAt": {
            "description": "Timestamp of when the iteration ended",
            "example": "1656610200000",
            "$ref": "#/$defs/UnixMillis"
          },
          "winningTreatmentId": {
            "type": "string",
            "description": "The ID of the treatment chosen when the experiment stopped",
            "example": "122c9f3e-da26-4321-ba68-e0fc02eced58"
          },
          "winningReason": {
            "type": "string",
            "description": "The reason you stopped the experiment",
            "example": "We ran this iteration for two weeks and the winning variation was clear"
          },
          "canReshuffleTraffic": {
            "type": "boolean",
            "description": "Whether the experiment may reassign traffic to different variations when the experiment audience changes (true) or must keep all traffic assigned to its initial variation (false).",
            "example": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/FlagRep"
            },
            "description": "Details on the flag used in this experiment"
          },
          "primaryMetric": {
            "description": "Details on the primary metric for this experiment",
            "$ref": "#/$defs/MetricV2Rep"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for this iteration",
            "example": "user"
          },
          "treatments": {
            "type": "array",
            "description": "Details on the variations you are testing in the experiment",
            "items": {
              "$ref": "#/$defs/TreatmentRep"
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "description": "Details on the secondary metrics for this experiment",
            "items": {
              "$ref": "#/$defs/MetricV2Rep"
            }
          }
        }
      },
      "JSONPatch": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchOperation"
        }
      },
      "LastSeenMetadata": {
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string",
            "description": "The ID of the token used in the member's last session",
            "example": "5b52207f8ca8e631d31fdb2b"
          }
        }
      },
      "LegacyExperimentRep": {
        "type": "object",
        "properties": {
          "metricKey": {
            "type": "string",
            "example": "my-metric"
          },
          "_metric": {
            "$ref": "#/$defs/MetricListingRep"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "production",
              "test",
              "my-environment"
            ]
          },
          "_environmentSettings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/ExperimentEnvironmentSettingRep"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MaintainerTeam": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the maintainer team",
            "example": "example-team"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the maintainer team",
            "example": "Example team"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/teams",
                "type": "application/json"
              },
              "roles": {
                "href": "/api/v2/teams/example-team/roles",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/teams/example-team",
                "type": "application/json"
              }
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email",
          "_pendingInvite",
          "_verified",
          "customRoles",
          "mfa",
          "_lastSeen",
          "creationDate"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Bob"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Loblaw"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "reader"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "bob@loblaw.com"
          },
          "_pendingInvite": {
            "type": "boolean",
            "description": "Whether the member has a pending invitation",
            "example": false
          },
          "_verified": {
            "type": "boolean",
            "description": "Whether the member's email address has been verified",
            "example": true
          },
          "_pendingEmail": {
            "type": "string",
            "description": "The member's email address before it has been verified, for accounts where email verification is required"
          },
          "customRoles": {
            "type": "array",
            "description": "The set of custom roles (as keys) assigned to the member",
            "items": {
              "type": "string"
            },
            "example": [
              "devOps",
              "backend-devs"
            ]
          },
          "mfa": {
            "type": "string",
            "description": "Whether multi-factor authentication is enabled for this member"
          },
          "excludedDashboards": {
            "type": "array",
            "description": "Default dashboards that the member has chosen to ignore",
            "items": {
              "type": "string"
            }
          },
          "_lastSeen": {
            "description": "The member's last session date (as Unix milliseconds since epoch)",
            "example": "1608260796147",
            "$ref": "#/$defs/UnixMillis"
          },
          "_lastSeenMetadata": {
            "description": "Additional metadata associated with the member's last session, for example, whether a token was used",
            "$ref": "#/$defs/LastSeenMetadata"
          },
          "_integrationMetadata": {
            "description": "Details on the member account in an external source, if this member is provisioned externally",
            "$ref": "#/$defs/IntegrationMetadata"
          },
          "teams": {
            "type": "array",
            "description": "Details on the teams this member is assigned to",
            "items": {
              "$ref": "#/$defs/MemberTeamSummaryRep"
            }
          },
          "permissionGrants": {
            "type": "array",
            "description": "A list of permission grants. Permission grants allow a member to have access to a specific action, without having to create or update a custom role.",
            "items": {
              "$ref": "#/$defs/MemberPermissionGrantSummaryRep"
            }
          },
          "creationDate": {
            "description": "Timestamp of when the member was created",
            "example": "1628001602644",
            "$ref": "#/$defs/UnixMillis"
          },
          "oauthProviders": {
            "type": "array",
            "description": "A list of OAuth providers",
            "items": {
              "$ref": "#/$defs/OAuthProviderKind"
            }
          }
        }
      },
      "MemberDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "_id": {
            "type": "string",
            "description": "The member ID",
            "example": "507f1f77bcf86cd799439011"
          },
          "email": {
            "type": "string",
            "description": "The member email",
            "example": "bob@loblaw.com"
          },
          "firstName": {
            "type": "string",
            "description": "The member first name",
            "example": "Bob"
          },
          "lastName": {
            "type": "string",
            "description": "The member last name",
            "example": "Loblaw"
          }
        }
      },
      "MemberImportItem": {
        "type": "object",
        "required": [
          "status",
          "value"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message, including CSV line number, if the <code>status</code> is <code>error</code>"
          },
          "status": {
            "type": "string",
            "description": "Whether this member can be successfully imported (<code>success</code>) or not (<code>error</code>). Even if the status is <code>success</code>, members are only added to a team on a <code>201</code> response.",
            "example": "error"
          },
          "value": {
            "type": "string",
            "description": "The email address for the member requested to be added to this team. May be blank or an error, such as 'invalid email format', if the email address cannot be found or parsed.",
            "example": "a-valid-email@launchdarkly.com"
          }
        }
      },
      "MemberPermissionGrantSummaryRep": {
        "type": "object",
        "required": [
          "actionSet",
          "actions",
          "resource"
        ],
        "properties": {
          "actionSet": {
            "type": "string",
            "description": "The name of the a group of related actions to allow. A permission grant may have either an <code>actionSet</code> or a list of <code>actions</code> but not both at the same time."
          },
          "actions": {
            "type": "array",
            "description": "A list of actions to allow",
            "items": {
              "type": "string"
            },
            "example": [
              "maintainTeam"
            ]
          },
          "resource": {
            "type": "string",
            "description": "The resource for which the <code>actions</code> are allowed",
            "example": "team/qa-team"
          }
        }
      },
      "MemberSummary": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/members/569f183514f4432160000007",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "569f183514f4432160000007"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "An"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Example"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "a.example@example.com"
          }
        }
      },
      "MemberTeamSummaryRep": {
        "type": "object",
        "required": [
          "customRoleKeys",
          "key",
          "name"
        ],
        "properties": {
          "customRoleKeys": {
            "type": "array",
            "description": "A list of keys of the custom roles this team has access to",
            "items": {
              "type": "string"
            },
            "example": [
              "access-to-test-projects"
            ]
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "qa-team"
          },
          "name": {
            "type": "string",
            "description": "The team name",
            "example": "QA Team"
          }
        }
      },
      "MemberTeamsPostInput": {
        "type": "object",
        "required": [
          "teamKeys"
        ],
        "properties": {
          "teamKeys": {
            "type": "array",
            "description": "List of team keys",
            "items": {
              "type": "string"
            },
            "example": [
              "team1",
              "team2"
            ]
          }
        }
      },
      "Members": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of members",
            "items": {
              "$ref": "#/$defs/Member"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of members returned"
          }
        }
      },
      "MethodNotAllowedErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "method_not_allowed"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Method not allowed"
          }
        }
      },
      "MetricCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of metrics",
            "items": {
              "$ref": "#/$defs/MetricListingRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project?limit=20",
                "type": "application/json"
              }
            }
          }
        }
      },
      "MetricInput": {
        "type": "object",
        "required": [
          "key",
          "primary"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "example-metric"
          },
          "primary": {
            "type": "boolean",
            "description": "Whether this is a primary metric (true) or a secondary metric (false)",
            "example": true
          }
        }
      },
      "MetricListingRep": {
        "type": "object",
        "required": [
          "_id",
          "key",
          "name",
          "kind",
          "_links",
          "tags",
          "_creationDate"
        ],
        "properties": {
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric",
            "example": 0
          },
          "_id": {
            "type": "string",
            "description": "The ID of this metric",
            "example": "5902deadbeef667524a01290"
          },
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "my-metric"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "my-metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "_attachedFlagCount": {
            "type": "integer",
            "description": "The number of feature flags currently attached to this metric",
            "example": 0
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/metrics/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "_site": {
            "description": "Details on how to access the metric in the LaunchDarkly UI",
            "example": "{\"href\":\"/experiments/metrics/my-metric/edit\",\"type\":\"text/html\"}",
            "$ref": "#/$defs/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this metric",
            "$ref": "#/$defs/Access"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "_creationDate": {
            "description": "Timestamp of when the metric was created",
            "example": "1628192791148",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "$ref": "#/$defs/Modification"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric",
            "example": "569fdeadbeef1644facecafe"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this metric",
            "example": "{\"_links\":{\"self\":{\"href\":\"/api/v2/members/569fdeadbeef1644facecafe\",\"type\":\"application/json\"}},\"_id\":\"569fdeadbeef1644facecafe\",\"firstName\":\"An\",\"lastName\":\"Example\",\"role\":\"owner\",\"email\":\"an@example.com\"}",
            "$ref": "#/$defs/MemberSummary"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric"
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (<code>true</code>) or to track a conversion when an end user takes an action (<code>false</code>).",
            "example": true
          },
          "successCriteria": {
            "type": "string",
            "description": "For numeric custom metrics, the success criteria",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "unit": {
            "type": "string",
            "description": "For numeric custom metrics, the unit of measure"
          },
          "eventKey": {
            "type": "string",
            "description": "For custom metrics, the event name to use in your code"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          }
        }
      },
      "MetricListingRepExpandableProperties": {
        "type": "object",
        "properties": {
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric",
            "example": 0
          }
        }
      },
      "MetricPost": {
        "type": "object",
        "required": [
          "key",
          "kind"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "example-metric"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "Example metric"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric",
            "example": "optional description"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event your metric will track",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "selector": {
            "type": "string",
            "description": "One or more CSS selectors. Required for click metrics.",
            "example": ".dropdown-toggle"
          },
          "urls": {
            "type": "array",
            "description": "One or more target URLs. Required for click and pageview metrics.",
            "items": {
              "$ref": "#/$defs/UrlPost"
            },
            "example": "invalid example"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the metric is active",
            "example": true
          },
          "isNumeric": {
            "type": "boolean",
            "description": "Whether to track numeric changes in value against a baseline (<code>true</code>) or to track a conversion when an end user takes an action (<code>false</code>). Required for custom metrics.",
            "example": false
          },
          "unit": {
            "type": "string",
            "description": "The unit of measure. Only for numeric custom metrics.",
            "example": "orders"
          },
          "eventKey": {
            "type": "string",
            "description": "The event name to use in your code. Required for custom metrics.",
            "example": "sales generated"
          },
          "successCriteria": {
            "type": "string",
            "description": "Success criteria. Required for numeric custom metrics.",
            "example": "Higher than baseline",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          }
        }
      },
      "MetricRep": {
        "type": "object",
        "required": [
          "_id",
          "key",
          "name",
          "kind",
          "_links",
          "tags",
          "_creationDate"
        ],
        "properties": {
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric",
            "example": 0
          },
          "_id": {
            "type": "string",
            "description": "The ID of this metric",
            "example": "5902deadbeef667524a01290"
          },
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "my-metric"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "my-metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "_attachedFlagCount": {
            "type": "integer",
            "description": "The number of feature flags currently attached to this metric",
            "example": 0
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/metrics/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "_site": {
            "description": "Details on how to access the metric in the LaunchDarkly UI",
            "example": "{\"href\":\"/experiments/metrics/my-metric/edit\",\"type\":\"text/html\"}",
            "$ref": "#/$defs/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this metric",
            "$ref": "#/$defs/Access"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "_creationDate": {
            "description": "Timestamp of when the metric was created",
            "example": "1628192791148",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "$ref": "#/$defs/Modification"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric",
            "example": "569fdeadbeef1644facecafe"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this metric",
            "example": "{\"_links\":{\"self\":{\"href\":\"/api/v2/members/569fdeadbeef1644facecafe\",\"type\":\"application/json\"}},\"_id\":\"569fdeadbeef1644facecafe\",\"firstName\":\"An\",\"lastName\":\"Example\",\"role\":\"owner\",\"email\":\"an@example.com\"}",
            "$ref": "#/$defs/MemberSummary"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric"
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (<code>true</code>) or to track a conversion when an end user takes an action (<code>false</code>).",
            "example": true
          },
          "successCriteria": {
            "type": "string",
            "description": "For numeric custom metrics, the success criteria",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "unit": {
            "type": "string",
            "description": "For numeric custom metrics, the unit of measure"
          },
          "eventKey": {
            "type": "string",
            "description": "For custom metrics, the event name to use in your code"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          },
          "experiments": {
            "description": "Experiments that use this metric",
            "$ref": "#/$defs/DependentExperimentListRep"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the metric is active",
            "example": true
          },
          "_attachedFeatures": {
            "type": "array",
            "description": "Details on the flags attached to this metric",
            "items": {
              "$ref": "#/$defs/FlagListingRep"
            }
          },
          "_version": {
            "type": "integer",
            "description": "Version of the metric",
            "example": 1
          },
          "selector": {
            "type": "string",
            "description": "For click metrics, the CSS selectors"
          },
          "urls": {
            "description": "For click and pageview metrics, the target URLs",
            "$ref": "#/$defs/UrlMatchers"
          }
        }
      },
      "MetricRepExpandableProperties": {
        "type": "object",
        "properties": {
          "experiments": {
            "description": "Experiments that use this metric",
            "$ref": "#/$defs/DependentExperimentListRep"
          }
        }
      },
      "MetricSeen": {
        "type": "object",
        "properties": {
          "ever": {
            "type": "boolean",
            "description": "Whether the metric has received an event for this iteration",
            "example": true
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when the metric most recently received an event for this iteration",
            "example": 1657129307
          }
        }
      },
      "MetricV2Rep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "example-metric"
          },
          "name": {
            "type": "string",
            "description": "The metric name",
            "example": "Example metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          }
        }
      },
      "MetricsInput": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MetricInput"
        }
      },
      "Modification": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-08-05T19:46:31.148082Z"
          }
        }
      },
      "MultiEnvironmentDependentFlag": {
        "type": "object",
        "required": [
          "key",
          "environments"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The flag name",
            "example": "Example dependent flag"
          },
          "key": {
            "type": "string",
            "description": "The flag key",
            "example": "example-dependent-flag"
          },
          "environments": {
            "type": "array",
            "description": "A list of environments in which the dependent flag appears",
            "items": {
              "$ref": "#/$defs/DependentFlagEnvironment"
            }
          }
        }
      },
      "MultiEnvironmentDependentFlags": {
        "type": "object",
        "required": [
          "items",
          "_links",
          "_site"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of dependent flags with their environment information",
            "items": {
              "$ref": "#/$defs/MultiEnvironmentDependentFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the prerequisite flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/~/features/example-prereq-flag\", \"type\": \"text/html\" }",
            "$ref": "#/$defs/Link"
          }
        }
      },
      "NewMemberForm": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "The member's email",
            "example": "sandy@acme.com"
          },
          "password": {
            "type": "string",
            "description": "The member's password",
            "example": "***"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Sandy"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Smith"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role",
            "example": "reader",
            "enum": [
              "reader",
              "writer",
              "admin",
              "no_access"
            ]
          },
          "customRoles": {
            "type": "array",
            "description": "An array of the member's custom roles",
            "items": {
              "type": "string"
            },
            "example": [
              "customRole1",
              "customRole2"
            ]
          },
          "teamKeys": {
            "type": "array",
            "description": "An array of the member's teams",
            "items": {
              "type": "string"
            },
            "example": [
              "team-1",
              "team-2"
            ]
          }
        }
      },
      "NewMemberFormListPost": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NewMemberForm"
        }
      },
      "NotFoundErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "not_found"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid resource identifier"
          }
        }
      },
      "OAuthProviderKind": {
        "type": "string"
      },
      "ObjectId": {
        "type": "string"
      },
      "OnRegression": {
        "type": "object",
        "properties": {
          "notify": {
            "type": "boolean"
          },
          "rollback": {
            "type": "boolean"
          }
        }
      },
      "Operator": {
        "type": "string"
      },
      "ParameterDefault": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The default value for the given parameter"
          },
          "booleanVariationValue": {
            "type": "boolean",
            "description": "Variation value for boolean flags. Not applicable for non-boolean flags."
          },
          "ruleClause": {
            "description": "Metadata related to add rule instructions",
            "$ref": "#/$defs/RuleClause"
          }
        }
      },
      "ParameterDefaultInput": {
        "type": "object",
        "properties": {
          "value": {},
          "booleanVariationValue": {
            "type": "boolean"
          }
        }
      },
      "ParameterRep": {
        "type": "object",
        "properties": {
          "variationId": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          }
        }
      },
      "ParentResourceRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the parent resource"
          },
          "resource": {
            "type": "string",
            "description": "The parent's resource specifier"
          }
        }
      },
      "PatchFailedErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "patch_failed"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Unprocessable entity. Could not apply patch."
          }
        }
      },
      "PatchOperation": {
        "type": "object",
        "required": [
          "op",
          "path",
          "value"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The type of operation to perform",
            "example": "replace"
          },
          "path": {
            "type": "string",
            "description": "A JSON Pointer string specifying the part of the document to operate on",
            "example": "/exampleField"
          },
          "value": {
            "description": "A JSON value used in \"add\", \"replace\", and \"test\" operations",
            "example": "new example value"
          }
        }
      },
      "PatchWithComment": {
        "type": "object",
        "required": [
          "patch"
        ],
        "properties": {
          "patch": {
            "description": "A JSON patch representation of the change to make",
            "$ref": "#/$defs/JSONPatch"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment"
          }
        }
      },
      "PostFlagScheduledChangesInput": {
        "type": "object",
        "required": [
          "executionDate",
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the scheduled changes",
            "example": "optional comment"
          },
          "executionDate": {
            "description": "When the scheduled changes should be executed",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          },
          "instructions": {
            "description": "The actions to perform on the execution date for these scheduled changes. This should be an array with a single object that looks like <code>{\"kind\": \"scheduled_action\"}</code>. Supported scheduled actions are <code>turnFlagOn</code> and <code>turnFlagOff</code>.",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "Prerequisite": {
        "type": "object",
        "required": [
          "key",
          "variation"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "variation": {
            "type": "integer"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "includeInSnippetByDefault",
          "name",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/my-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "key": {
            "type": "string",
            "description": "The key of this project",
            "example": "my-project"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Describes which client-side SDKs can use new flags by default",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project",
            "example": "My Project"
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "environments": {
            "description": "A paginated list of environments for the project. By default this field is omitted unless expanded by the client.",
            "$ref": "#/$defs/Environments"
          }
        }
      },
      "ProjectListingRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "includeInSnippetByDefault",
          "name",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/my-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "key": {
            "type": "string",
            "description": "The key of this project",
            "example": "my-project"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Describes which client-side SDKs can use new flags by default",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project",
            "example": "My Project"
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          }
        }
      },
      "ProjectPost": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project.",
            "example": "My Project"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the project in your code.",
            "example": "my-project"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default.",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Controls which client-side SDKs can use new flags by default.",
            "$ref": "#/$defs/DefaultClientSideAvailabilityPost"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "environments": {
            "type": "array",
            "description": "Creates the provided environments for this project. If omitted default environments will be created instead.",
            "items": {
              "$ref": "#/$defs/EnvironmentPost"
            }
          }
        }
      },
      "ProjectRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "includeInSnippetByDefault",
          "name",
          "tags",
          "environments"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/my-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "key": {
            "type": "string",
            "description": "The key of this project",
            "example": "my-project"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Describes which client-side SDKs can use new flags by default",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project",
            "example": "My Project"
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "environments": {
            "type": "array",
            "description": "A list of environments for the project",
            "items": {
              "$ref": "#/$defs/Environment"
            }
          }
        }
      },
      "ProjectSummary": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/example-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/example-project",
                "type": "application/json"
              }
            }
          },
          "key": {
            "type": "string",
            "description": "The project key",
            "example": "example-project"
          },
          "name": {
            "type": "string",
            "description": "The project name",
            "example": "Example project"
          }
        }
      },
      "Projects": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "A link to this resource.",
            "example": {
              "self": {
                "href": "/api/v2/projects",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "List of projects.",
            "items": {
              "$ref": "#/$defs/Project"
            }
          },
          "totalCount": {
            "type": "integer"
          }
        }
      },
      "PubNubDetailRep": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "cipherKey": {
            "type": "string"
          }
        }
      },
      "RandomizationUnitInput": {
        "type": "object",
        "required": [
          "randomizationUnit",
          "default",
          "standardRandomizationUnit"
        ],
        "properties": {
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization.",
            "example": "user"
          },
          "default": {
            "type": "boolean",
            "description": "If true, any experiment iterations created within this project will default to using this randomization unit. A project can only have one default randomization unit.",
            "example": true
          },
          "standardRandomizationUnit": {
            "type": "string",
            "description": "One of LaunchDarkly's fixed set of standard randomization units.",
            "enum": [
              "guest",
              "guestTime",
              "organization",
              "request",
              "user",
              "userTime"
            ]
          }
        }
      },
      "RandomizationUnitRep": {
        "type": "object",
        "properties": {
          "randomizationUnit": {
            "type": "string"
          },
          "standardRandomizationUnit": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "_hidden": {
            "type": "boolean"
          },
          "_displayName": {
            "type": "string"
          }
        }
      },
      "RateLimitedErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "rate_limited"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "You've exceeded the API rate limit. Try again later."
          }
        }
      },
      "RecentTriggerBody": {
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "Timestamp of the incoming trigger webhook",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "jsonBody": {
            "type": "object",
            "additionalProperties": {},
            "description": "The marshalled JSON request body for the incoming trigger webhook. If this is empty or contains invalid JSON, the timestamp is recorded but this field will be empty."
          }
        }
      },
      "ReferenceRep": {
        "type": "object",
        "required": [
          "path",
          "hunks"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "File path of the reference",
            "example": "/main/index.js"
          },
          "hint": {
            "type": "string",
            "description": "Programming language used in the file",
            "example": "javascript"
          },
          "hunks": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/HunkRep"
            }
          }
        }
      },
      "RelativeDifferenceRep": {
        "type": "object",
        "properties": {
          "upper": {
            "type": "number",
            "description": "The upper bound",
            "example": 0.42655970355712425
          },
          "lower": {
            "type": "number",
            "description": "The lower bound",
            "example": -0.13708601934659803
          },
          "fromTreatmentId": {
            "type": "string",
            "description": "The treatment ID",
            "example": "92b8354e-360e-4d67-8f13-fa6a46ca8077"
          }
        }
      },
      "RelayAutoConfigCollectionRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of Relay Proxy configurations",
            "items": {
              "$ref": "#/$defs/RelayAutoConfigRep"
            }
          }
        }
      },
      "RelayAutoConfigPost": {
        "type": "object",
        "required": [
          "name",
          "policy"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the Relay Proxy configuration"
          },
          "policy": {
            "type": "array",
            "description": "A description of what environments and projects the Relay Proxy should include or exclude. To learn more, read [Writing an inline policy](https://docs.launchdarkly.com/home/relay-proxy/automatic-configuration#writing-an-inline-policy).",
            "items": {
              "$ref": "#/$defs/Statement"
            }
          }
        }
      },
      "RelayAutoConfigRep": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "policy",
          "fullKey",
          "displayKey",
          "creationDate",
          "lastModified"
        ],
        "properties": {
          "_id": {
            "description": "The ID of the Relay Proxy configuration",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/ObjectId"
          },
          "_creator": {
            "description": "Details on the member who created this Relay Proxy configuration",
            "$ref": "#/$defs/MemberSummary"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this Relay Proxy configuration",
            "$ref": "#/$defs/Access"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the Relay Proxy configuration",
            "example": "Relay Proxy Demo Config"
          },
          "policy": {
            "type": "array",
            "description": "A description of what environments and projects the Relay Proxy should include or exclude",
            "items": {
              "$ref": "#/$defs/Statement"
            }
          },
          "fullKey": {
            "type": "string",
            "description": "The Relay Proxy configuration key"
          },
          "displayKey": {
            "type": "string",
            "description": "The last few characters of the Relay Proxy configuration key, displayed in the LaunchDarkly UI",
            "example": "7f30"
          },
          "creationDate": {
            "description": "Timestamp of when the Relay Proxy configuration was created",
            "example": "1628001602644",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of when the Relay Proxy configuration was most recently modified",
            "example": "1628001602644",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "RepositoryCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "items": {
            "type": "array",
            "description": "An array of repositories",
            "items": {
              "$ref": "#/$defs/RepositoryRep"
            }
          }
        }
      },
      "RepositoryRep": {
        "type": "object",
        "required": [
          "name",
          "type",
          "defaultBranch",
          "enabled",
          "version",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "commitUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the commit",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}"
          },
          "hunkUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the hunk",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}"
          },
          "type": {
            "type": "string",
            "description": "The type of repository",
            "example": "github",
            "enum": [
              "bitbucket",
              "custom",
              "github",
              "gitlab"
            ]
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch",
            "example": "main"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether or not a repository is enabled for code reference scanning",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "The version of the repository's saved information",
            "example": 3
          },
          "branches": {
            "type": "array",
            "description": "An array of the repository's branches that have been scanned for code references",
            "items": {
              "$ref": "#/$defs/BranchRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {}
          },
          "_access": {
            "$ref": "#/$defs/Access"
          }
        }
      },
      "ResolvedContext": {
        "type": "object",
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ResolvedUIBlockElement"
            }
          }
        }
      },
      "ResolvedImage": {
        "type": "object",
        "properties": {
          "isAvatar": {
            "type": "boolean"
          },
          "isIcon": {
            "type": "boolean"
          },
          "sourceUrl": {
            "type": "string"
          }
        }
      },
      "ResolvedTitle": {
        "type": "object",
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ResolvedUIBlockElement"
            }
          },
          "linkToReference": {
            "type": "boolean"
          }
        }
      },
      "ResolvedUIBlockElement": {
        "type": "object",
        "properties": {
          "isBold": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "isTimestamp": {
            "type": "boolean"
          }
        }
      },
      "ResolvedUIBlocks": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/$defs/ResolvedImage"
          },
          "context": {
            "$ref": "#/$defs/ResolvedContext"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "$ref": "#/$defs/ResolvedTitle"
          }
        }
      },
      "ResourceAccess": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/$defs/ActionIdentifier"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "ResourceIDResponse": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "projectKey": {
            "type": "string"
          },
          "environmentKey": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "ResourceId": {
        "type": "object",
        "properties": {
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "staging"
          },
          "flagKey": {
            "type": "string",
            "description": "Deprecated, use <code>key</code> instead"
          },
          "key": {
            "type": "string",
            "description": "The key of the flag or segment",
            "example": "example-key"
          },
          "kind": {
            "description": "The type of resource, <code>flag</code> or <code>segment</code>",
            "example": "segment",
            "$ref": "#/$defs/ResourceKind"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "example-project"
          }
        }
      },
      "ResourceKind": {
        "type": "string"
      },
      "ReviewOutput": {
        "type": "object",
        "required": [
          "_id",
          "kind"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "creationDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "comment": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          }
        }
      },
      "ReviewResponse": {
        "type": "object",
        "required": [
          "_id",
          "kind"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The approval request ID",
            "example": "12ab3c45de678910abc12345"
          },
          "kind": {
            "type": "string",
            "description": "The type of review action to take",
            "example": "approve",
            "enum": [
              "approve",
              "decline",
              "comment"
            ]
          },
          "creationDate": {
            "description": "Timestamp of when the request was created",
            "example": "1653606981113",
            "$ref": "#/$defs/UnixMillis"
          },
          "comment": {
            "type": "string",
            "description": "A comment describing the approval response",
            "example": "Approved!"
          },
          "memberId": {
            "type": "string",
            "description": "ID of account member that reviewed request",
            "example": "12ab3c45de678910abc12345"
          }
        }
      },
      "RoleType": {
        "type": "string"
      },
      "Rollout": {
        "type": "object",
        "required": [
          "variations"
        ],
        "properties": {
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/WeightedVariation"
            }
          },
          "experimentAllocation": {
            "$ref": "#/$defs/ExperimentAllocationRep"
          },
          "seed": {
            "type": "integer"
          },
          "bucketBy": {
            "type": "string"
          },
          "contextKind": {
            "type": "string"
          }
        }
      },
      "RootResponse": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Link"
        }
      },
      "Rule": {
        "type": "object",
        "required": [
          "clauses",
          "trackEvents"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The flag rule ID"
          },
          "variation": {
            "type": "integer",
            "description": "The index of the variation, from the array of variations for this flag"
          },
          "rollout": {
            "description": "Details on the percentage rollout, if it exists",
            "$ref": "#/$defs/Rollout"
          },
          "clauses": {
            "type": "array",
            "description": "An array of clauses used for individual targeting based on attributes",
            "items": {
              "$ref": "#/$defs/Clause"
            }
          },
          "trackEvents": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for this rule"
          },
          "description": {
            "type": "string",
            "description": "The rule description"
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "RuleClause": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "The attribute the rule applies to, for example, last name or email address"
          },
          "op": {
            "type": "string",
            "description": "The operator to apply to the given attribute",
            "enum": [
              "in",
              "endsWith",
              "startsWith",
              "matches",
              "contains",
              "lessThan",
              "lessThanOrEqual",
              "greaterThan",
              "greaterThanOrEqual",
              "before",
              "after",
              "segmentMatch",
              "semVerEqual",
              "semVerLessThan",
              "semVerGreaterThan"
            ]
          },
          "negate": {
            "type": "boolean",
            "description": "Whether the operator should be negated"
          }
        }
      },
      "ScheduleConditionInput": {
        "type": "object",
        "properties": {
          "scheduleKind": {
            "description": "Whether the scheduled execution of the workflow stage is relative or absolute. If relative, the <code>waitDuration</code> and <code>waitDurationUnit</code> specify when the execution occurs. If absolute, the <code>executionDate</code> specifies when the execution occurs.",
            "example": "relative",
            "enum": [
              "absolute",
              "relative"
            ],
            "$ref": "#/$defs/ScheduleKind"
          },
          "executionDate": {
            "description": "For workflow stages whose scheduled execution is absolute, the time, in Unix milliseconds, when the stage should start.",
            "example": "1706810400000",
            "$ref": "#/$defs/UnixMillis"
          },
          "waitDuration": {
            "type": "integer",
            "description": "For workflow stages whose scheduled execution is relative, how far in the future the stage should start.",
            "example": 2
          },
          "waitDurationUnit": {
            "description": "For workflow stages whose scheduled execution is relative, the unit of measure for the <code>waitDuration</code>.",
            "example": "calendarDay",
            "enum": [
              "minute",
              "hour",
              "calendarDay",
              "calendarWeek"
            ],
            "$ref": "#/$defs/DurationUnit"
          },
          "executeNow": {
            "type": "boolean",
            "description": "Whether the workflow stage should be executed immediately",
            "example": false
          }
        }
      },
      "ScheduleConditionOutput": {
        "type": "object",
        "properties": {
          "scheduleKind": {
            "$ref": "#/$defs/ScheduleKind"
          },
          "executionDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "waitDuration": {
            "type": "integer"
          },
          "waitDurationUnit": {
            "$ref": "#/$defs/DurationUnit"
          }
        }
      },
      "ScheduleKind": {
        "type": "string"
      },
      "SdkListRep": {
        "type": "object",
        "required": [
          "_links",
          "sdks"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "sdks": {
            "type": "array",
            "description": "The list of SDK names",
            "items": {
              "type": "string"
            },
            "example": [
              "Android",
              "Java",
              "Node.js"
            ]
          }
        }
      },
      "SdkVersionListRep": {
        "type": "object",
        "required": [
          "_links",
          "sdkVersions"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "sdkVersions": {
            "type": "array",
            "description": "The list of SDK names and versions",
            "items": {
              "$ref": "#/$defs/SdkVersionRep"
            },
            "example": [
              {
                "sdk": "Android",
                "version": "3.1.2"
              },
              {
                "sdk": "Android",
                "version": "3.1.5"
              },
              {
                "sdk": "C",
                "version": "2.4.6"
              }
            ]
          }
        }
      },
      "SdkVersionRep": {
        "type": "object",
        "required": [
          "sdk",
          "version"
        ],
        "properties": {
          "sdk": {
            "type": "string",
            "description": "The SDK name, or \"Unknown\""
          },
          "version": {
            "type": "string",
            "description": "The version number, or \"Unknown\""
          }
        }
      },
      "SegmentBody": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment",
            "example": "Example segment"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "example-segment"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose",
            "example": "Bundle our sample customers together"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the segment",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether to create a standard segment (false) or a Big Segment (true). Only use a Big Segment if you need to add more than 15,000 individual targets.",
            "example": false
          },
          "unboundedContextKind": {
            "type": "string",
            "description": "If unbounded is true, you can use this field to set the Big Segment's context kind",
            "example": "device"
          }
        }
      },
      "SegmentId": {
        "type": "string"
      },
      "SegmentMetadata": {
        "type": "object",
        "properties": {
          "envId": {
            "type": "string"
          },
          "segmentId": {
            "$ref": "#/$defs/SegmentId"
          },
          "version": {
            "type": "integer"
          },
          "includedCount": {
            "type": "integer"
          },
          "excludedCount": {
            "type": "integer"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "SegmentTarget": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contextKind": {
            "type": "string"
          }
        }
      },
      "SegmentUserList": {
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remove": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SegmentUserState": {
        "type": "object",
        "properties": {
          "included": {
            "$ref": "#/$defs/SegmentUserList"
          },
          "excluded": {
            "$ref": "#/$defs/SegmentUserList"
          }
        }
      },
      "Series": {
        "type": "object",
        "required": [
          "time",
          "value"
        ],
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp"
          },
          "value": {
            "type": "number",
            "description": "The value for the given timestamp"
          }
        }
      },
      "SeriesIntervalsRep": {
        "type": "object",
        "required": [
          "series"
        ],
        "properties": {
          "series": {
            "type": "array",
            "description": "An array of timestamps and values for a given meter",
            "items": {
              "$ref": "#/$defs/Series"
            }
          }
        }
      },
      "SeriesListRep": {
        "type": "object",
        "required": [
          "_links",
          "metadata",
          "series"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "metadata": {
            "type": "array",
            "description": "Metadata about each series",
            "items": {
              "$ref": "#/$defs/SeriesMetadataRep"
            }
          },
          "series": {
            "type": "array",
            "description": "An array of data points with timestamps",
            "items": {
              "$ref": "#/$defs/SeriesTimeSliceRep"
            }
          }
        }
      },
      "SeriesMetadataRep": {
        "type": "object",
        "additionalProperties": {}
      },
      "SeriesTimeSliceRep": {
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "SlicedResultsRep": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "An attribute that results are sliced by",
            "example": "country"
          },
          "attributeValue": {
            "type": "string",
            "description": "Attribute Value for 'attribute'",
            "example": "Canada"
          },
          "treatmentResults": {
            "type": "array",
            "description": "A list of the results for each treatment",
            "items": {
              "$ref": "#/$defs/TreatmentResultRep"
            }
          }
        }
      },
      "SourceEnv": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the source environment to clone from"
          },
          "version": {
            "type": "integer",
            "description": "(Optional) The version number of the source environment to clone from. Used for optimistic locking"
          }
        }
      },
      "StageInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The stage name",
            "example": "10% rollout on day 1"
          },
          "executeConditionsInSequence": {
            "type": "boolean",
            "description": "Whether to execute the conditions in sequence for the given stage",
            "example": true
          },
          "conditions": {
            "type": "array",
            "description": "An array of conditions for the stage",
            "items": {
              "$ref": "#/$defs/ConditionInput"
            },
            "example": [
              {
                "kind": "schedule",
                "scheduleKind": "relative",
                "waitDuration": 2,
                "waitDurationUnit": "calendarDay"
              }
            ]
          },
          "action": {
            "description": "An <code>instructions</code> field containing an array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{\"instructions\": [{ \"kind\": \"turnFlagOn\"}]}",
            "$ref": "#/$defs/ActionInput"
          }
        }
      },
      "StageOutput": {
        "type": "object",
        "required": [
          "_id",
          "conditions",
          "action",
          "_execution"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this stage",
            "example": "12ab3c45de678910abc12345"
          },
          "name": {
            "type": "string",
            "description": "The stage name",
            "example": "10% rollout on day 1"
          },
          "conditions": {
            "type": "array",
            "description": "An array of conditions for the stage",
            "items": {
              "$ref": "#/$defs/ConditionOutput"
            },
            "example": [
              {
                "_execution": {
                  "status": "completed"
                },
                "id": "12ab3c45de678910abc12345",
                "kind": "schedule",
                "scheduleKind": "relative",
                "waitDuration": 2,
                "waitDurationUnit": "calendarDay"
              }
            ]
          },
          "action": {
            "description": "The type of instruction, and an array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{ \"kind\": \"patch\", \"instructions\": [{ \"kind\": \"turnFlagOn\"}] }",
            "$ref": "#/$defs/ActionOutput"
          },
          "_execution": {
            "description": "Details on the execution of this stage",
            "example": "{ \"status\": \"completed\" }",
            "$ref": "#/$defs/ExecutionOutput"
          }
        }
      },
      "Statement": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The <code>resources</code> and <code>notActions</code> fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The <code>actions</code> and <code>notResources</code> fields must be empty to use this field.",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            }
          },
          "effect": {
            "description": "Valid values: <code>allow</code>, <code>deny</code>",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ],
            "$ref": "#/$defs/Effect"
          }
        }
      },
      "StatementPost": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*:flag/*;testing-tag"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The <code>resources</code> field must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The <code>actions</code> field must be empty to use this field.",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            }
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ],
            "$ref": "#/$defs/Effect"
          }
        }
      },
      "StatementPostData": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*:flag/*;testing-tag"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The <code>resources</code> field must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The <code>actions</code> field must be empty to use this field.",
            "items": {
              "$ref": "#/$defs/ActionSpecifier"
            }
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ],
            "$ref": "#/$defs/Effect"
          }
        }
      },
      "StatementPostList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StatementPost"
        }
      },
      "StatisticCollectionRep": {
        "type": "object",
        "required": [
          "flags",
          "_links"
        ],
        "properties": {
          "flags": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/StatisticRep"
              }
            },
            "description": "A map of flag keys to a list of code reference statistics for each code repository in which the flag key appears"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "StatisticRep": {
        "type": "object",
        "required": [
          "name",
          "sourceLink",
          "defaultBranch",
          "enabled",
          "version",
          "hunkCount",
          "fileCount",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch",
            "example": "main"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether or not a repository is enabled for code reference scanning",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "The version of the repository's saved information",
            "example": 3
          },
          "hunkCount": {
            "type": "integer",
            "description": "The number of code reference hunks in which the flag appears in this repository"
          },
          "fileCount": {
            "type": "integer",
            "description": "The number of files in which the flag appears in this repository"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "StatisticsRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of code reference statistics for each code repository",
            "items": {
              "$ref": "#/$defs/StatisticRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "StatisticsRoot": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "The location and content type of all projects that have code references",
            "items": {
              "$ref": "#/$defs/Link"
            },
            "example": [
              {
                "href": "/api/v2/code-refs/statistics/example-project-with-code-refs",
                "type": "application/json"
              }
            ]
          },
          "self": {
            "description": "The location and content type for accessing this resource",
            "example": "{\"href\": \"/api/v2/code-refs/statistics\", \"type\": \"application/json\"}",
            "$ref": "#/$defs/Link"
          }
        }
      },
      "StatusConflictErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "optimistic_locking_error"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Conflict. Optimistic lock error. Try again later."
          }
        }
      },
      "StatusServiceUnavailable": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "service_unavailable"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Requested service unavailable"
          }
        }
      },
      "SubjectDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The subject's name"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The subject's avatar"
          }
        }
      },
      "SuccessCriteria": {
        "type": "integer"
      },
      "TagCollection": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "example": [
              "ops",
              "pro"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of tags",
            "example": 103
          }
        }
      },
      "Target": {
        "type": "object",
        "required": [
          "values",
          "variation"
        ],
        "properties": {
          "values": {
            "type": "array",
            "description": "A list of the keys for targets that will receive this variation because of individual targeting",
            "items": {
              "type": "string"
            }
          },
          "variation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve this list of targets"
          },
          "contextKind": {
            "type": "string"
          }
        }
      },
      "TargetResourceRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "example": "Example flag name"
          },
          "resources": {
            "type": "array",
            "description": "The resource specifier",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/example-project:env/production:flag/example-flag"
            ]
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the team",
            "example": "Description for this team."
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "example-team"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the team",
            "example": "Example team"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this team",
            "$ref": "#/$defs/Access"
          },
          "_creationDate": {
            "description": "Timestamp of when the team was created",
            "example": "1648671956143",
            "$ref": "#/$defs/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/teams",
                "type": "application/json"
              },
              "roles": {
                "href": "/api/v2/teams/example-team/roles",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/teams/example-team",
                "type": "application/json"
              }
            }
          },
          "_lastModified": {
            "description": "Timestamp of when the team was most recently updated",
            "example": "1648672446072",
            "$ref": "#/$defs/UnixMillis"
          },
          "_version": {
            "type": "integer",
            "description": "The team version",
            "example": 3
          },
          "_idpSynced": {
            "type": "boolean",
            "description": "Whether the team has been synced with an external identity provider (IdP). Team sync is available to customers on an Enterprise plan.",
            "example": true
          },
          "roles": {
            "description": "Paginated list of the custom roles assigned to this team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamCustomRoles"
          },
          "members": {
            "description": "Details on the total count of members that belong to the team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamMembers"
          },
          "projects": {
            "description": "Paginated list of the projects that the team has any write access to. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamProjects"
          },
          "maintainers": {
            "description": "Paginated list of the maintainers assigned to this team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamMaintainers"
          }
        }
      },
      "TeamCustomRole": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the custom role",
            "example": "example-role"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom role",
            "example": "Example role"
          },
          "projects": {
            "description": "Details on the projects where team members have write privileges on at least one custom role action",
            "$ref": "#/$defs/TeamProjects"
          },
          "appliedOn": {
            "description": "Timestamp of when the custom role was assigned to this team",
            "example": "1648672018410",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "TeamCustomRoles": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The number of custom roles assigned to this team",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "An array of the custom roles that have been assigned to this team",
            "items": {
              "$ref": "#/$defs/TeamCustomRole"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams/example-team/roles?limit=25",
                "type": "application/json"
              }
            }
          }
        }
      },
      "TeamImportsRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of details about the members requested to be added to this team",
            "items": {
              "$ref": "#/$defs/MemberImportItem"
            }
          }
        }
      },
      "TeamMaintainers": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The number of maintainers of the team",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "Details on the members that have been assigned as maintainers of the team",
            "items": {
              "$ref": "#/$defs/MemberSummary"
            },
            "example": [
              {
                "_id": "569f183514f4432160000007",
                "_links": {
                  "self": {
                    "href": "/api/v2/members/569f183514f4432160000007",
                    "type": "application/json"
                  }
                },
                "email": "foobar@example.com",
                "firstName": "Foo",
                "lastName": "Bar",
                "role": "reader"
              }
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams/example-team/maintainers?limit=5",
                "type": "application/json"
              }
            }
          }
        }
      },
      "TeamMembers": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total count of members that belong to the team",
            "example": 15
          }
        }
      },
      "TeamProjects": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "Details on each project where team members have write privileges on at least one custom role action",
            "items": {
              "$ref": "#/$defs/ProjectSummary"
            },
            "example": [
              {
                "_links": {
                  "environments": {
                    "href": "/api/v2/projects/example-project/environments",
                    "type": "application/json"
                  },
                  "self": {
                    "href": "/api/v2/projects/example-project",
                    "type": "application/json"
                  }
                },
                "key": "example-project",
                "name": "Example project"
              }
            ]
          }
        }
      },
      "TeamRepExpandableProperties": {
        "type": "object",
        "properties": {
          "roles": {
            "description": "Paginated list of the custom roles assigned to this team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamCustomRoles"
          },
          "members": {
            "description": "Details on the total count of members that belong to the team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamMembers"
          },
          "projects": {
            "description": "Paginated list of the projects that the team has any write access to. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamProjects"
          },
          "maintainers": {
            "description": "Paginated list of the maintainers assigned to this team. Only included if specified in the <code>expand</code> query parameter.",
            "$ref": "#/$defs/TeamMaintainers"
          }
        }
      },
      "Teams": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of teams",
            "items": {
              "$ref": "#/$defs/Team"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams?expand=maintainers%2Cmembers%2Croles%2Cprojects&limit=20",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of teams",
            "example": 1
          }
        }
      },
      "TimestampRep": {
        "type": "object",
        "properties": {
          "milliseconds": {
            "$ref": "#/$defs/UnixMillis"
          },
          "seconds": {
            "type": "integer",
            "format": "int64"
          },
          "rfc3339": {
            "type": "string"
          },
          "simple": {
            "type": "string"
          }
        }
      },
      "TitleRep": {
        "type": "object",
        "properties": {
          "subject": {
            "description": "Details of the subject who initiated the action described in the audit log entry",
            "$ref": "#/$defs/SubjectDataRep"
          },
          "member": {
            "description": "Details of the member who initiated the action described in the audit log entry",
            "$ref": "#/$defs/MemberDataRep"
          },
          "token": {
            "description": "Details of the access token that initiated the action described in the audit log entry",
            "$ref": "#/$defs/TokenDataRep"
          },
          "app": {
            "description": "Details of the authorized application that initiated the action described in the audit log entry",
            "$ref": "#/$defs/AuthorizedAppDataRep"
          },
          "titleVerb": {
            "type": "string",
            "description": "The action and resource recorded in this audit log entry",
            "example": "turned on the flag"
          },
          "title": {
            "type": "string",
            "description": "A description of what occurred, in the format <code>member</code> <code>titleVerb</code> <code>target</code>"
          },
          "target": {
            "description": "Details of the resource acted upon in this audit log entry",
            "example": "[Bob Loblaw](mailto:bob@loblaw.com) turned on the flag [example-flag](https://app.launchdarkly.com/example-project/production/features/example-flag) in Production",
            "$ref": "#/$defs/TargetResourceRep"
          },
          "parent": {
            "$ref": "#/$defs/ParentResourceRep"
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "_id",
          "ownerId",
          "memberId",
          "creationDate",
          "lastModified",
          "_links"
        ],
        "properties": {
          "_id": {
            "description": "The ID of the access token",
            "example": "61095542756dba551110ae21",
            "$ref": "#/$defs/ObjectId"
          },
          "ownerId": {
            "description": "The ID of the owner of the account for the access token",
            "example": "569f514156e003339cfd3917",
            "$ref": "#/$defs/ObjectId"
          },
          "memberId": {
            "description": "The ID of the member who created the access token",
            "example": "569f514183f2164430000002",
            "$ref": "#/$defs/ObjectId"
          },
          "_member": {
            "description": "Details on the member who created the access token",
            "$ref": "#/$defs/MemberSummary"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the access token",
            "example": "Example reader token"
          },
          "description": {
            "type": "string",
            "description": "A description for the access token",
            "example": "A reader token used in testing and examples"
          },
          "creationDate": {
            "description": "Timestamp of when the access token was created",
            "example": "1628001602644",
            "$ref": "#/$defs/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of the last modification of the access token",
            "example": "1628001602644",
            "$ref": "#/$defs/UnixMillis"
          },
          "customRoleIds": {
            "type": "array",
            "description": "A list of custom role IDs to use as access limits for the access token",
            "items": {
              "$ref": "#/$defs/ObjectId"
            },
            "example": []
          },
          "inlineRole": {
            "type": "array",
            "description": "An array of policy statements, with three attributes: effect, resources, actions. May be used in place of a built-in or custom role.",
            "items": {
              "$ref": "#/$defs/Statement"
            },
            "example": []
          },
          "role": {
            "type": "string",
            "description": "Built-in role for the token",
            "example": "reader"
          },
          "token": {
            "type": "string",
            "description": "The token value. When creating or resetting, contains the entire token value. Otherwise, contains the last four characters.",
            "example": "1234"
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether this is a service token or a personal token",
            "example": false
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/tokens",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/tokens/61095542756dba551110ae21",
                "type": "application/json"
              }
            }
          },
          "defaultApiVersion": {
            "type": "integer",
            "description": "The default API version for this token",
            "example": 20220603
          },
          "lastUsed": {
            "description": "Timestamp of when the access token was last used",
            "example": "0",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "TokenDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the token",
            "example": "DevOps token"
          },
          "ending": {
            "type": "string",
            "description": "The last few characters of the token",
            "example": "2345"
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether this is a service token",
            "example": false
          }
        }
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of access tokens",
            "items": {
              "$ref": "#/$defs/Token"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          }
        }
      },
      "TreatmentInput": {
        "type": "object",
        "required": [
          "name",
          "baseline",
          "allocationPercent",
          "parameters"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The treatment name",
            "example": "Treatment 1"
          },
          "baseline": {
            "type": "boolean",
            "description": "Whether this treatment is the baseline to compare other treatments against",
            "example": true
          },
          "allocationPercent": {
            "type": "string",
            "description": "The percentage of traffic allocated to this treatment during the iteration",
            "example": "10"
          },
          "parameters": {
            "type": "array",
            "description": "Details on the flag and variation to use for this treatment",
            "items": {
              "$ref": "#/$defs/TreatmentParameterInput"
            }
          }
        }
      },
      "TreatmentParameterInput": {
        "type": "object",
        "required": [
          "flagKey",
          "variationId"
        ],
        "properties": {
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "example-flag-for-experiment"
          },
          "variationId": {
            "type": "string",
            "description": "The ID of the flag variation",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          }
        }
      },
      "TreatmentRep": {
        "type": "object",
        "required": [
          "name",
          "allocationPercent"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The treatment ID. This is the variation ID from the flag.",
            "example": "122c9f3e-da26-4321-ba68-e0fc02eced58"
          },
          "name": {
            "type": "string",
            "description": "The treatment name. This is the variation name from the flag.",
            "example": "Treatment 1"
          },
          "allocationPercent": {
            "type": "string",
            "description": "The percentage of traffic allocated to this treatment during the iteration",
            "example": "10"
          },
          "baseline": {
            "type": "boolean",
            "description": "Whether this treatment is the baseline to compare other treatments against",
            "example": true
          },
          "parameters": {
            "type": "array",
            "description": "Details on the flag and variation used for this treatment",
            "items": {
              "$ref": "#/$defs/ParameterRep"
            }
          }
        }
      },
      "TreatmentResultRep": {
        "type": "object",
        "properties": {
          "treatmentId": {
            "type": "string",
            "description": "The ID of the treatment",
            "example": "92b8354e-360e-4d67-8f13-fa6a46ca8077"
          },
          "treatmentName": {
            "type": "string",
            "description": "The name of the treatment",
            "example": "variation 25% off"
          },
          "mean": {
            "type": "number",
            "description": "The average value of the variation in this sample. It doesn’t capture the uncertainty in the measurement, so it should not be the only measurement you use to make decisions.",
            "example": 0.5432525951557093
          },
          "credibleInterval": {
            "description": "The range of the metric's values that you should have 90% confidence in.",
            "example": "{\"lower\": 0.4060771673663068, \"upper\": 0.6713222134386467}",
            "$ref": "#/$defs/CredibleIntervalRep"
          },
          "pBest": {
            "type": "number",
            "description": "The likelihood that this variation has the biggest effect on the primary metric. The variation with the highest probability is likely the best of the variations you're testing",
            "example": 0.6083
          },
          "relativeDifferences": {
            "type": "array",
            "description": "A list of the ranges of the metric that you should have 90% confidence in, for each treatment ID. For example, if the range of the relative differences is [-1%, 4%], you can have 90% confidence that the population difference is a number between 1% lower and 4% higher than the control.",
            "items": {
              "$ref": "#/$defs/RelativeDifferenceRep"
            },
            "example": [
              {
                "fromTreatmentId": "92b8354e-360e-4d67-8f13-fa6a46ca8077",
                "lower": -0.13708601934659803,
                "upper": 0.42655970355712425
              }
            ]
          },
          "units": {
            "type": "integer",
            "format": "int64",
            "description": "The number of end users in this variation of the experiment",
            "example": 76
          }
        }
      },
      "TreatmentsInput": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TreatmentInput"
        }
      },
      "TriggerWorkflowCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of flag triggers",
            "items": {
              "$ref": "#/$defs/TriggerWorkflowRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "TriggerWorkflowRep": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The ID of this flag trigger",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/FeatureWorkflowId"
          },
          "_version": {
            "type": "integer",
            "description": "The flag trigger version",
            "example": 1
          },
          "_creationDate": {
            "description": "Timestamp of when the flag trigger was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the flag trigger maintainer",
            "example": "12ab3c45de678910abc12345"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this flag trigger",
            "$ref": "#/$defs/MemberSummary"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the flag trigger is currently enabled",
            "example": true
          },
          "_integrationKey": {
            "type": "string",
            "description": "The unique identifier of the integration for your trigger",
            "example": "generic-trigger"
          },
          "instructions": {
            "description": "Details on the action to perform when triggering",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/$defs/Instructions"
          },
          "_lastTriggeredAt": {
            "description": "Timestamp of when the trigger was most recently executed",
            "example": "1654114600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "_recentTriggerBodies": {
            "type": "array",
            "description": "Details on recent flag trigger requests.",
            "items": {
              "$ref": "#/$defs/RecentTriggerBody"
            }
          },
          "_triggerCount": {
            "type": "integer",
            "description": "Number of times the trigger has been executed",
            "example": 3
          },
          "triggerURL": {
            "type": "string",
            "description": "The unguessable URL for this flag trigger"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "UnauthorizedErrorRep": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "unauthorized"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid access token"
          }
        }
      },
      "UnixMillis": {
        "type": "integer",
        "format": "int64"
      },
      "UpsertContextKindPayload": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The context kind name",
            "example": "organization"
          },
          "description": {
            "type": "string",
            "description": "The context kind description",
            "example": "An example context kind for organizations"
          },
          "hideInTargeting": {
            "type": "boolean",
            "description": "Whether the context kind is hidden. Hidden context kinds are unavailable for targeting. If not specified when the context kind is created, defaults to false.",
            "example": false
          },
          "version": {
            "type": "integer",
            "description": "The context kind version. If not specified when the context kind is created, defaults to 1.",
            "example": 1
          }
        }
      },
      "UpsertFlagDefaultsPayload": {
        "type": "object",
        "required": [
          "tags",
          "temporary",
          "defaultClientSideAvailability",
          "booleanDefaults"
        ],
        "properties": {
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default.",
            "$ref": "#/$defs/DefaultClientSideAvailability"
          },
          "booleanDefaults": {
            "$ref": "#/$defs/BooleanFlagDefaults"
          }
        }
      },
      "UpsertResponseRep": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the create or update operation",
            "example": "success"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "UrlMatcher": {
        "type": "object",
        "additionalProperties": {}
      },
      "UrlMatchers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UrlMatcher"
        }
      },
      "UrlPost": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "exact",
              "canonical",
              "substring",
              "regex"
            ]
          },
          "url": {
            "type": "string"
          },
          "substring": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user key. This is the only mandatory user attribute.",
            "example": "example-user-key"
          },
          "secondary": {
            "type": "string",
            "description": "If provided, used with the user key to generate a variation in percentage rollouts",
            "example": "2398127"
          },
          "ip": {
            "type": "string",
            "description": "The user's IP address",
            "example": "10.10.10.10"
          },
          "country": {
            "type": "string",
            "description": "The user's country",
            "example": "United States"
          },
          "email": {
            "type": "string",
            "description": "The user's email",
            "example": "bob@loblaw.com"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name",
            "example": "Bob"
          },
          "lastName": {
            "type": "string",
            "description": "The user's last name",
            "example": "Loblaw"
          },
          "avatar": {
            "type": "string",
            "description": "An absolute URL to an avatar image.",
            "example": "http://example.com/avatar.png"
          },
          "name": {
            "type": "string",
            "description": "The user's full name",
            "example": "Bob Loblaw"
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether the user is anonymous. If true, this user does not appear on the Contexts list in the LaunchDarkly user interface.",
            "example": false
          },
          "custom": {
            "type": "object",
            "additionalProperties": {},
            "description": "Any other custom attributes for this user. Custom attributes contain any other user data that you would like to use to conditionally target your users."
          },
          "privateAttrs": {
            "type": "array",
            "description": "A list of attribute names that are marked as private. You can use these attributes in targeting rules and segments. If you are using a server-side SDK, the SDK will not send the private attribute back to LaunchDarkly. If you are using a client-side SDK, the SDK will send the private attribute back to LaunchDarkly for evaluation. However, the SDK won't send the attribute to LaunchDarkly in events data, LaunchDarkly won't store the private attribute, and the private attribute will not appear on the Contexts list.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserAttributeNamesRep": {
        "type": "object",
        "properties": {
          "private": {
            "type": "array",
            "description": "private attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "SSN",
              "credit_card_number"
            ]
          },
          "custom": {
            "type": "array",
            "description": "custom attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "Age",
              "FavoriteFood",
              "FavoriteColor"
            ]
          },
          "standard": {
            "type": "array",
            "description": "standard attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "key",
              "ip",
              "firstName",
              "lastName",
              "country",
              "anonymous"
            ]
          }
        }
      },
      "UserFlagSetting": {
        "type": "object",
        "required": [
          "_links",
          "_value",
          "setting"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources.",
            "example": {
              "sort.order": {
                "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order",
                "type": "application/json"
              }
            }
          },
          "_value": {
            "description": "The value of the flag variation that the user receives. If there is no defined default rule, this is null.",
            "example": "true"
          },
          "setting": {
            "description": "Whether the user is explicitly targeted to receive a particular variation. The setting is false if you have turned off a feature flag for a user. It is null if you haven't assigned that user to a specific variation.",
            "example": "null"
          },
          "reason": {
            "description": "Contains information about why that variation was selected.",
            "example": "{\"kind\": \"RULE_MATCH\"}",
            "$ref": "#/$defs/EvaluationReason"
          }
        }
      },
      "UserFlagSettings": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/UserFlagSetting"
            },
            "description": "An array of flag settings for the user",
            "example": {
              "alternate.page": {
                "_links": {
                  "self": {
                    "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page",
                    "type": "application/json"
                  }
                },
                "_value": false,
                "setting": null
              },
              "sort.order": {
                "_links": {
                  "self": {
                    "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order",
                    "type": "application/json"
                  }
                },
                "_value": true,
                "setting": null
              }
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags",
                "type": "application/json"
              }
            }
          }
        }
      },
      "UserRecord": {
        "type": "object",
        "properties": {
          "lastPing": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time this user was seen",
            "example": "2022-06-28T23:21:29.176609596Z"
          },
          "environmentId": {
            "description": "The environment ID",
            "example": "1234a56b7c89d012345e678f",
            "$ref": "#/$defs/ObjectId"
          },
          "ownerId": {
            "description": "The ID of the member who is the owner for this account",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/ObjectId"
          },
          "user": {
            "description": "Details on the user",
            "$ref": "#/$defs/User"
          },
          "sortValue": {
            "description": "If this record is returned as part of a list, the value used to sort the list. This is only included when the <code>sort</code> query parameter is specified. It is a time, in Unix milliseconds, if the sort is by <code>lastSeen</code>. It is a user key if the sort is by <code>userKey</code>.",
            "example": "example-user-key"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/users/my-project/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/users/my-project/my-environment/my-user",
                "type": "application/json"
              },
              "settings": {
                "href": "/api/v2/users/my-project/my-environment/my-user/flags",
                "type": "text/html"
              },
              "site": {
                "href": "/my-project/my-environment/users/my-user",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this user",
            "$ref": "#/$defs/Access"
          }
        }
      },
      "UserRecordRep": {
        "type": "object",
        "properties": {
          "lastPing": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time this user was seen",
            "example": "2022-06-28T23:21:29.176609596Z"
          },
          "environmentId": {
            "description": "The environment ID",
            "example": "1234a56b7c89d012345e678f",
            "$ref": "#/$defs/ObjectId"
          },
          "ownerId": {
            "description": "The ID of the member who is the owner for this account",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/$defs/ObjectId"
          },
          "user": {
            "description": "Details on the user",
            "$ref": "#/$defs/User"
          },
          "sortValue": {
            "description": "If this record is returned as part of a list, the value used to sort the list. This is only included when the <code>sort</code> query parameter is specified. It is a time, in Unix milliseconds, if the sort is by <code>lastSeen</code>. It is a user key if the sort is by <code>userKey</code>.",
            "example": "example-user-key"
          }
        }
      },
      "UserSegment": {
        "type": "object",
        "required": [
          "name",
          "tags",
          "creationDate",
          "key",
          "_links",
          "rules",
          "version",
          "deleted",
          "generation"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment.",
            "example": "Example segment"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose. Defaults to <code>null</code> and is omitted in the response if not provided.",
            "example": "Bundle our sample customers together"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the segment. Defaults to an empty array.",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "creationDate": {
            "description": "Timestamp of when the segment was created",
            "example": "1654104600000",
            "$ref": "#/$defs/UnixMillis"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "example-segment"
          },
          "included": {
            "type": "array",
            "description": "An array of keys for included targets. Included individual targets are always segment members, regardless of segment rules. For Big Segments this array is either empty or omitted.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-user-key-to-include"
            ]
          },
          "excluded": {
            "type": "array",
            "description": "An array of keys for excluded targets. Segment rules bypass individual excluded targets, so they will never be included based on rules. Excluded targets may still be included explicitly. This value is omitted for Big Segments.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-user-key-to-exclude"
            ]
          },
          "includedContexts": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/SegmentTarget"
            }
          },
          "excludedContexts": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/SegmentTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "rules": {
            "type": "array",
            "description": "An array of the targeting rules for this segment.",
            "items": {
              "$ref": "#/$defs/UserSegmentRule"
            },
            "example": [
              {
                "_id": "1234a56b7c89d012345e678f",
                "clauses": [
                  {
                    "_id": "12ab3c45de678910fab12345",
                    "attribute": "email",
                    "negate": false,
                    "op": "endsWith",
                    "values": [
                      ".edu"
                    ]
                  }
                ]
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Version of the segment",
            "example": 1
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether the segment has been deleted",
            "example": false
          },
          "_access": {
            "$ref": "#/$defs/Access"
          },
          "_flags": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/FlagListingRep"
            }
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether this is a standard segment (<code>false</code>) or a Big Segment (<code>true</code>). If omitted, the segment is a standard segment.",
            "example": false
          },
          "unboundedContextKind": {
            "type": "string"
          },
          "generation": {
            "type": "integer",
            "description": "For Big Segments, how many times this segment has been created"
          },
          "_unboundedMetadata": {
            "description": "Details on the external data store backing this segment. Only applies to Big Segments.",
            "$ref": "#/$defs/SegmentMetadata"
          },
          "_external": {
            "type": "string",
            "description": "The external data store backing this segment. Only applies to Big Segments.",
            "example": "amplitude"
          },
          "_externalLink": {
            "type": "string",
            "description": "The URL for the external data store backing this segment. Only applies to Big Segments.",
            "example": "https://analytics.amplitude.com/org/1234/cohort/123abc"
          },
          "_importInProgress": {
            "type": "boolean",
            "description": "Whether an import is currently in progress for the specified segment. Only applies to Big Segments.",
            "example": false
          }
        }
      },
      "UserSegmentRule": {
        "type": "object",
        "required": [
          "clauses"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "clauses": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Clause"
            }
          },
          "weight": {
            "type": "integer"
          },
          "rolloutContextKind": {
            "type": "string"
          },
          "bucketBy": {
            "type": "string"
          }
        }
      },
      "UserSegments": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of segments",
            "items": {
              "$ref": "#/$defs/UserSegment"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "Users": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/user-search/my-project/my-environment?after=1647993600000&limit=20&searchAfter=my-user&sort=userKey",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/user-search/my-project/my-environment?after=1647993600000&limit=20&sort=userKey",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of users in the environment",
            "example": 245
          },
          "items": {
            "type": "array",
            "description": "Details on the users",
            "items": {
              "$ref": "#/$defs/UserRecord"
            }
          }
        }
      },
      "UsersRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/users/my-project/my-environment?after=1647993600000&limit=20&searchAfter=my-user",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/users/my-project/my-environment?after=1647993600000&limit=20",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of users in the environment",
            "example": 245
          },
          "items": {
            "type": "array",
            "description": "Details on the users",
            "items": {
              "$ref": "#/$defs/UserRecord"
            }
          }
        }
      },
      "ValuePut": {
        "type": "object",
        "properties": {
          "setting": {
            "description": "The variation value to set for the context. Must match the flag's variation type.",
            "example": "existing_variation_value_to_use"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "make sure this context experiences a specific variation"
          }
        }
      },
      "Variate": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {},
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Variation": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the variation. Leave empty when you are creating a flag."
          },
          "value": {
            "description": "The value of the variation. For boolean flags, this must be <code>true</code> or <code>false</code>. For multivariate flags, this may be a string, number, or JSON object."
          },
          "description": {
            "type": "string",
            "description": "Description of the variation. Defaults to an empty string, but is omitted from the response if not set."
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the variation. Defaults to an empty string, but is omitted from the response if not set."
          }
        }
      },
      "VariationOrRolloutRep": {
        "type": "object",
        "properties": {
          "variation": {
            "type": "integer",
            "description": "The index of the variation, from the array of variations for this flag"
          },
          "rollout": {
            "description": "Details on the percentage rollout, if it exists",
            "$ref": "#/$defs/Rollout"
          }
        }
      },
      "VariationSummary": {
        "type": "object",
        "required": [
          "rules",
          "nullRules",
          "targets"
        ],
        "properties": {
          "rules": {
            "type": "integer"
          },
          "nullRules": {
            "type": "integer"
          },
          "targets": {
            "type": "integer"
          },
          "isFallthrough": {
            "type": "boolean"
          },
          "isOff": {
            "type": "boolean"
          },
          "rollout": {
            "type": "integer"
          },
          "bucketBy": {
            "type": "string"
          }
        }
      },
      "VersionsRep": {
        "type": "object",
        "required": [
          "validVersions",
          "latestVersion",
          "currentVersion"
        ],
        "properties": {
          "validVersions": {
            "type": "array",
            "description": "A list of all valid API versions. To learn more about our versioning, read [Versioning](https://apidocs.launchdarkly.com/#section/Overview/Versioning).",
            "items": {
              "$ref": "#/$defs/DateVersion"
            }
          },
          "latestVersion": {
            "description": "The most recently released version of the API",
            "example": "20220603",
            "$ref": "#/$defs/DateVersion"
          },
          "currentVersion": {
            "description": "The version of the API currently in use. Typically this is the API version specified for your access token. If you add the <code>LD-API-Version: beta</code> header to your request, this will be equal to the <code>latestVersion</code>.",
            "example": "20220603",
            "$ref": "#/$defs/DateVersion"
          },
          "beta": {
            "type": "boolean",
            "description": "Whether the version of the API currently is use is a beta version. This is always <code>true</code> if you add the <code>LD-API-Version: beta</code> header to your request.",
            "example": false
          }
        }
      },
      "Webhook": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "url",
          "on",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of this webhook",
            "example": "57be1db38b75bf0772d11384"
          },
          "name": {
            "type": "string",
            "description": "A human-readable name for this webhook",
            "example": "Example hook"
          },
          "url": {
            "type": "string",
            "description": "The URL to which LaunchDarkly sends an HTTP POST payload for this webhook",
            "example": "http://www.example.com"
          },
          "secret": {
            "type": "string",
            "description": "The secret for this webhook",
            "example": "frobozz"
          },
          "statements": {
            "type": "array",
            "description": "Represents a Custom role policy, defining a resource kinds filter the webhook responds to.",
            "items": {
              "$ref": "#/$defs/Statement"
            }
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not this webhook is enabled",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this webhook",
            "items": {
              "type": "string"
            },
            "example": [
              "examples"
            ]
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this webhook",
            "$ref": "#/$defs/Access"
          }
        }
      },
      "Webhooks": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of webhooks",
            "items": {
              "$ref": "#/$defs/Webhook"
            }
          }
        }
      },
      "WeightedVariation": {
        "type": "object",
        "required": [
          "variation",
          "weight"
        ],
        "properties": {
          "variation": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "_untracked": {
            "type": "boolean"
          }
        }
      },
      "WorkflowTemplateMetadata": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/WorkflowTemplateParameter"
            }
          }
        }
      },
      "WorkflowTemplateOutput": {
        "type": "object",
        "required": [
          "_id",
          "_key",
          "_creationDate",
          "_ownerId",
          "_maintainerId",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "_key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "_creationDate": {
            "$ref": "#/$defs/UnixMillis"
          },
          "_ownerId": {
            "type": "string"
          },
          "_maintainerId": {
            "type": "string"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            }
          },
          "description": {
            "type": "string"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/StageOutput"
            }
          }
        }
      },
      "WorkflowTemplateParameter": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The ID of the condition or instruction referenced by this parameter",
            "$ref": "#/$defs/ObjectId"
          },
          "path": {
            "type": "string",
            "description": "The path of the property to parameterize, relative to its parent condition or instruction"
          },
          "default": {
            "description": "The default value of the parameter and other relevant metadata",
            "$ref": "#/$defs/ParameterDefault"
          },
          "valid": {
            "type": "boolean",
            "description": "Whether the default value is valid for the target flag and environment"
          }
        }
      },
      "WorkflowTemplateParameterInput": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "default": {
            "$ref": "#/$defs/ParameterDefaultInput"
          }
        }
      },
      "WorkflowTemplatesListingOutputRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/WorkflowTemplateOutput"
            }
          }
        }
      },
      "createCopyFlagConfigApprovalRequestRequest": {
        "type": "object",
        "required": [
          "description",
          "source"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the approval request",
            "example": "optional comment"
          },
          "description": {
            "type": "string",
            "description": "A brief description of your changes",
            "example": "copy flag settings to another environment"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "source": {
            "description": "The flag to copy",
            "$ref": "#/$defs/sourceFlag"
          },
          "includedActions": {
            "type": "array",
            "description": "Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If neither are included, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateFallthrough",
                "updateOffVariation",
                "updateRules",
                "updateTargets",
                "updatePrerequisites"
              ]
            },
            "example": [
              "updateOn"
            ]
          },
          "excludedActions": {
            "type": "array",
            "description": "Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If neither are included, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateFallthrough",
                "updateOffVariation",
                "updateRules",
                "updateTargets",
                "updatePrerequisites"
              ]
            },
            "example": [
              "updateOn"
            ]
          }
        }
      },
      "createFlagConfigApprovalRequestRequest": {
        "type": "object",
        "required": [
          "description",
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the approval request",
            "example": "optional comment"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the changes you're requesting",
            "example": "Requesting to update targeting"
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag. Review the [Update feature flag](/tag/Feature-flags) documentation for details on available instructions.",
            "example": "[{\"kind\": \"addTargets\", \"values\": [ \"context-key-123abc\"], \"variationId\": \"ce67d625-a8b9-4fb5-a344-ab909d9d4f4d\" }]",
            "$ref": "#/$defs/Instructions"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1653926400000",
            "$ref": "#/$defs/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "The ID of a scheduled change. Include this if your <code>instructions</code> include editing or deleting a scheduled change.",
            "example": "6297ed79dee7dc14e1f9a80c"
          },
          "integrationConfig": {
            "description": "Additional approval request fields for third-party integration approval systems. If you are using a third-party integration to manage approval requests, these additional fields will be described in the <code>manifest.json</code> for that integration, at https://github.com/launchdarkly/integration-framework.",
            "$ref": "#/$defs/FormVariableConfig"
          }
        }
      },
      "customProperty": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom property of this type.",
            "example": "Jira issues"
          },
          "value": {
            "type": "array",
            "description": "An array of values for the custom property data to associate with this flag.",
            "items": {
              "type": "string"
            },
            "example": [
              "is-123",
              "is-456"
            ]
          }
        }
      },
      "flagDefaultsApiBaseRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "flagDefaultsRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default. Set <code>usingMobileKey</code> to make the flag available for mobile SDKs. Set <code>usingEnvironmentId</code> to make the flag available for client-side SDKs.",
            "example": "{\"usingMobileKey\": true, \"usingEnvironmentId\": false}",
            "$ref": "#/$defs/ClientSideAvailability"
          },
          "booleanDefaults": {
            "description": "Defaults for boolean flags within this project",
            "$ref": "#/$defs/BooleanDefaults"
          }
        }
      },
      "flagLinkPost": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The flag link key",
            "example": "example-flag-link"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key for an integration whose <code>manifest.json</code> includes the <code>flagLink</code> capability, if this is a flag link for an existing integration. Do not include for URL flag links."
          },
          "timestamp": {
            "description": "The time, in Unix milliseconds, to mark this flag link as associated with the external URL. If omitted, defaults to the creation time of this flag link.",
            "$ref": "#/$defs/UnixMillis"
          },
          "deepLink": {
            "type": "string",
            "description": "The URL for the external resource you are linking the flag to",
            "example": "https://example.com/archives/123123123"
          },
          "title": {
            "type": "string",
            "description": "The title of the flag link",
            "example": "Example link title"
          },
          "description": {
            "type": "string",
            "description": "The description of the flag link",
            "example": "Example link description"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata required by this integration in order to create a flag link, if this is a flag link for an existing integration. Defined in the integration's <code>manifest.json</code> file under <code>flagLink</code>."
          }
        }
      },
      "followersPerFlag": {
        "type": "object",
        "properties": {
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "example-flag-key"
          },
          "followers": {
            "type": "array",
            "description": "A list of members who are following this flag",
            "items": {
              "$ref": "#/$defs/FollowFlagMember"
            }
          }
        }
      },
      "instructionUserRequest": {
        "type": "object",
        "required": [
          "kind",
          "flagKey",
          "variationId"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of change to make to the removal date for this user from individual targeting for this flag.",
            "example": "addExpireUserTargetDate",
            "enum": [
              "addExpireUserTargetDate",
              "updateExpireUserTargetDate",
              "removeExpireUserTargetDate"
            ]
          },
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "sample-flag-key"
          },
          "variationId": {
            "type": "string",
            "description": "ID of a variation on the flag",
            "example": "ce12d345-a1b2-4fb5-a123-ab123d4d5f5d"
          },
          "value": {
            "type": "integer",
            "description": "The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>.",
            "example": 1653469200000
          },
          "version": {
            "type": "integer",
            "description": "The version of the flag variation to update. You can retrieve this by making a GET request for the flag. Required if <code>kind</code> is <code>updateExpireUserTargetDate</code>.",
            "example": 1
          }
        }
      },
      "ipList": {
        "type": "object",
        "required": [
          "addresses",
          "outboundAddresses"
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "description": "A list of the IP addresses LaunchDarkly's service uses",
            "items": {
              "type": "string"
            },
            "example": [
              "104.156.80.0/20",
              "151.101.0.0/16"
            ]
          },
          "outboundAddresses": {
            "type": "array",
            "description": "A list of the IP addresses outgoing webhook notifications use",
            "items": {
              "type": "string"
            },
            "example": [
              "52.21.152.96/32"
            ]
          }
        }
      },
      "membersPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"update_action\"}</code>. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"replaceMemberRoles\", \"value\": \"reader\" } ]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "oauthClientPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of your new LaunchDarkly OAuth 2.0 client."
          },
          "redirectUri": {
            "type": "string",
            "description": "The redirect URI for your new OAuth 2.0 application. This should be an absolute URL conforming with the standard HTTPS protocol."
          },
          "description": {
            "type": "string",
            "description": "Description of your OAuth 2.0 client."
          }
        }
      },
      "patchFlagsRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating",
            "items": {
              "$ref": "#/$defs/Instruction"
            },
            "example": [
              {
                "kind": "addExpireUserTargetDate",
                "userKey": "sandy",
                "value": 1686412800000,
                "variationId": "ce12d345-a1b2-4fb5-a123-ab123d4d5f5d"
              }
            ]
          }
        }
      },
      "patchSegmentInstruction": {
        "type": "object",
        "required": [
          "kind",
          "userKey",
          "targetType"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of change to make to the user's removal date from this segment",
            "example": "addExpireUserTargetDate",
            "enum": [
              "addExpireUserTargetDate",
              "updateExpireUserTargetDate",
              "removeExpireUserTargetDate"
            ]
          },
          "userKey": {
            "type": "string",
            "description": "A unique key used to represent the user"
          },
          "targetType": {
            "type": "string",
            "description": "The segment's target type",
            "enum": [
              "included",
              "excluded"
            ]
          },
          "value": {
            "type": "integer",
            "description": "The time, in Unix milliseconds, when the user should be removed from this segment. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>.",
            "example": 1653469200000
          },
          "version": {
            "type": "integer",
            "description": "The version of the segment to update. Required if <code>kind</code> is <code>updateExpireUserTargetDate</code>.",
            "example": 1
          }
        }
      },
      "patchSegmentRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional description of changes",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "Semantic patch instructions for the desired changes to the resource",
            "items": {
              "$ref": "#/$defs/patchSegmentInstruction"
            },
            "example": [
              {
                "contextKey": "contextKey",
                "contextKind": "user",
                "kind": "updateExpiringTarget",
                "targetType": "included",
                "value": 1587582000000,
                "version": 0
              }
            ]
          }
        }
      },
      "patchUsersRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating",
            "items": {
              "$ref": "#/$defs/instructionUserRequest"
            }
          }
        }
      },
      "permissionGrantInput": {
        "type": "object",
        "properties": {
          "actionSet": {
            "type": "string",
            "description": "A group of related actions to allow. Specify either <code>actionSet</code> or <code>actions</code>. Use <code>maintainTeam</code> to add team maintainers.",
            "example": "maintainTeam",
            "enum": [
              "maintainTeam"
            ]
          },
          "actions": {
            "type": "array",
            "description": "A list of actions to allow. Specify either <code>actionSet</code> or <code>actions</code>. To learn more, read [Role actions](https://docs.launchdarkly.com/home/members/role-actions).",
            "items": {
              "type": "string"
            },
            "example": [
              "updateTeamMembers"
            ]
          },
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs who receive the permission grant.",
            "items": {
              "type": "string"
            },
            "example": [
              "12ab3c45de678910fgh12345"
            ]
          }
        }
      },
      "postApprovalRequestApplyRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment about the approval request",
            "example": "Looks good, thanks for updating"
          }
        }
      },
      "postApprovalRequestReviewRequest": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of review for this approval request",
            "example": "approve",
            "enum": [
              "approve",
              "comment",
              "decline"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment about the approval request",
            "example": "Looks good, thanks for updating"
          }
        }
      },
      "putBranch": {
        "type": "object",
        "required": [
          "name",
          "head",
          "syncTime"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The branch name",
            "example": "main"
          },
          "head": {
            "type": "string",
            "description": "An ID representing the branch HEAD. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "updateSequenceId": {
            "type": "integer",
            "format": "int64",
            "description": "An optional ID used to prevent older data from overwriting newer data. If no sequence ID is included, the newly submitted data will always be saved.",
            "example": 25
          },
          "syncTime": {
            "description": "A timestamp indicating when the branch was last synced",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          },
          "references": {
            "type": "array",
            "description": "An array of flag references found on the branch",
            "items": {
              "$ref": "#/$defs/ReferenceRep"
            }
          },
          "commitTime": {
            "description": "A timestamp of the current commit",
            "example": "1636558831870",
            "$ref": "#/$defs/UnixMillis"
          }
        }
      },
      "repositoryPost": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "commitUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the commit",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}"
          },
          "hunkUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the hunk",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}"
          },
          "type": {
            "type": "string",
            "description": "The type of repository. If not specified, the default value is <code>custom</code>.",
            "example": "github",
            "enum": [
              "bitbucket",
              "custom",
              "github",
              "gitlab"
            ]
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch. If not specified, the default value is <code>main</code>.",
            "example": "main"
          }
        }
      },
      "sourceFlag": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The environment key for the source environment",
            "example": "example-environment-key"
          },
          "version": {
            "type": "integer",
            "description": "The version of the source flag from which to copy",
            "example": 1
          }
        }
      },
      "subscriptionPost": {
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for your audit log subscription.",
            "example": "Example audit log subscription."
          },
          "statements": {
            "description": "The set of resources you wish to subscribe to audit log notifications for.",
            "$ref": "#/$defs/StatementPostList"
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not you want your subscription to actively send events.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "An array of tags for this subscription.",
            "items": {
              "type": "string"
            },
            "example": [
              "testing-tag"
            ]
          },
          "config": {
            "type": "object",
            "additionalProperties": {},
            "description": "The unique set of fields required to configure an audit log subscription integration of this type. Refer to the <code>formVariables</code> field in the corresponding <code>manifest.json</code> at https://github.com/launchdarkly/integration-framework/tree/main/integrations for a full list of fields for the integration you wish to configure.",
            "example": {
              "optional": "an optional property",
              "required": "the required property",
              "url": "https://example.com"
            }
          },
          "url": {
            "type": "string",
            "description": "Slack webhook receiver URL. Only necessary for legacy Slack webhook integrations."
          },
          "apiKey": {
            "type": "string",
            "description": "Datadog API key. Only necessary for legacy Datadog webhook integrations."
          }
        }
      },
      "teamPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"update_action\"}</code>. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"updateDescription\", \"value\": \"New description for the team\" } ]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "teamPostInput": {
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "properties": {
          "customRoleKeys": {
            "type": "array",
            "description": "List of custom role keys the team will access",
            "items": {
              "type": "string"
            },
            "example": [
              "example-role1",
              "example-role2"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the team",
            "example": "An example team"
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "example-team"
          },
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs who belong to the team",
            "items": {
              "type": "string"
            },
            "example": [
              "12ab3c45de678910fgh12345"
            ]
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the team",
            "example": "Example team"
          },
          "permissionGrants": {
            "type": "array",
            "description": "A list of permission grants. Permission grants allow access to a specific action, without having to create or update a custom role.",
            "items": {
              "$ref": "#/$defs/permissionGrantInput"
            }
          }
        }
      },
      "teamsPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like <code>{\"kind\": \"update_action\"}</code>. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"updateDescription\", \"value\": \"New description for the team\" } ]",
            "$ref": "#/$defs/Instructions"
          }
        }
      },
      "triggerPost": {
        "type": "object",
        "required": [
          "integrationKey"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the trigger",
            "example": "example comment"
          },
          "instructions": {
            "type": "array",
            "description": "The action to perform when triggering. This should be an array with a single object that looks like <code>{\"kind\": \"flag_action\"}</code>. Supported flag actions are <code>turnFlagOn</code> and <code>turnFlagOff</code>.",
            "items": {
              "$ref": "#/$defs/Instruction"
            },
            "example": [
              {
                "kind": "turnFlagOn"
              }
            ]
          },
          "integrationKey": {
            "type": "string",
            "description": "The unique identifier of the integration for your trigger. Use <code>generic-trigger</code> for integrations not explicitly supported.",
            "example": "generic-trigger"
          }
        }
      },
      "upsertPayloadRep": {
        "type": "object",
        "required": [
          "tags",
          "temporary",
          "defaultClientSideAvailability",
          "booleanDefaults"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Link"
            },
            "description": "The location and content type of related resources"
          },
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default.",
            "$ref": "#/$defs/DefaultClientSideAvailability"
          },
          "booleanDefaults": {
            "$ref": "#/$defs/BooleanFlagDefaults"
          }
        }
      },
      "webhookPost": {
        "type": "object",
        "required": [
          "url",
          "sign",
          "on"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-readable name for your webhook",
            "example": "Example hook"
          },
          "url": {
            "type": "string",
            "description": "The URL of the remote webhook",
            "example": "http://www.example.com"
          },
          "secret": {
            "type": "string",
            "description": "If sign is true, and the secret attribute is omitted, LaunchDarkly automatically generates a secret for you.",
            "example": "frobozz"
          },
          "statements": {
            "description": "Represents a Custom role policy, defining a resource kinds filter the webhook should respond to.",
            "$ref": "#/$defs/StatementPostList"
          },
          "sign": {
            "type": "boolean",
            "description": "If sign is false, the webhook does not include a signature header, and the secret can be omitted.",
            "example": true
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not this webhook is enabled.",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this webhook",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      }
    }
}
